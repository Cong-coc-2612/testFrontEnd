{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(watchShowNotification);import{takeLatest}from'redux-saga/effects';import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{COMMON_SHOW_NOTIFICATION}from'redux-saga/actions';function doShowNotification(request){try{if(request.data.type==='error'){toast.error(\"\".concat(request.data.content==='Error: Network Error'?'Mất kết nối, hãy kiểm tra lại đường truyền':request.data.content),{position:\"bottom-right\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});}else if(request.data.type==='success'){toast.success(\"\".concat(request.data.content),{position:\"bottom-right\",autoClose:5000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});}// toast('Wow so easy!', {\n//   position: \"bottom-right\",\n//   autoClose: 5000,\n//   hideProgressBar: false,\n//   closeOnClick: true,\n//   pauseOnHover: true,\n//   draggable: true,\n//   progress: undefined,\n// });\n}catch(err){}}export default function watchShowNotification(){return _regeneratorRuntime.wrap(function watchShowNotification$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(COMMON_SHOW_NOTIFICATION,doShowNotification);case 2:case\"end\":return _context.stop();}}},_marked);}","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/redux-saga/sagas/Common/ShowNotification.tsx"],"names":["watchShowNotification","takeLatest","toast","COMMON_SHOW_NOTIFICATION","doShowNotification","request","data","type","error","content","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","err"],"mappings":"iNAyCyBA,qB,EAzCzB,OAASC,UAAT,KAA2B,oBAA3B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAO,uCAAP,CAEA,OAASC,wBAAT,KAAyC,oBAAzC,CAEA,QAASC,CAAAA,kBAAT,CAA4BC,OAA5B,CAA8D,CAC5D,GAAI,CACF,GAAIA,OAAO,CAACC,IAAR,CAAaC,IAAb,GAAsB,OAA1B,CAAmC,CACjCL,KAAK,CAACM,KAAN,WAAeH,OAAO,CAACC,IAAR,CAAaG,OAAb,GAAyB,sBAAzB,CAAkD,4CAAlD,CAAiGJ,OAAO,CAACC,IAAR,CAAaG,OAA7H,EAAwI,CACtIC,QAAQ,CAAE,cAD4H,CAEtIC,SAAS,CAAE,IAF2H,CAGtIC,eAAe,CAAE,KAHqH,CAItIC,YAAY,CAAE,IAJwH,CAKtIC,YAAY,CAAE,IALwH,CAMtIC,SAAS,CAAE,IAN2H,CAOtIC,QAAQ,CAAEC,SAP4H,CAAxI,EASD,CAVD,IAUO,IAAIZ,OAAO,CAACC,IAAR,CAAaC,IAAb,GAAsB,SAA1B,CAAqC,CAC1CL,KAAK,CAACgB,OAAN,WAAiBb,OAAO,CAACC,IAAR,CAAaG,OAA9B,EAAyC,CACvCC,QAAQ,CAAE,cAD6B,CAEvCC,SAAS,CAAE,IAF4B,CAGvCC,eAAe,CAAE,KAHsB,CAIvCC,YAAY,CAAE,IAJyB,CAKvCC,YAAY,CAAE,IALyB,CAMvCC,SAAS,CAAE,IAN4B,CAOvCC,QAAQ,CAAEC,SAP6B,CAAzC,EASD,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAAC,MAAOE,GAAP,CAAY,CAAG,CAClB,CAED,cAAe,SAAUnB,CAAAA,qBAAV,iJACb,MAAMC,CAAAA,UAAU,CAACE,wBAAD,CAA2BC,kBAA3B,CAAhB,CADa","sourcesContent":["import { takeLatest } from 'redux-saga/effects';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { IRequest, INotification } from 'interfaces/common';\r\nimport { COMMON_SHOW_NOTIFICATION } from 'redux-saga/actions';\r\n\r\nfunction doShowNotification(request: IRequest<INotification>) {\r\n  try {\r\n    if (request.data.type === 'error') {\r\n      toast.error(`${request.data.content === 'Error: Network Error' ? 'Mất kết nối, hãy kiểm tra lại đường truyền' : request.data.content}`, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else if (request.data.type === 'success') {\r\n      toast.success(`${request.data.content}`, {\r\n        position: \"bottom-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    // toast('Wow so easy!', {\r\n    //   position: \"bottom-right\",\r\n    //   autoClose: 5000,\r\n    //   hideProgressBar: false,\r\n    //   closeOnClick: true,\r\n    //   pauseOnHover: true,\r\n    //   draggable: true,\r\n    //   progress: undefined,\r\n    // });\r\n  } catch (err) { }\r\n}\r\n\r\nexport default function* watchShowNotification() {\r\n  yield takeLatest(COMMON_SHOW_NOTIFICATION, doShowNotification);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}