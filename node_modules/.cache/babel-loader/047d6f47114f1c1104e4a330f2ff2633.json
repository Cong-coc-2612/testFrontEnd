{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import Select from'react-select';import{FaEdit}from'react-icons/fa';import{MdDelete}from'react-icons/md';import{IoMdAddCircleOutline}from'react-icons/io';import TextInput from'components/TextInput';import Player from'components/Player';import config from'config';import{queryUserInfo}from'screens/UserInfo/actions';import{editTeam}from'./actions';import'./styles.css';var genderOptions=[{value:true,label:'Nam'},{value:false,label:'Nữ'}];var UserInfoTeamsItem=/*#__PURE__*/function(_React$Component){_inherits(UserInfoTeamsItem,_React$Component);var _super=_createSuper(UserInfoTeamsItem);function UserInfoTeamsItem(props){var _this;_classCallCheck(this,UserInfoTeamsItem);_this=_super.call(this,props);_this.requestData=function(){var params={path:'',param:{teamId:_this.props.info.id},data:{}};// this.props.queryListPlayerOfTeam(params);\nparams={path:'',param:{id:_this.props.info.creatorId},data:{}};_this.props.queryUserInfo(params);};_this.handleSeeMore=function(){if(_this.state.onEditMode===true){return;}_this.setState({seeMoreInfo:!_this.state.seeMoreInfo});};_this.openEditMode=function(event){event.stopPropagation();_this.setState({seeMoreInfo:true,onEditMode:true,teamFullName:_this.props.info.fullName?_this.props.info.fullName:'',teamShortName:_this.props.info.shortName?_this.props.info.shortName:'',listPlayerInForm:_this.props.info.players});};_this.onChangeTeamFullName=function(value){_this.setState({teamFullName:value});};_this.onChangeTeamShortName=function(value){_this.setState({teamShortName:value});};_this.validateTeamFullName=function(){var teamFullNameError=false;var teamFullNameErrorContent='';var tempList=_this.props.listTeam.slice(0);tempList=tempList.filter(function(item,index){return index!==_this.props.index;});if(_this.state.teamFullName.trim()===''){teamFullNameError=true;teamFullNameErrorContent='Tên đội không được trống';}else if(tempList.find(function(element){return element.fullName===_this.state.teamFullName;})){teamFullNameError=true;teamFullNameErrorContent='Tên đội này đã tồn tại trong cuộc thi vui lòng chọn tên khác!';}return{teamFullNameError:teamFullNameError,teamFullNameErrorContent:teamFullNameErrorContent};};_this.validateTeamShortName=function(){var teamShortNameError=false;var teamShortNameErrorContent='';var tempList=_this.props.listTeam.slice(0);tempList=tempList.filter(function(item,index){return index!==_this.props.index;});if(_this.state.teamShortName.trim()===''){teamShortNameError=true;teamShortNameErrorContent='Tên ngắn đội không được trống';}else if(tempList.find(function(element){return element.shortName===_this.state.teamShortName;})){teamShortNameError=true;teamShortNameErrorContent='Tên ngắn đội này đã tồn tại trong cuộc thi vui lòng chọn tên khác!';}return{teamShortNameError:teamShortNameError,teamShortNameErrorContent:teamShortNameErrorContent};};_this.onBlurTeamFullName=function(){var _this$validateTeamFul=_this.validateTeamFullName(),teamFullNameError=_this$validateTeamFul.teamFullNameError,teamFullNameErrorContent=_this$validateTeamFul.teamFullNameErrorContent;_this.setState({teamFullNameError:teamFullNameError,teamFullNameErrorContent:teamFullNameErrorContent});};_this.onBlurTeamShortName=function(){var _this$validateTeamSho=_this.validateTeamShortName(),teamShortNameError=_this$validateTeamSho.teamShortNameError,teamShortNameErrorContent=_this$validateTeamSho.teamShortNameErrorContent;_this.setState({teamShortNameError:teamShortNameError,teamShortNameErrorContent:teamShortNameErrorContent});};_this.onDeletePlayer=function(indexx){_this.setState({listPlayerInForm:_this.state.listPlayerInForm.filter(function(item,index){return index!==indexx;})});};_this.onChangePlayerNameInForm=function(value){_this.setState({playerNameInForm:value.target.value});};_this.onChangePlayerGenderInForm=function(value){_this.setState({playerGenderInForm:value});};_this.onChangePlayerAgeInForm=function(value){var tempValue=0;if(!isNaN(value.target.value)){tempValue=Number(value.target.value);}else{tempValue=0;}_this.setState({playerAgeInForm:tempValue});};_this.onChangePlayerEmailInForm=function(value){_this.setState({playerEmailInForm:value.target.value});};_this.validateAddPlayer=function(){var playerEmailInFormErrorContent='';var playerEmailInFormError=false;var playerNameInFormErrorContent='';var playerNameInFormError=false;if(_this.state.playerNameInForm.trim()===''){playerNameInFormError=true;playerNameInFormErrorContent='Tên người chơi không được trống';}if(!config.regex.email.test(_this.state.playerEmailInForm)){playerEmailInFormError=true;playerEmailInFormErrorContent='Email không hợp lệ';}return{playerEmailInFormError:playerEmailInFormError,playerEmailInFormErrorContent:playerEmailInFormErrorContent,playerNameInFormErrorContent:playerNameInFormErrorContent,playerNameInFormError:playerNameInFormError};};_this.addPlayer=function(){var _this$validateAddPlay=_this.validateAddPlayer(),playerEmailInFormError=_this$validateAddPlay.playerEmailInFormError,playerEmailInFormErrorContent=_this$validateAddPlay.playerEmailInFormErrorContent,playerNameInFormErrorContent=_this$validateAddPlay.playerNameInFormErrorContent,playerNameInFormError=_this$validateAddPlay.playerNameInFormError;_this.setState({playerEmailInFormError:playerEmailInFormError,playerEmailInFormErrorContent:playerEmailInFormErrorContent,playerNameInFormErrorContent:playerNameInFormErrorContent,playerNameInFormError:playerNameInFormError});if(playerNameInFormError===true||playerEmailInFormError===true){return;}var listTemp=_this.state.listPlayerInForm;listTemp.push({name:_this.state.playerNameInForm,age:_this.state.playerAgeInForm,email:_this.state.playerEmailInForm,gender:_this.state.playerGenderInForm.label});_this.setState({listPlayerInForm:listTemp,playerNameInForm:'',playerAgeInForm:0,playerEmailInForm:'',playerGenderInForm:{value:true,label:'Nam'}});};_this.handleSaveChange=function(){var _this$validateTeamFul2=_this.validateTeamFullName(),teamFullNameError=_this$validateTeamFul2.teamFullNameError,teamFullNameErrorContent=_this$validateTeamFul2.teamFullNameErrorContent;var _this$validateTeamSho2=_this.validateTeamShortName(),teamShortNameError=_this$validateTeamSho2.teamShortNameError,teamShortNameErrorContent=_this$validateTeamSho2.teamShortNameErrorContent;_this.setState({teamShortNameError:teamShortNameError,teamShortNameErrorContent:teamShortNameErrorContent,teamFullNameError:teamFullNameError,teamFullNameErrorContent:teamFullNameErrorContent});if(teamFullNameError===true||teamShortNameError===true){return;}var params={path:'',param:{id:_this.props.info.id},data:{competitionId:_this.props.info.competitionId,creatorId:_this.props.info.creatorId,description:_this.props.info.description,fullName:_this.state.teamFullName,shortName:_this.state.teamShortName,seedNo:_this.props.info.seedNo,status:_this.props.info.status,url:_this.props.info.url,players:_this.state.listPlayerInForm}};_this.props.editTeam(params);};_this.state={seeMoreInfo:false,onEditMode:false,teamFullName:'',teamFullNameError:false,teamFullNameErrorContent:'',teamShortName:'',teamShortNameError:false,teamShortNameErrorContent:'',listPlayerInForm:[],playerNameInForm:'',playerNameInFormError:false,playerNameInFormErrorContent:'',playerGenderInForm:{value:true,label:'Nam'},playerAgeInForm:0,playerEmailInForm:'',playerEmailInFormError:false,playerEmailInFormErrorContent:''};return _this;}_createClass(UserInfoTeamsItem,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.props.info!==nextProps.info){this.setState({onEditMode:false});}return true;}},{key:\"componentDidMount\",value:function componentDidMount(){this.requestData();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-container-container\",onClick:this.handleSeeMore},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-order-number-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-order-number-box\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.index+1))),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-team-name-container\"},this.state.onEditMode===false?/*#__PURE__*/React.createElement(\"p\",null,this.props.info&&this.props.info.fullName):/*#__PURE__*/React.createElement(TextInput,{label:'Tên đội',value:this.state.teamFullName,error:this.state.teamFullNameError,errorContent:this.state.teamFullNameErrorContent,onChangeText:this.onChangeTeamFullName,onBlur:this.onBlurTeamFullName})),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-team-setting-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-team-setting-container-container\",onClick:this.openEditMode},/*#__PURE__*/React.createElement(FaEdit,{className:\"UserInfoTeamsItem-team-setting-icon\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-team-setting-container-container\"},/*#__PURE__*/React.createElement(MdDelete,{className:\"UserInfoTeamsItem-team-setting-icon\"}))))),this.state.seeMoreInfo===true&&/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-moreInfo-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-moreInfo-normalInfo-container\"},this.state.onEditMode===false?/*#__PURE__*/React.createElement(\"p\",null,\"T\\xEAn ng\\u1EAFn: \",this.props.info.shortName):/*#__PURE__*/React.createElement(TextInput,{label:'Tên ngắn đội',value:this.state.teamShortName,error:this.state.teamShortNameError,errorContent:this.state.teamShortNameErrorContent,onChangeText:this.onChangeTeamShortName,onBlur:this.onBlurTeamShortName}),/*#__PURE__*/React.createElement(\"p\",null,\"Gi\\u1EA3i tham gia: \",this.props.tournamentInfo!=null&&this.props.tournamentInfo.Tournament!=null&&this.props.tournamentInfo.Tournament.fullName),/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1ED9 m\\xF4n tham gia: B\\xF3ng \\u0111\\xE1\"),/*#__PURE__*/React.createElement(\"p\",null,\"T\\xEAn cu\\u1ED9c thi: \",this.props.competitionInfo!=null&&this.props.competitionInfo.Competition!=null&&this.props.competitionInfo.Competition.name),/*#__PURE__*/React.createElement(\"p\",null,\"Qu\\u1EA3n l\\xFD c\\u1EE7a \\u0111\\u1ED9i: \",/*#__PURE__*/React.createElement(Link,{style:{fontWeight:'bold'},target:'_blank',to:\"/user/\".concat(this.props.info.creatorId)},this.props.userInfo!=null?\"\".concat(this.props.userInfo.User.firstName,\" \").concat(this.props.userInfo.User.lastName):'')),/*#__PURE__*/React.createElement(\"p\",null,\"Danh s\\xE1ch th\\xE0nh vi\\xEAn:\")),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-moreInfo-listTeamInfo-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"p\",null,\"T\\xEAn\")),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item2\"},/*#__PURE__*/React.createElement(\"p\",null,\"Gi\\u1EDBi t\\xEDnh\")),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item2\"},/*#__PURE__*/React.createElement(\"p\",null,\"Tu\\u1ED5i\")),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"p\",null,\"Email\")),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-setting\"})),this.state.onEditMode===true?this.state.listPlayerInForm.map(function(item,index){return/*#__PURE__*/React.createElement(Player,{onDelete:_this2.onDeletePlayer,info:item,freeToEdit:_this2.state.onEditMode,key:index,index:index});}):this.props.info.players.map(function(item,index){return/*#__PURE__*/React.createElement(Player,{onDelete:_this2.onDeletePlayer,info:item,freeToEdit:_this2.state.onEditMode,key:index,index:index});}),this.state.onEditMode===true&&/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"input\",{type:'text',onChange:this.onChangePlayerNameInForm,value:this.state.playerNameInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item2\"},/*#__PURE__*/React.createElement(Select,{options:genderOptions,className:\"Select\",defaultValue:this.state.playerGenderInForm,value:this.state.playerGenderInForm,onChange:this.onChangePlayerGenderInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item2\"},/*#__PURE__*/React.createElement(\"input\",{style:{width:'70px'},type:'text',onChange:this.onChangePlayerAgeInForm,value:this.state.playerAgeInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"input\",{type:'text',onChange:this.onChangePlayerEmailInForm,value:this.state.playerEmailInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-join-tournament-setting\"},/*#__PURE__*/React.createElement(IoMdAddCircleOutline,{color:'white',size:25,style:{marginLeft:'3px',marginRight:'3px'},onClick:this.addPlayer}))),this.state.onEditMode===true&&this.state.playerNameInFormError===true&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},this.state.playerNameInFormErrorContent),this.state.onEditMode===true&&this.state.playerEmailInFormError===true&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},this.state.playerEmailInFormErrorContent),this.state.onEditMode===true&&/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-login-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsItem-login\",onClick:this.handleSaveChange},/*#__PURE__*/React.createElement(\"h4\",{className:\"UserInfoTeamsItem-login-text\"},\"L\\u01B0u\"))))));}}]);return UserInfoTeamsItem;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{userInfo:state.userInfo};};export default connect(mapStateToProps,{queryUserInfo:queryUserInfo,editTeam:editTeam})(UserInfoTeamsItem);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/components/UserInfoTeamsItem/index.tsx"],"names":["React","connect","Link","Select","FaEdit","MdDelete","IoMdAddCircleOutline","TextInput","Player","config","queryUserInfo","editTeam","genderOptions","value","label","UserInfoTeamsItem","props","requestData","params","path","param","teamId","info","id","data","creatorId","handleSeeMore","state","onEditMode","setState","seeMoreInfo","openEditMode","event","stopPropagation","teamFullName","fullName","teamShortName","shortName","listPlayerInForm","players","onChangeTeamFullName","onChangeTeamShortName","validateTeamFullName","teamFullNameError","teamFullNameErrorContent","tempList","listTeam","slice","filter","item","index","trim","find","element","validateTeamShortName","teamShortNameError","teamShortNameErrorContent","onBlurTeamFullName","onBlurTeamShortName","onDeletePlayer","indexx","onChangePlayerNameInForm","playerNameInForm","target","onChangePlayerGenderInForm","playerGenderInForm","onChangePlayerAgeInForm","tempValue","isNaN","Number","playerAgeInForm","onChangePlayerEmailInForm","playerEmailInForm","validateAddPlayer","playerEmailInFormErrorContent","playerEmailInFormError","playerNameInFormErrorContent","playerNameInFormError","regex","email","test","addPlayer","listTemp","push","name","age","gender","handleSaveChange","competitionId","description","seedNo","status","url","nextProps","nextState","tournamentInfo","Tournament","competitionInfo","Competition","fontWeight","userInfo","User","firstName","lastName","map","width","marginLeft","marginRight","color","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Select, { ValueType, OptionTypeBase } from 'react-select';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { IoMdAddCircleOutline } from 'react-icons/io';\r\nimport TextInput from 'components/TextInput';\r\nimport Player from 'components/Player';\r\nimport { IParams, IBigRequest } from 'interfaces/common';\r\nimport config from 'config';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { queryUserInfo } from 'screens/UserInfo/actions';\r\nimport { editTeam } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IUserInfoTeamsItemProps extends React.ClassAttributes<UserInfoTeamsItem> {\r\n  info: IParams;\r\n  index: number;\r\n  tournamentInfo: IParams | null;\r\n  competitionInfo: IParams | null;\r\n  userInfo: IParams | null;\r\n  listTeam: IParams[];\r\n\r\n  queryUserInfo(param: IBigRequest): void;\r\n  editTeam(param: IBigRequest): void;\r\n}\r\n\r\ninterface IUserInfoTeamsItemState {\r\n  seeMoreInfo: boolean;\r\n  onEditMode: boolean;\r\n  teamFullName: string;\r\n  teamFullNameError: boolean;\r\n  teamFullNameErrorContent: string;\r\n  teamShortName: string;\r\n  teamShortNameError: boolean;\r\n  teamShortNameErrorContent: string;\r\n  listPlayerInForm: IParams[];\r\n  playerNameInForm: string;\r\n  playerNameInFormError: boolean;\r\n  playerNameInFormErrorContent: string;\r\n  playerGenderInForm: ValueType<OptionTypeBase>;\r\n  playerAgeInForm: number;\r\n  playerEmailInForm: string;\r\n  playerEmailInFormError: boolean;\r\n  playerEmailInFormErrorContent: string;\r\n}\r\n\r\nconst genderOptions = [\r\n  { value: true, label: 'Nam' },\r\n  { value: false, label: 'Nữ' },\r\n];\r\n\r\nclass UserInfoTeamsItem extends React.Component<IUserInfoTeamsItemProps, IUserInfoTeamsItemState> {\r\n  constructor(props: IUserInfoTeamsItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      seeMoreInfo: false,\r\n      onEditMode: false,\r\n      teamFullName: '',\r\n      teamFullNameError: false,\r\n      teamFullNameErrorContent: '',\r\n      teamShortName: '',\r\n      teamShortNameError: false,\r\n      teamShortNameErrorContent: '',\r\n      listPlayerInForm: [],\r\n      playerNameInForm: '',\r\n      playerNameInFormError: false,\r\n      playerNameInFormErrorContent: '',\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n      playerAgeInForm: 0,\r\n      playerEmailInForm: '',\r\n      playerEmailInFormError: false,\r\n      playerEmailInFormErrorContent: '',\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IUserInfoTeamsItemProps, nextState: IUserInfoTeamsItemState) {\r\n    if (this.props.info !== nextProps.info) {\r\n      this.setState({\r\n        onEditMode: false,\r\n      });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    let params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        teamId: this.props.info.id,\r\n      },\r\n      data: {},\r\n    };\r\n    // this.props.queryListPlayerOfTeam(params);\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        id: this.props.info.creatorId,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryUserInfo(params);\r\n  }\r\n\r\n  private handleSeeMore = () => {\r\n    if (this.state.onEditMode === true) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      seeMoreInfo: !this.state.seeMoreInfo,\r\n    });\r\n  }\r\n\r\n  private openEditMode = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      seeMoreInfo: true,\r\n      onEditMode: true,\r\n      teamFullName: this.props.info.fullName ? this.props.info.fullName as string : '',\r\n      teamShortName: this.props.info.shortName ? this.props.info.shortName as string : '',\r\n      listPlayerInForm: this.props.info.players as IParams[],\r\n    });\r\n  }\r\n\r\n  private onChangeTeamFullName = (value: string) => {\r\n    this.setState({\r\n      teamFullName: value,\r\n    });\r\n  }\r\n\r\n  private onChangeTeamShortName = (value: string) => {\r\n    this.setState({\r\n      teamShortName: value,\r\n    });\r\n  }\r\n\r\n  private validateTeamFullName = () => {\r\n    let teamFullNameError = false;\r\n    let teamFullNameErrorContent = '';\r\n    let tempList = this.props.listTeam.slice(0);\r\n    tempList = tempList.filter((item, index) => index !== this.props.index);\r\n    if (this.state.teamFullName.trim() === '') {\r\n      teamFullNameError = true;\r\n      teamFullNameErrorContent = 'Tên đội không được trống';\r\n    } else if (tempList.find(element => element.fullName === this.state.teamFullName)) {\r\n      teamFullNameError = true;\r\n      teamFullNameErrorContent = 'Tên đội này đã tồn tại trong cuộc thi vui lòng chọn tên khác!';\r\n    }\r\n\r\n    return { teamFullNameError, teamFullNameErrorContent };\r\n  }\r\n\r\n  private validateTeamShortName = () => {\r\n    let teamShortNameError = false;\r\n    let teamShortNameErrorContent = '';\r\n    let tempList = this.props.listTeam.slice(0);\r\n    tempList = tempList.filter((item, index) => index !== this.props.index);\r\n    if (this.state.teamShortName.trim() === '') {\r\n      teamShortNameError = true;\r\n      teamShortNameErrorContent = 'Tên ngắn đội không được trống';\r\n    } else if (tempList.find(element => element.shortName === this.state.teamShortName)) {\r\n      teamShortNameError = true;\r\n      teamShortNameErrorContent = 'Tên ngắn đội này đã tồn tại trong cuộc thi vui lòng chọn tên khác!';\r\n    }\r\n\r\n    return { teamShortNameError, teamShortNameErrorContent };\r\n  }\r\n\r\n  private onBlurTeamFullName = () => {\r\n    const { teamFullNameError, teamFullNameErrorContent } = this.validateTeamFullName();\r\n    this.setState({\r\n      teamFullNameError,\r\n      teamFullNameErrorContent,\r\n    });\r\n  }\r\n\r\n  private onBlurTeamShortName = () => {\r\n    const { teamShortNameError, teamShortNameErrorContent } = this.validateTeamShortName();\r\n    this.setState({\r\n      teamShortNameError,\r\n      teamShortNameErrorContent,\r\n    });\r\n  }\r\n\r\n  private onDeletePlayer = (indexx: number) => {\r\n    this.setState({\r\n      listPlayerInForm: this.state.listPlayerInForm.filter((item, index) => index !== indexx),\r\n    });\r\n  }\r\n\r\n  private onChangePlayerNameInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerNameInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerGenderInForm = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({ playerGenderInForm: value, });\r\n  }\r\n\r\n  private onChangePlayerAgeInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value.target.value as unknown as number)) {\r\n      tempValue = Number(value.target.value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({\r\n      playerAgeInForm: tempValue,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerEmailInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerEmailInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private validateAddPlayer = () => {\r\n    let playerEmailInFormErrorContent = '';\r\n    let playerEmailInFormError = false;\r\n    let playerNameInFormErrorContent = '';\r\n    let playerNameInFormError = false;\r\n    if (this.state.playerNameInForm.trim() === '') {\r\n      playerNameInFormError = true;\r\n      playerNameInFormErrorContent = 'Tên người chơi không được trống';\r\n    }\r\n    if (!config.regex.email.test(this.state.playerEmailInForm)) {\r\n      playerEmailInFormError = true;\r\n      playerEmailInFormErrorContent = 'Email không hợp lệ';\r\n    }\r\n\r\n    return {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    };\r\n  }\r\n\r\n  private addPlayer = () => {\r\n    const {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    } = this.validateAddPlayer();\r\n    this.setState({\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    });\r\n    if (playerNameInFormError === true || playerEmailInFormError === true) {\r\n      return;\r\n    }\r\n    const listTemp = this.state.listPlayerInForm;\r\n    listTemp.push({\r\n      name: this.state.playerNameInForm,\r\n      age: this.state.playerAgeInForm,\r\n      email: this.state.playerEmailInForm,\r\n      gender: (this.state.playerGenderInForm as IParams).label,\r\n    });\r\n    this.setState({\r\n      listPlayerInForm: listTemp,\r\n      playerNameInForm: '',\r\n      playerAgeInForm: 0,\r\n      playerEmailInForm: '',\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n    });\r\n  }\r\n\r\n  private handleSaveChange = () => {\r\n    const { teamFullNameError, teamFullNameErrorContent } = this.validateTeamFullName();\r\n    const { teamShortNameError, teamShortNameErrorContent } = this.validateTeamShortName();\r\n    this.setState({\r\n      teamShortNameError,\r\n      teamShortNameErrorContent,\r\n      teamFullNameError,\r\n      teamFullNameErrorContent,\r\n    });\r\n    if (teamFullNameError === true || teamShortNameError === true) {\r\n      return;\r\n    }\r\n    const params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        id: this.props.info.id,\r\n      },\r\n      data: {\r\n        competitionId: this.props.info.competitionId,\r\n        creatorId: this.props.info.creatorId,\r\n        description: this.props.info.description,\r\n        fullName: this.state.teamFullName,\r\n        shortName: this.state.teamShortName,\r\n        seedNo: this.props.info.seedNo,\r\n        status: this.props.info.status,\r\n        url: this.props.info.url,\r\n        players: this.state.listPlayerInForm,\r\n      },\r\n    };\r\n    this.props.editTeam(params);\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n      <div className=\"UserInfoTeamsItem-info-container\">\r\n        <div className=\"UserInfoTeamsItem-container\">\r\n          <div className=\"UserInfoTeamsItem-container-container\" onClick={this.handleSeeMore}>\r\n            <div className=\"UserInfoTeamsItem-order-number-container\">\r\n              <div className=\"UserInfoTeamsItem-order-number-box\">\r\n                <p>{this.props.index + 1}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"UserInfoTeamsItem-team-name-container\">\r\n              {\r\n                this.state.onEditMode === false ?\r\n                  <p>{this.props.info && this.props.info.fullName}</p> :\r\n                  <TextInput label={'Tên đội'} value={this.state.teamFullName} error={this.state.teamFullNameError} errorContent={this.state.teamFullNameErrorContent} onChangeText={this.onChangeTeamFullName} onBlur={this.onBlurTeamFullName} />\r\n              }\r\n            </div>\r\n            <div className=\"UserInfoTeamsItem-team-setting-container\">\r\n              <div className=\"UserInfoTeamsItem-team-setting-container-container\" onClick={this.openEditMode}>\r\n                <FaEdit className=\"UserInfoTeamsItem-team-setting-icon\" />\r\n              </div>\r\n              <div className=\"UserInfoTeamsItem-team-setting-container-container\">\r\n                <MdDelete className=\"UserInfoTeamsItem-team-setting-icon\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.seeMoreInfo === true &&\r\n          <div className=\"UserInfoTeamsItem-moreInfo-container\">\r\n            <div className=\"UserInfoTeamsItem-moreInfo-normalInfo-container\">\r\n              {\r\n                this.state.onEditMode === false ?\r\n                  <p>Tên ngắn: {this.props.info.shortName}</p> :\r\n                  <TextInput label={'Tên ngắn đội'} value={this.state.teamShortName} error={this.state.teamShortNameError} errorContent={this.state.teamShortNameErrorContent} onChangeText={this.onChangeTeamShortName} onBlur={this.onBlurTeamShortName} />\r\n              }\r\n              <p>Giải tham gia: {this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament != null && (this.props.tournamentInfo.Tournament as unknown as IParams).fullName}</p>\r\n              <p>Bộ môn tham gia: Bóng đá</p>\r\n              <p>Tên cuộc thi: {this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && (this.props.competitionInfo.Competition as unknown as IParams).name}</p>\r\n              <p>Quản lý của đội: <Link style={{ fontWeight: 'bold' }} target={'_blank'} to={`/user/${this.props.info.creatorId}`}>\r\n                {this.props.userInfo != null ? `${(this.props.userInfo.User as unknown as IParams).firstName} ${(this.props.userInfo.User as unknown as IParams).lastName}` : ''}\r\n              </Link></p>\r\n              <p>Danh sách thành viên:</p>\r\n            </div>\r\n            <div className=\"UserInfoTeamsItem-moreInfo-listTeamInfo-container\">\r\n              <div className=\"UserInfoTeamsItem-join-tournament-container\">\r\n                <div className=\"UserInfoTeamsItem-join-tournament-item1\">\r\n                  <p>Tên</p>\r\n                </div>\r\n                <div className=\"UserInfoTeamsItem-join-tournament-item2\">\r\n                  <p>Giới tính</p>\r\n                </div>\r\n                <div className=\"UserInfoTeamsItem-join-tournament-item2\">\r\n                  <p>Tuổi</p>\r\n                </div>\r\n                <div className=\"UserInfoTeamsItem-join-tournament-item1\">\r\n                  <p>Email</p>\r\n                </div>\r\n                <div className=\"UserInfoTeamsItem-join-tournament-setting\">\r\n                </div>\r\n              </div>\r\n              {\r\n                this.state.onEditMode === true ?\r\n                this.state.listPlayerInForm.map((item, index) => <Player onDelete={this.onDeletePlayer} info={item} freeToEdit={this.state.onEditMode} key={index} index={index} />) :\r\n                  (this.props.info.players as unknown as IParams[]).map((item, index) => <Player onDelete={this.onDeletePlayer} info={item} freeToEdit={this.state.onEditMode} key={index} index={index} />)\r\n              }\r\n              {this.state.onEditMode === true &&\r\n                <div className=\"UserInfoTeamsItem-join-tournament-container\">\r\n                  <div className=\"UserInfoTeamsItem-join-tournament-item1\">\r\n                    <input type={'text'} onChange={this.onChangePlayerNameInForm} value={this.state.playerNameInForm} />\r\n                  </div>\r\n                  <div className=\"UserInfoTeamsItem-join-tournament-item2\">\r\n                    <Select\r\n                      options={genderOptions}\r\n                      className=\"Select\"\r\n                      defaultValue={this.state.playerGenderInForm}\r\n                      value={this.state.playerGenderInForm}\r\n                      onChange={this.onChangePlayerGenderInForm}\r\n                    />\r\n                  </div>\r\n                  <div className=\"UserInfoTeamsItem-join-tournament-item2\">\r\n                    <input style={{ width: '70px' }} type={'text'} onChange={this.onChangePlayerAgeInForm} value={this.state.playerAgeInForm} />\r\n                  </div>\r\n                  <div className=\"UserInfoTeamsItem-join-tournament-item1\">\r\n                    <input type={'text'} onChange={this.onChangePlayerEmailInForm} value={this.state.playerEmailInForm} />\r\n                  </div>\r\n                  <div className=\"UserInfoTeamsItem-join-tournament-setting\">\r\n                    <IoMdAddCircleOutline color={'white'} size={25} style={{ marginLeft: '3px', marginRight: '3px' }} onClick={this.addPlayer} />\r\n                  </div>\r\n                </div>}\r\n              {this.state.onEditMode === true && this.state.playerNameInFormError === true && <p style={{ color: 'red' }}>{this.state.playerNameInFormErrorContent}</p>}\r\n              {this.state.onEditMode === true && this.state.playerEmailInFormError === true && <p style={{ color: 'red' }}>{this.state.playerEmailInFormErrorContent}</p>}\r\n              {this.state.onEditMode === true && <div className=\"UserInfoTeamsItem-login-container\">\r\n                <div className=\"UserInfoTeamsItem-login\" onClick={this.handleSaveChange}>\r\n                  <h4 className=\"UserInfoTeamsItem-login-text\">Lưu</h4>\r\n                </div>\r\n              </div>}\r\n            </div>\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    userInfo: state.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryUserInfo, editTeam }\r\n)(UserInfoTeamsItem);"]},"metadata":{},"sourceType":"module"}