{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import Skeleton from'react-loading-skeleton';import TournamentOverview from'components/TournamentOverview';import Paging from'components/Paging';import{queryListTournamentsOfUser}from'./actions';import'./styles.css';var UserInfoTournament=/*#__PURE__*/function(_React$Component){_inherits(UserInfoTournament,_React$Component);var _super=_createSuper(UserInfoTournament);function UserInfoTournament(props){var _this;_classCallCheck(this,UserInfoTournament);_this=_super.call(this,props);_this.requestData=function(){var params={path:'',param:{userId:_this.props.userId,page:_this.state.currentPage},data:{}};_this.props.queryListTournamentsOfUser(params);};_this.onChangeSelectedPage=function(pageNumber){_this.setState({currentPage:pageNumber},function(){return _this.requestData();});};_this.state={currentPage:1};return _this;}_createClass(UserInfoTournament,[{key:\"componentDidMount\",value:function componentDidMount(){this.requestData();}},{key:\"render\",value:function render(){console.log(this.props.listTournamentOfUser);return/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTournament-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTournament-container-container\"},this.props.listTournamentOfUser&&this.props.listTournamentOfUser.Tournaments?this.props.listTournamentOfUser.Tournaments.length>0?this.props.listTournamentOfUser.Tournaments.map(function(item,index){return/*#__PURE__*/React.createElement(TournamentOverview,{info:item,index:index,key:index});}):/*#__PURE__*/React.createElement(\"p\",null,\"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3 n\\xE0o!\"):/*#__PURE__*/React.createElement(Skeleton,null)),/*#__PURE__*/React.createElement(Paging,{currentPage:this.state.currentPage,totalPage:this.props.listTournamentOfUser!=null?this.props.listTournamentOfUser.TotalPage:0,onChangeSelectedPage:this.onChangeSelectedPage}));}}]);return UserInfoTournament;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{listTournamentOfUser:state.listTournamentOfUser};};export default connect(mapStateToProps,{queryListTournamentsOfUser:queryListTournamentsOfUser})(UserInfoTournament);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/components/UserInfoTournament/index.tsx"],"names":["React","connect","Skeleton","TournamentOverview","Paging","queryListTournamentsOfUser","UserInfoTournament","props","requestData","params","path","param","userId","page","state","currentPage","data","onChangeSelectedPage","pageNumber","setState","console","log","listTournamentOfUser","Tournaments","length","map","item","index","TotalPage","Component","mapStateToProps"],"mappings":"gpBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,+BAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAGA,OAASC,0BAAT,KAA2C,WAA3C,CACA,MAAO,cAAP,C,GAaMC,CAAAA,kB,oIACJ,4BAAYC,KAAZ,CAA6C,oDAC3C,uBAAMA,KAAN,EAD2C,MAWrCC,WAXqC,CAWvB,UAAM,CAC1B,GAAMC,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,EADO,CAEbC,KAAK,CAAE,CACLC,MAAM,CAAE,MAAKL,KAAL,CAAWK,MADd,CAELC,IAAI,CAAE,MAAKC,KAAL,CAAWC,WAFZ,CAFM,CAMbC,IAAI,CAAE,EANO,CAAf,CAQA,MAAKT,KAAL,CAAWF,0BAAX,CAAsCI,MAAtC,EACD,CArB4C,OAuBrCQ,oBAvBqC,CAuBd,SAACC,UAAD,CAAwB,CACrD,MAAKC,QAAL,CAAc,CAAEJ,WAAW,CAAEG,UAAf,CAAd,CAA2C,iBAAM,OAAKV,WAAL,EAAN,EAA3C,EACD,CAzB4C,CAE3C,MAAKM,KAAL,CAAa,CACXC,WAAW,CAAE,CADF,CAAb,CAF2C,aAK5C,C,4FAEmB,CAClB,KAAKP,WAAL,GACD,C,uCAkBQ,CACPY,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWe,oBAAvB,EACA,mBACE,2BAAK,SAAS,CAAC,8BAAf,eACE,2BAAK,SAAS,CAAC,wCAAf,EACG,KAAKf,KAAL,CAAWe,oBAAX,EAAmC,KAAKf,KAAL,CAAWe,oBAAX,CAAgCC,WAAnE,CAAmF,KAAKhB,KAAL,CAAWe,oBAAX,CAAgCC,WAAjC,CAAsEC,MAAtE,CAA+E,CAA/E,CAAoF,KAAKjB,KAAL,CAAWe,oBAAX,CAAgCC,WAAjC,CAAsEE,GAAtE,CACpK,SAACC,IAAD,CAAOC,KAAP,qBAAiB,oBAAC,kBAAD,EAAoB,IAAI,CAAED,IAA1B,CAAgC,KAAK,CAAEC,KAAvC,CAA8C,GAAG,CAAEA,KAAnD,EAAjB,EADoK,CAAnF,cACA,mFADlF,cAEC,oBAAC,QAAD,MAHJ,CADF,cAOE,oBAAC,MAAD,EAAQ,WAAW,CAAE,KAAKb,KAAL,CAAWC,WAAhC,CAA6C,SAAS,CAAE,KAAKR,KAAL,CAAWe,oBAAX,EAAmC,IAAnC,CAA0C,KAAKf,KAAL,CAAWe,oBAAX,CAAgCM,SAA1E,CAAgG,CAAxJ,CAA2J,oBAAoB,CAAE,KAAKX,oBAAtL,EAPF,CADF,CAWD,C,gCAzC8BjB,KAAK,CAAC6B,S,EA4CvC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAChB,KAAD,CAAmB,CACzC,MAAO,CACLQ,oBAAoB,CAAER,KAAK,CAACQ,oBADvB,CAAP,CAGD,CAJD,CAMA,cAAerB,CAAAA,OAAO,CACpB6B,eADoB,CAEpB,CAAEzB,0BAA0B,CAA1BA,0BAAF,CAFoB,CAAP,CAGbC,kBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport TournamentOverview from 'components/TournamentOverview';\r\nimport Paging from 'components/Paging';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { queryListTournamentsOfUser } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IUserInfoTournamentProps extends React.ClassAttributes<UserInfoTournament> {\r\n  userId: number;\r\n  listTournamentOfUser: IParams | null;\r\n\r\n  queryListTournamentsOfUser(param: IBigRequest): void;\r\n}\r\n\r\ninterface IUserInfoTournamentState {\r\n  currentPage: number;\r\n}\r\n\r\nclass UserInfoTournament extends React.Component<IUserInfoTournamentProps, IUserInfoTournamentState> {\r\n  constructor(props: IUserInfoTournamentProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        userId: this.props.userId,\r\n        page: this.state.currentPage,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryListTournamentsOfUser(params);\r\n  }\r\n\r\n  private onChangeSelectedPage = (pageNumber: number) => {\r\n    this.setState({ currentPage: pageNumber }, () => this.requestData());\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.listTournamentOfUser);\r\n    return (\r\n      <div className=\"UserInfoTournament-container\">\r\n        <div className=\"UserInfoTournament-container-container\">\r\n          {this.props.listTournamentOfUser && this.props.listTournamentOfUser.Tournaments ? ((this.props.listTournamentOfUser.Tournaments as unknown as IParams[]).length > 0 ? (this.props.listTournamentOfUser.Tournaments as unknown as IParams[]).map(\r\n            (item, index) => <TournamentOverview info={item} index={index} key={index} />) : <p>Không tìm thấy kết quả nào!</p>) :\r\n            <Skeleton />\r\n          }\r\n        </div>\r\n        <Paging currentPage={this.state.currentPage} totalPage={this.props.listTournamentOfUser != null ? this.props.listTournamentOfUser.TotalPage as number : 0} onChangeSelectedPage={this.onChangeSelectedPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTournamentOfUser: state.listTournamentOfUser,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryListTournamentsOfUser, }\r\n)(UserInfoTournament);"]},"metadata":{},"sourceType":"module"}