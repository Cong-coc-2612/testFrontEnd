{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(doEditTournamentInfo),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watchEditTournamentInfo);import{call,takeLatest,put}from'redux-saga/effects';import{query,METHOD}from'utils/socketApi';import{COMMON_SHOW_NOTIFICATION,EDIT_TOURNAMENT_INFO}from'redux-saga/actions';import store from'redux-saga/store';import{QUERY_TOURNAMENT_INFO_SUCCESS}from'screens/TournamentInfo/reducers';var editTournamentInfo=function editTournamentInfo(data,path,param){var uri='tournament';var datas=_objectSpread({},data);var paths=path;var params=_objectSpread({},param);return query(uri,METHOD.PUT,datas,params,paths);};function doEditTournamentInfo(request){var response,data;return _regeneratorRuntime.wrap(function doEditTournamentInfo$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(editTournamentInfo,request.data.data,request.data.path,request.data.param);case 3:response=_context.sent;data=response.data.result;if(!(response.data.error.MessageCode===0)){_context.next=12;break;}_context.next=8;return put({type:request.response.success,payload:data});case 8:_context.next=10;return put({type:QUERY_TOURNAMENT_INFO_SUCCESS,payload:_objectSpread({},store.getState().tournamentInfo,{Tournament:data.Tournament})});case 10:_context.next=13;break;case 12:throw new Error(response.data.error.Message);case 13:_context.next=21;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);_context.next=19;return put({type:request.response.failed});case 19:_context.next=21;return put({type:COMMON_SHOW_NOTIFICATION,data:{type:'error',title:'EditTournamentInfo',content:_context.t0,time:new Date()}});case 21:case\"end\":return _context.stop();}}},_marked,null,[[0,15]]);}export default function watchEditTournamentInfo(){return _regeneratorRuntime.wrap(function watchEditTournamentInfo$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(EDIT_TOURNAMENT_INFO,doEditTournamentInfo);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/redux-saga/sagas/EditTournamentInfo/editTournamentInfo.ts"],"names":["doEditTournamentInfo","watchEditTournamentInfo","call","takeLatest","put","query","METHOD","COMMON_SHOW_NOTIFICATION","EDIT_TOURNAMENT_INFO","store","QUERY_TOURNAMENT_INFO_SUCCESS","editTournamentInfo","data","path","param","uri","datas","paths","params","PUT","request","response","result","error","MessageCode","type","success","payload","getState","tournamentInfo","Tournament","Error","Message","failed","title","content","time","Date"],"mappings":"wXAgBUA,oB,iDAgCeC,uB,EAhDzB,OAASC,IAAT,CAAeC,UAAf,CAA2BC,GAA3B,KAAsC,oBAAtC,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,iBAA9B,CAEA,OAASC,wBAAT,CAAmCC,oBAAnC,KAA+D,oBAA/D,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CACA,OAASC,6BAAT,KAA8C,iCAA9C,CAGA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,IAAD,CAAgBC,IAAhB,CAAuCC,KAAvC,CAA0D,CACnF,GAAMC,CAAAA,GAAG,CAAG,YAAZ,CACA,GAAMC,CAAAA,KAAK,kBAAQJ,IAAR,CAAX,CACA,GAAMK,CAAAA,KAAK,CAAGJ,IAAd,CACA,GAAMK,CAAAA,MAAM,kBAAQJ,KAAR,CAAZ,CACA,MAAOT,CAAAA,KAAK,CAACU,GAAD,CAAMT,MAAM,CAACa,GAAb,CAAkBH,KAAlB,CAAyBE,MAAzB,CAAiCD,KAAjC,CAAZ,CACD,CAND,CAQA,QAAUjB,CAAAA,oBAAV,CAA+BoB,OAA/B,iLAEqB,MAAMlB,CAAAA,IAAI,CAACS,kBAAD,CAAqBS,OAAO,CAACR,IAAR,CAAaA,IAAlC,CAAwCQ,OAAO,CAACR,IAAR,CAAaC,IAArD,CAA2DO,OAAO,CAACR,IAAR,CAAaE,KAAxE,CAAV,CAFrB,OAEUO,QAFV,eAGUT,IAHV,CAGiBS,QAAQ,CAACT,IAAT,CAAcU,MAH/B,MAIQD,QAAQ,CAACT,IAAT,CAAcW,KAAd,CAAoBC,WAApB,GAAoC,CAJ5C,2CAKM,MAAMpB,CAAAA,GAAG,CAAC,CACRqB,IAAI,CAAEL,OAAO,CAACC,QAAR,CAAiBK,OADf,CAERC,OAAO,CAAEf,IAFD,CAAD,CAAT,CALN,wBASM,MAAMR,CAAAA,GAAG,CAAC,CACRqB,IAAI,CAAEf,6BADE,CAERiB,OAAO,kBAAOlB,KAAK,CAACmB,QAAN,GAAiBC,cAAxB,EAAwCC,UAAU,CAAElB,IAAI,CAACkB,UAAzD,EAFC,CAAD,CAAT,CATN,4CAcY,IAAIC,CAAAA,KAAJ,CAAUV,QAAQ,CAACT,IAAT,CAAcW,KAAd,CAAoBS,OAA9B,CAdZ,2GAiBI,MAAM5B,CAAAA,GAAG,CAAC,CACRqB,IAAI,CAAEL,OAAO,CAACC,QAAR,CAAiBY,MADf,CAAD,CAAT,CAjBJ,yBAoBI,MAAM7B,CAAAA,GAAG,CAAC,CACRqB,IAAI,CAAElB,wBADE,CAERK,IAAI,CAAE,CACJa,IAAI,CAAE,OADF,CAEJS,KAAK,CAAE,oBAFH,CAGJC,OAAO,YAHH,CAIJC,IAAI,CAAE,GAAIC,CAAAA,IAAJ,EAJF,CAFE,CAAD,CAAT,CApBJ,qEAgCA,cAAe,SAAUpC,CAAAA,uBAAV,uJACb,MAAME,CAAAA,UAAU,CAACK,oBAAD,CAAuBR,oBAAvB,CAAhB,CADa","sourcesContent":["import { call, takeLatest, put } from 'redux-saga/effects';\r\nimport { query, METHOD } from 'utils/socketApi';\r\nimport { IRequest, IParams, IBigRequest } from 'interfaces/common';\r\nimport { COMMON_SHOW_NOTIFICATION, EDIT_TOURNAMENT_INFO } from 'redux-saga/actions';\r\nimport store from 'redux-saga/store';\r\nimport { QUERY_TOURNAMENT_INFO_SUCCESS } from 'screens/TournamentInfo/reducers';\r\n\r\n\r\nconst editTournamentInfo = (data: IParams, path: string | number, param: IParams) => {\r\n  const uri = 'tournament';\r\n  const datas = { ...data };\r\n  const paths = path;\r\n  const params = { ...param };\r\n  return query(uri, METHOD.PUT, datas, params, paths);\r\n};\r\n\r\nfunction* doEditTournamentInfo(request: IRequest<IBigRequest>) {\r\n  try {\r\n    const response = yield call(editTournamentInfo, request.data.data, request.data.path, request.data.param);\r\n    const data = response.data.result;\r\n    if (response.data.error.MessageCode === 0) {\r\n      yield put({\r\n        type: request.response.success,\r\n        payload: data,\r\n      });\r\n      yield put({\r\n        type: QUERY_TOURNAMENT_INFO_SUCCESS,\r\n        payload: { ...store.getState().tournamentInfo, Tournament: data.Tournament },\r\n      });\r\n    } else {\r\n      throw new Error(response.data.error.Message);\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: request.response.failed,\r\n    });\r\n    yield put({\r\n      type: COMMON_SHOW_NOTIFICATION,\r\n      data: {\r\n        type: 'error',\r\n        title: 'EditTournamentInfo',\r\n        content: error,\r\n        time: new Date(),\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* watchEditTournamentInfo() {\r\n  yield takeLatest(EDIT_TOURNAMENT_INFO, doEditTournamentInfo);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}