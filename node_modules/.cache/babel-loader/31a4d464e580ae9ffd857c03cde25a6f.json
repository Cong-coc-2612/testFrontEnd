{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{Switch,Route,Redirect,Router}from'react-router-dom';import{CookiesProvider}from'react-cookie';import{ToastContainer}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import'react-block-ui/style.css';import history from\"utils/history\";import Login from'screens/Login';import SignUp from'screens/SignUp';import ForgotPassword from'screens/ForgotPassword';import Home from'screens/Home';import TournamentInfo from'screens/TournamentInfo';import Header from'components/Header';import Content from'components/Content';import UserInfo from'screens/UserInfo';import ChangePassword from'screens/ChangePassword';import AllTournaments from'components/AllTournaments';import CreateNewTournament from'screens/CreateNewTournament';import ActiveAccount from'screens/ActiveAccount';import CompetitionInfo from'screens/CompetitionInfo';import AllUsers from'components/AllUsers';import{setGlobalSearchString}from'redux-saga/global-actions/SetGlobalSearchString-actions';import'./App.css';import{cookies}from'utils/cookies';import{COOKIES_TYPE}from'global';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Container\"},/*#__PURE__*/React.createElement(CookiesProvider,null,/*#__PURE__*/React.createElement(Router,{history:history},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:[\"/\",\"/home\"],render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'home'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/tournament/:tournamentId\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'tournamentInfo'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/signUp\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'signUp'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/user/:userId\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'userInfo'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/users\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'users'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/tournaments\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'tournaments'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/login\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'login'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/forgotPassword\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'forgotPassword'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/newTournament\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'newTournament'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/changePassword\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'changePassword'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/active/:tokenVerify\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'active'});}}),/*#__PURE__*/React.createElement(Route,{path:\"/competition/:competitionId\",render:function render(){return/*#__PURE__*/React.createElement(Header,{currentPage:'competitionInfo'});}})),/*#__PURE__*/React.createElement(Content,{transparent:false},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:[\"/\",\"/home\"],render:function render(){return/*#__PURE__*/React.createElement(Home,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/tournament/:tournamentId\",render:function render(info){return/*#__PURE__*/React.createElement(TournamentInfo,{routerInfo:info});}}),/*#__PURE__*/React.createElement(Route,{path:\"/tournaments\",render:function render(){return/*#__PURE__*/React.createElement(AllTournaments,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/signUp\",render:function render(){return cookies.get(COOKIES_TYPE.AUTH_TOKEN)!=null?/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}):/*#__PURE__*/React.createElement(SignUp,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/forgotPassword\",render:function render(){return/*#__PURE__*/React.createElement(ForgotPassword,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/login\",render:function render(){return cookies.get(COOKIES_TYPE.AUTH_TOKEN)!=null?/*#__PURE__*/React.createElement(Redirect,{to:\"/\"}):/*#__PURE__*/React.createElement(Login,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/user/:userId\",render:function render(info){return/*#__PURE__*/React.createElement(UserInfo,{routerInfo:info});}}),/*#__PURE__*/React.createElement(Route,{path:\"/users\",render:function render(){return/*#__PURE__*/React.createElement(AllUsers,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/newTournament\",render:function render(){return cookies.get(COOKIES_TYPE.AUTH_TOKEN)==null?/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"}):/*#__PURE__*/React.createElement(CreateNewTournament,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/changePassword\",render:function render(){return cookies.get(COOKIES_TYPE.AUTH_TOKEN)==null?/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"}):/*#__PURE__*/React.createElement(ChangePassword,null);}}),/*#__PURE__*/React.createElement(Route,{path:\"/active/:tokenVerify\",render:function render(info){return/*#__PURE__*/React.createElement(ActiveAccount,{routerInfo:info});}}),/*#__PURE__*/React.createElement(Route,{path:\"/competition/:competitionId\",render:function render(info){return/*#__PURE__*/React.createElement(CompetitionInfo,{routerInfo:info});}}),/*#__PURE__*/React.createElement(Route,{render:function render(){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}})),/*#__PURE__*/React.createElement(ToastContainer,null)))));}}]);return App;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{currentPage:state.currentPage};};export default connect(mapStateToProps,{setGlobalSearchString:setGlobalSearchString})(App);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/App.tsx"],"names":["React","connect","Switch","Route","Redirect","Router","CookiesProvider","ToastContainer","history","Login","SignUp","ForgotPassword","Home","TournamentInfo","Header","Content","UserInfo","ChangePassword","AllTournaments","CreateNewTournament","ActiveAccount","CompetitionInfo","AllUsers","setGlobalSearchString","cookies","COOKIES_TYPE","App","props","state","info","get","AUTH_TOKEN","Component","mapStateToProps","currentPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route, Redirect, Router } from 'react-router-dom';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-block-ui/style.css';\r\nimport history from \"utils/history\";\r\nimport Login from 'screens/Login';\r\nimport SignUp from 'screens/SignUp';\r\nimport ForgotPassword from 'screens/ForgotPassword';\r\nimport Home from 'screens/Home';\r\nimport TournamentInfo from 'screens/TournamentInfo';\r\nimport Header from 'components/Header';\r\nimport Content from 'components/Content';\r\nimport UserInfo from 'screens/UserInfo';\r\nimport ChangePassword from 'screens/ChangePassword';\r\nimport AllTournaments from 'components/AllTournaments';\r\nimport CreateNewTournament from 'screens/CreateNewTournament';\r\nimport ActiveAccount from 'screens/ActiveAccount';\r\nimport CompetitionInfo from 'screens/CompetitionInfo';\r\nimport AllUsers from 'components/AllUsers';\r\nimport { setGlobalSearchString } from 'redux-saga/global-actions/SetGlobalSearchString-actions';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport './App.css';\r\nimport { cookies } from 'utils/cookies';\r\nimport { COOKIES_TYPE } from 'global';\r\n\r\ninterface IAppProps extends React.ClassAttributes<App> {\r\n  setGlobalSearchString(params: string): void;\r\n}\r\n\r\ninterface IAppState {\r\n}\r\n\r\nclass App extends React.Component<IAppProps, IAppState> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Container\">\r\n        <CookiesProvider>\r\n          <Router history={history}>\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/home\"]} render={() => <Header currentPage={'home'} />} />\r\n              <Route path=\"/tournament/:tournamentId\" render={() => <Header currentPage={'tournamentInfo'} />} />\r\n              <Route path=\"/signUp\" render={() => <Header currentPage={'signUp'} />} />\r\n              <Route path=\"/user/:userId\" render={() => <Header currentPage={'userInfo'} />} />\r\n              <Route path=\"/users\" render={() => <Header currentPage={'users'} />} />\r\n              <Route path=\"/tournaments\" render={() => <Header currentPage={'tournaments'} />} />\r\n              <Route path=\"/login\" render={() => <Header currentPage={'login'} />} />\r\n              <Route path=\"/forgotPassword\" render={() => <Header currentPage={'forgotPassword'} />} />\r\n              <Route path=\"/newTournament\" render={() => <Header currentPage={'newTournament'} />} />\r\n              <Route path=\"/changePassword\" render={() => <Header currentPage={'changePassword'} />} />\r\n              <Route path=\"/active/:tokenVerify\" render={() => <Header currentPage={'active'} />} />\r\n              <Route path=\"/competition/:competitionId\" render={() => <Header currentPage={'competitionInfo'} />} />\r\n            </Switch>\r\n            <Content transparent={false}>\r\n              <Switch>\r\n                <Route exact path={[\"/\", \"/home\"]} render={() => <Home />} />\r\n                <Route path=\"/tournament/:tournamentId\" render={(info) => <TournamentInfo routerInfo={info} />} />\r\n                <Route path=\"/tournaments\" render={() => <AllTournaments />} />\r\n                <Route path=\"/signUp\" render={() => { return cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null ? <Redirect to=\"/\" /> : <SignUp />; }} />\r\n                <Route path=\"/forgotPassword\" render={() => <ForgotPassword />} />\r\n                <Route path=\"/login\" render={() => { return cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null ? <Redirect to=\"/\" /> : <Login />; }} />\r\n                <Route path=\"/user/:userId\" render={(info) => <UserInfo routerInfo={info} />} />\r\n                <Route path=\"/users\" render={() => <AllUsers />} />\r\n                <Route path=\"/newTournament\" render={() => { return cookies.get(COOKIES_TYPE.AUTH_TOKEN) == null ? <Redirect to=\"/login\" /> : <CreateNewTournament />; }} />\r\n                <Route path=\"/changePassword\" render={() => { return cookies.get(COOKIES_TYPE.AUTH_TOKEN) == null ? <Redirect to=\"/login\" /> : <ChangePassword />; }} />\r\n                <Route path=\"/active/:tokenVerify\" render={(info) => <ActiveAccount routerInfo={info} />} />\r\n                <Route path=\"/competition/:competitionId\" render={(info) => <CompetitionInfo routerInfo={info} />} />\r\n                <Route render={() => <Redirect to=\"/\" />} />\r\n              </Switch>\r\n              <ToastContainer />\r\n            </Content>\r\n          </Router>\r\n        </CookiesProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    currentPage: state.currentPage,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setGlobalSearchString }\r\n)(App);"]},"metadata":{},"sourceType":"module"}