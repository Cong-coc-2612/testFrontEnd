{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import Skeleton from'react-loading-skeleton';import'pagination.css';import TournamentOverview from'components/TournamentOverview';import Paging from'components/Paging';import{searchTournaments}from'components/Header/actions';import{queryListTournament}from'./actions';import'./styles.css';var AllTournaments=/*#__PURE__*/function(_React$Component){_inherits(AllTournaments,_React$Component);var _super=_createSuper(AllTournaments);function AllTournaments(props){var _this;_classCallCheck(this,AllTournaments);_this=_super.call(this,props);_this.requestData=function(){var page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var params={path:'',param:{page:page,limit:3},data:{}};_this.props.queryListTournament(params);};_this.onChangeSelectedPage=function(pageNumber){if(_this.props.globalSearchString!==''){var params={path:'',param:{page:pageNumber,limit:3,searchString:_this.props.globalSearchString},data:{}};_this.props.searchTournaments(params);}else{_this.requestData(pageNumber);}_this.setState({activePage:pageNumber});};_this.state={activePage:1};return _this;}_createClass(AllTournaments,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.props.globalSearchString!==nextProps.globalSearchString&&nextProps.globalSearchString===''){this.requestData();}return true;}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.globalSearchString===''){this.requestData();}}},{key:\"render\",value:function render(){console.log('this.props.listTournament',this.props.listTournament);return/*#__PURE__*/React.createElement(\"div\",{className:\"AllTournaments-container-container\"},/*#__PURE__*/React.createElement(\"p\",{className:\"AllTournaments-header-text\"},\"T\\u1EA5t c\\u1EA3 c\\xE1c gi\\u1EA3i \\u0111\\u1EA5u\"),this.props.globalSearchString!==''&&/*#__PURE__*/React.createElement(\"p\",{className:\"AllTournaments-search-text\"},\"K\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm cho: \\\"\",this.props.globalSearchString,\"\\\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\"AllTournaments-container\"},this.props.listTournament&&this.props.listTournament.Tournaments?this.props.listTournament.Tournaments.length>0?this.props.listTournament.Tournaments.map(function(item,index){return/*#__PURE__*/React.createElement(TournamentOverview,{info:item,index:index,key:index});}):/*#__PURE__*/React.createElement(\"p\",null,\"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3 n\\xE0o!\"):/*#__PURE__*/React.createElement(Skeleton,null)),/*#__PURE__*/React.createElement(Paging,{currentPage:this.state.activePage,totalPage:this.props.listTournament!=null?this.props.listTournament.TotalPage:0,onChangeSelectedPage:this.onChangeSelectedPage}));}}]);return AllTournaments;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{listTournament:state.listTournament,globalSearchString:state.globalSearchString};};export default connect(mapStateToProps,{queryListTournament:queryListTournament,searchTournaments:searchTournaments})(AllTournaments);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/components/AllTournaments/index.tsx"],"names":["React","connect","Skeleton","TournamentOverview","Paging","searchTournaments","queryListTournament","AllTournaments","props","requestData","page","params","path","param","limit","data","onChangeSelectedPage","pageNumber","globalSearchString","searchString","setState","activePage","state","nextProps","nextState","console","log","listTournament","Tournaments","length","map","item","index","TotalPage","Component","mapStateToProps"],"mappings":"gpBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,kBAAP,KAA+B,+BAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAGA,OAASC,iBAAT,KAAkC,2BAAlC,CACA,OAASC,mBAAT,KAAoC,WAApC,CACA,MAAO,cAAP,C,GAcMC,CAAAA,c,4HACJ,wBAAYC,KAAZ,CAAyC,gDACvC,uBAAMA,KAAN,EADuC,MAoBjCC,WApBiC,CAoBnB,UAAc,IAAbC,CAAAA,IAAa,2DAAN,CAAM,CAClC,GAAMC,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,EADO,CAEbC,KAAK,CAAE,CACLH,IAAI,CAAJA,IADK,CAELI,KAAK,CAAE,CAFF,CAFM,CAMbC,IAAI,CAAE,EANO,CAAf,CAQA,MAAKP,KAAL,CAAWF,mBAAX,CAA+BK,MAA/B,EACD,CA9BwC,OAgCjCK,oBAhCiC,CAgCV,SAACC,UAAD,CAAwB,CACrD,GAAI,MAAKT,KAAL,CAAWU,kBAAX,GAAkC,EAAtC,CAA0C,CACxC,GAAMP,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,EADO,CAEbC,KAAK,CAAE,CACLH,IAAI,CAAEO,UADD,CAELH,KAAK,CAAE,CAFF,CAGLK,YAAY,CAAE,MAAKX,KAAL,CAAWU,kBAHpB,CAFM,CAObH,IAAI,CAAE,EAPO,CAAf,CASA,MAAKP,KAAL,CAAWH,iBAAX,CAA6BM,MAA7B,EACD,CAXD,IAWO,CACL,MAAKF,WAAL,CAAiBQ,UAAjB,EACD,CACD,MAAKG,QAAL,CAAc,CAAEC,UAAU,CAAEJ,UAAd,CAAd,EACD,CAhDwC,CAEvC,MAAKK,KAAL,CAAa,CACXD,UAAU,CAAE,CADD,CAAb,CAFuC,aAKxC,C,+FAEqBE,S,CAAiCC,S,CAAiC,CACtF,GAAI,KAAKhB,KAAL,CAAWU,kBAAX,GAAkCK,SAAS,CAACL,kBAA5C,EAAkEK,SAAS,CAACL,kBAAV,GAAiC,EAAvG,CAA2G,CACzG,KAAKT,WAAL,GACD,CACD,MAAO,KAAP,CACD,C,6DAEmB,CAClB,GAAI,KAAKD,KAAL,CAAWU,kBAAX,GAAkC,EAAtC,CAA0C,CACxC,KAAKT,WAAL,GACD,CACF,C,uCAgCQ,CACPgB,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyC,KAAKlB,KAAL,CAAWmB,cAApD,EACA,mBACE,2BAAK,SAAS,CAAC,oCAAf,eACE,yBAAG,SAAS,CAAC,4BAAb,oDADF,CAEG,KAAKnB,KAAL,CAAWU,kBAAX,GAAkC,EAAlC,eAAwC,yBAAG,SAAS,CAAC,4BAAb,+CAAkE,KAAKV,KAAL,CAAWU,kBAA7E,MAF3C,cAGE,2BAAK,SAAS,CAAC,0BAAf,EACG,KAAKV,KAAL,CAAWmB,cAAX,EAA6B,KAAKnB,KAAL,CAAWmB,cAAX,CAA0BC,WAAvD,CAAuE,KAAKpB,KAAL,CAAWmB,cAAX,CAA0BC,WAA3B,CAAgEC,MAAhE,CAAyE,CAAzE,CAA8E,KAAKrB,KAAL,CAAWmB,cAAX,CAA0BC,WAA3B,CAAgEE,GAAhE,CAClJ,SAACC,IAAD,CAAOC,KAAP,qBAAiB,oBAAC,kBAAD,EAAoB,IAAI,CAAED,IAA1B,CAAgC,KAAK,CAAEC,KAAvC,CAA8C,GAAG,CAAEA,KAAnD,EAAjB,EADkJ,CAA7E,cACY,mFADlF,cAEC,oBAAC,QAAD,MAHJ,CAHF,cAsBE,oBAAC,MAAD,EAAQ,WAAW,CAAE,KAAKV,KAAL,CAAWD,UAAhC,CAA4C,SAAS,CAAE,KAAKb,KAAL,CAAWmB,cAAX,EAA6B,IAA7B,CAAoC,KAAKnB,KAAL,CAAWmB,cAAX,CAA0BM,SAA9D,CAAoF,CAA3I,CAA8I,oBAAoB,CAAE,KAAKjB,oBAAzK,EAtBF,CADF,CA0BD,C,4BA/E0BhB,KAAK,CAACkC,S,EAkFnC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACb,KAAD,CAAmB,CACzC,MAAO,CACLK,cAAc,CAAEL,KAAK,CAACK,cADjB,CAELT,kBAAkB,CAAEI,KAAK,CAACJ,kBAFrB,CAAP,CAID,CALD,CAOA,cAAejB,CAAAA,OAAO,CACpBkC,eADoB,CAEpB,CAAE7B,mBAAmB,CAAnBA,mBAAF,CAAuBD,iBAAiB,CAAjBA,iBAAvB,CAFoB,CAAP,CAGbE,cAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'pagination.css';\r\nimport TournamentOverview from 'components/TournamentOverview';\r\nimport Paging from 'components/Paging';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { searchTournaments } from 'components/Header/actions';\r\nimport { queryListTournament } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IAllTournamentsProps extends React.ClassAttributes<AllTournaments> {\r\n  listTournament: IParams | null;\r\n  globalSearchString: string;\r\n\r\n  queryListTournament(param: IBigRequest): void;\r\n  searchTournaments(param: IBigRequest): void;\r\n}\r\n\r\ninterface IAllTournamentsState {\r\n  activePage: number;\r\n}\r\n\r\nclass AllTournaments extends React.Component<IAllTournamentsProps, IAllTournamentsState> {\r\n  constructor(props: IAllTournamentsProps) {\r\n    super(props);\r\n    this.state = {\r\n      activePage: 1,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IAllTournamentsProps, nextState: IAllTournamentsState) {\r\n    if (this.props.globalSearchString !== nextProps.globalSearchString && nextProps.globalSearchString === '') {\r\n      this.requestData();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.globalSearchString === '') {\r\n      this.requestData();\r\n    }\r\n  }\r\n\r\n  private requestData = (page = 1) => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        page,\r\n        limit: 3,\r\n      },\r\n      data: {},\r\n    }\r\n    this.props.queryListTournament(params);\r\n  }\r\n\r\n  private onChangeSelectedPage = (pageNumber: number) => {\r\n    if (this.props.globalSearchString !== '') {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          page: pageNumber,\r\n          limit: 3,\r\n          searchString: this.props.globalSearchString,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.searchTournaments(params);\r\n    } else {\r\n      this.requestData(pageNumber);\r\n    }\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  render() {\r\n    console.log('this.props.listTournament', this.props.listTournament);\r\n    return (\r\n      <div className=\"AllTournaments-container-container\">\r\n        <p className=\"AllTournaments-header-text\">Tất cả các giải đấu</p>\r\n        {this.props.globalSearchString !== '' && <p className=\"AllTournaments-search-text\">Kết quả tìm kiếm cho: \"{this.props.globalSearchString}\"</p>}\r\n        <div className=\"AllTournaments-container\">\r\n          {this.props.listTournament && this.props.listTournament.Tournaments ? ((this.props.listTournament.Tournaments as unknown as IParams[]).length > 0 ? (this.props.listTournament.Tournaments as unknown as IParams[]).map(\r\n            (item, index) => <TournamentOverview info={item} index={index} key={index} />) : <p>Không tìm thấy kết quả nào!</p>) :\r\n            <Skeleton />\r\n          }\r\n        </div>\r\n        {/* <ReactPaginate\r\n          previousLabel={'<<'}\r\n          nextLabel={'>>'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={15}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          // onPageChange={this.handlePageClick}\r\n          containerClassName={'pagination'}\r\n          activeClassName={'active'}\r\n          disabledClassName={'disabled'}\r\n        /> */}\r\n        <Paging currentPage={this.state.activePage} totalPage={this.props.listTournament != null ? this.props.listTournament.TotalPage as number : 0} onChangeSelectedPage={this.onChangeSelectedPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTournament: state.listTournament,\r\n    globalSearchString: state.globalSearchString,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryListTournament, searchTournaments }\r\n)(AllTournaments);"]},"metadata":{},"sourceType":"module"}