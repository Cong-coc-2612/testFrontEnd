{"ast":null,"code":"import _objectSpread from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import*as React from'react';// import ReduxBlockUi from 'react-block-ui/redux';\nimport{AutoSizer,MultiGrid}from'react-virtualized';import'./styles.css';var STYLE={// backgroundColor: 'red',\n};// const STYLE_BOTTOM_LEFT_GRID = {\n//   borderRight: '2px solid #d0e9fa',\n// };\n// const STYLE_BOTTOM_LEFT_GRID_KBSV = {\n//   borderRight: '2px solid rgb(219, 199, 174)',\n//   backgroundColor: 'white',\n// };\n// const STYLE_BOTTOM_LEFT_GRID_BOARD_MODE = {\n//   borderRight: '2px solid #565c61',\n//   backgroundColor: '#38444F',\n// };\n// const STYLE_BOTTOM_LEFT_GRID_BOARD_MODE_KBSV = {\n//   borderRight: '2px solid #565c61',\n//   backgroundColor: '#282624',\n// };\n// const STYLE_BOTTOM_RIGHT_GRID = {\n//   backgroundColor: 'white',\n// };\n// const STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE = {\n//   backgroundColor: '#38444F',\n// };\n// const STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE_KBSV = {\n//   backgroundColor: '#282624',\n// };\n// const STYLE_TOP_LEFT_GRID = {\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\n//   borderRight: '2px solid #d0e9fa',\n//   backgroundColor: '#ededed',\n// };\n// const STYLE_TOP_LEFT_GRID_KBSV = {\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\n//   borderRight: '2px solid rgb(219, 199, 174)',\n//   backgroundColor: 'rgba(250, 193, 28, 0.2)',\n// };\n// const STYLE_TOP_LEFT_GRID_BOARD_MODE = {\n//   borderBottom: '1px solid #818181',\n//   borderRight: '2px solid #565c61',\n//   backgroundColor: '#ededed',\n// };\n// const STYLE_TOP_LEFT_GRID_BOARD_MODE_KBSV = {\n//   borderBottom: '1px solid #818181',\n//   borderRight: '2px solid #565c61',\n//   backgroundColor: '#282624',\n// };\n// const STYLE_TOP_RIGHT_GRID = {\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\n//   backgroundColor: 'rgba(241, 243, 246, 1)',\n// };\n// const STYLE_TOP_RIGHT_GRID_KBSV = {\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\n//   backgroundColor: 'rgb(250, 193, 28, .1)',\n// };\n// const STYLE_TOP_RIGHT_GRID_BOARD_MODE = {\n//   borderBottom: '1px solid #818181',\n//   backgroundColor: 'rgba(241, 243, 246, 1)',\n// };\n// const STYLE_TOP_RIGHT_GRID_BOARD_MODE_KBSV = {\n//   borderBottom: '1px solid #818181',\n//   backgroundColor: '#282624',\n// };\nexport var SheetData=/*#__PURE__*/function(_React$Component){_inherits(SheetData,_React$Component);var _super=_createSuper(SheetData);// private virtualList: MultiGrid;\nfunction SheetData(props){var _this;_classCallCheck(this,SheetData);_this=_super.call(this,props);_this.list=[{}];_this.lock=false;_this.config=void 0;_this.loadMore=true;_this.componentDidMount=function(){if(_this.props.data!=null){_this.processData();}// if (this.props.singleData != null) {\n//   this.processSingleData();\n// }\n};_this.processData=function(){var data=_this.props.data;if(data==null){_this.loadMore=true;_this.list=[{}];}else{_this.list=[{}].concat(_toConsumableArray(data));}};_this.getColumnWidth=function(_ref){var index=_ref.index;return _this.config.header[index].width;};_this.getRowHeight=function(_ref2){var index=_ref2.index;if(index===0){return 40;}else{return _this.config.rowHeight;}};_this.onScroll=function(_ref3){var clientHeight=_ref3.clientHeight,clientWidth=_ref3.clientWidth,scrollHeight=_ref3.scrollHeight,scrollLeft=_ref3.scrollLeft,scrollTop=_ref3.scrollTop,scrollWidth=_ref3.scrollWidth;if(clientHeight!==undefined&&scrollTop!==undefined&&scrollHeight!==undefined){if((scrollTop+clientHeight)/scrollHeight>0.8&&_this.lock===false){if(_this.props.requestLoadMore&&_this.loadMore&&_this.props.data!=null){_this.props.requestLoadMore();_this.lock=true;}}}};_this.cellRenderer=function(_ref4){var columnIndex=_ref4.columnIndex,key=_ref4.key,rowIndex=_ref4.rowIndex,style=_ref4.style;var _this$props=_this.props,config=_this$props.config,haveTotalRow=_this$props.haveTotalRow;var properties=config.header[columnIndex];var rowData=_this.list[rowIndex];if(rowData){if(rowIndex===0&&config.hideHeader!==true){return/*#__PURE__*/React.createElement(\"div\",{key:key,style:style},/*#__PURE__*/React.createElement(\"div\",{className:\"SheetData-Column1 \".concat(columnIndex===config.fixedColumnCount-1&&'SheetData-last-fixed-column'),style:_objectSpread({},properties.style,{},config.headerStyle)},properties.label));}else{// return null;\n// if (haveTotalRow !== true) {\nif(columnIndex<=config.header.length){return/*#__PURE__*/React.createElement(\"div\",Object.assign({key:key,style:style,onMouseOver:function onMouseOver(){_this.setState({hoveredColumnIndex:columnIndex,hoveredRowIndex:rowIndex});// this.virtualList.forceUpdate();\n}// className={`${domain ? sheetStyle.Column2KBSV : sheetStyle.Column2} \n//   ${this.props.boardMode === true ? sheetStyle.BlackColumn : ''} \n//   ${rowIndex === this.state.hoveredRowIndex && sheetStyle.HoverItem}\n//   ${this.props.isShowOrderHistory && rowIndex === this.state.onClickRowIndex && sheetStyle.OnClickItem}\n//   ${this.props.isRowClickable === true ? sheetStyle.ColumnClickable : ''} \n//   ${rowIndex % 2 === 0 ? sheetStyle.Highlight : ''}\n//   ${rowIndex % 2 === 0 && this.props.boardMode === true ? sheetStyle.HighlightBlack : ''}\n//   ${columnIndex === config.header.length - 1 ? sheetStyle.ColumnLast : ''}`}\n},_this.props.isRowClickable===true?{onClick:_this.onClickRow(rowData,rowIndex)}:null),/*#__PURE__*/React.createElement(\"div\",{className:\"SheetData-Column2 \".concat(columnIndex===config.fixedColumnCount-1?'SheetData-last-fixed-column':'SheetData-notLast-fixed-column',\" \").concat(rowIndex%2!==0?'SheetData-Row1':'SheetData-Row2')},properties.element(rowData,rowIndex,properties.style)));}else{return null;}// } else {\n//   if (rowIndex < this.list.length - 1) {\n//     if (columnIndex <= config.header.length) {\n//       return (\n//         <div\n//           key={key}\n//           style={style}\n//           onMouseOver={() => {\n//             this.setState({\n//               hoveredColumnIndex: columnIndex,\n//               hoveredRowIndex: rowIndex,\n//             });\n//             // this.virtualList.forceUpdate();\n//           }}\n//           // className={`${domain ? sheetStyle.Column2KBSV : sheetStyle.Column2} \n//           //   ${this.props.boardMode === true ? sheetStyle.BlackColumn : ''} \n//           //   ${rowIndex === this.state.hoveredRowIndex && sheetStyle.HoverItem}\n//           //   ${this.props.isShowOrderHistory &&\n//           //   rowIndex === this.state.onClickRowIndex &&\n//           //   sheetStyle.OnClickItem}\n//           //   ${this.props.isRowClickable === true ? sheetStyle.ColumnClickable : ''} \n//           //   ${rowIndex % 2 === 0 ? sheetStyle.Highlight : ''}\n//           //   ${rowIndex % 2 === 0 && this.props.boardMode === true ? sheetStyle.HighlightBlack : ''}\n//           //   ${columnIndex === config.header.length - 1 ? sheetStyle.ColumnLast : ''}`}\n//           {...(this.props.isRowClickable === true ? { onClick: this.onClickRow(rowData, rowIndex) } : null)}\n//         >\n//           {properties.element(rowData, rowIndex, properties.style)}\n//         </div>\n//       );\n//     } else {\n//       return null;\n//     }\n//   } else {\n//     return (\n//       <div key={key} style={style}>\n//         <div\n//           // className={`${sheetStyle.ColumnLastKBSV} ${\n//           //   this.props.boardMode === true ? sheetStyle.BlackColumn : ''\n//           //   } ${columnIndex === config.header.length - 1 ? sheetStyle.ColumnLast : ''}`}\n//           style={{ ...properties.style, ...config.headerStyle }}\n//         >\n//           {properties.element(rowData, -1, properties.style)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n}}else{return null;}};_this.onClickRow=function(rowData,rowIndex){return function(){if(_this.props.onClickRow!=null){_this.props.onClickRow(rowData);}if(_this.props.isShowOrderHistory===true){_this.setState({onClickRowIndex:rowIndex});}};};_this.state={};_this.config=JSON.parse(JSON.stringify(_this.props.config));_this.config.totalWidth=_this.config.header.reduce(function(a,b){return a+b.width;},0);_this.config.totalFixedWidth=_this.config.header.reduce(function(a,b,index){return a+(index<_this.config.fixedColumnCount?b.width:0);},0);return _this;}_createClass(SheetData,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){var _this2=this;if(this.props.config!==nextProps.config){this.config=JSON.parse(JSON.stringify(nextProps.config));this.config.totalWidth=this.config.header.reduce(function(a,b){return a+b.width;},0);this.config.totalFixedWidth=this.config.header.reduce(function(a,b,index){return a+(index<_this2.config.fixedColumnCount?b.width:0);},0);}return true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){}// if (this.props.data !== prevProps.data) {\n//   this.processData();\n// } else if (this.props.data != null) {\n// if (this.virtualList != null && this.virtualList.recomputeGridSize != null) {\n//   this.virtualList.recomputeGridSize();\n// }\n// }\n// private processSingleData = () => {\n//   const { config, singleData } = this.props;\n//   if (singleData == null) {\n//     this.list = [{}];\n//   } else {\n//     if (singleData) {\n//       this.list = [];\n//       if (config.hideHeader !== true) {\n//         this.list.push({});\n//       }\n//       this.list = this.list.concat([singleData]);\n//     } else {\n//       this.list = [];\n//       if (config.hideHeader !== true) {\n//         this.list.push({});\n//       }\n//     }\n//   }\n// };\n},{key:\"render\",value:function render(){var _this3=this;var config=this.props.config;// const domain = store.getState().config.domain === 'kbsv';\nvar SheetDataForm=/*#__PURE__*/ // <AutoSizer>\n//   {({ width, height }: Size) => {\n//     const totalWidth = config.header.reduce((a: number, b: ISheetDataColumn) => a + b.width, 0);\n//     if (width - 6 > totalWidth) {\n//       //6px is Scrollbar width\n//       for (let i = 0; i < this.config.header.length; i++) {\n//         if (i >= config.fixedColumnCount) {\n//           this.config.header[i].width = Math.floor(\n//             (config.header[i].width / (this.config.totalWidth! - this.config.totalFixedWidth!)) *\n//             (width - this.config.totalFixedWidth! - 6)\n//           );\n//         }\n//       }\n//     } else {\n//       this.config = JSON.parse(JSON.stringify(this.props.config));\n//       this.config.totalWidth = this.config.header.reduce((a: number, b: ISheetDataColumn) => a + b.width, 0);\n//       this.config.totalFixedWidth = this.config.header.reduce(\n//         (a: number, b: ISheetDataColumn, index: number) =>\n//           a + (index < this.config.fixedColumnCount ? b.width : 0),\n//         0\n//       );\n//     }\n// return (\nReact.createElement(MultiGrid// ref={(ref: MultiGrid) => (this.virtualList = ref)}\n,{fixedColumnCount:config.fixedColumnCount,fixedRowCount:config.fixedRowCount,cellRenderer:this.cellRenderer,columnWidth:this.getColumnWidth,columnCount:config.header.length,enableFixedColumnScroll:false,enableFixedRowScroll:false,rowHeight:this.getRowHeight,rowCount:1// rowCount={this.list.length}\n,style:STYLE// styleBottomLeftGrid={\n//   this.props.boardMode === true\n//     ? domain\n//       ? STYLE_BOTTOM_LEFT_GRID_BOARD_MODE_KBSV\n//       : STYLE_BOTTOM_LEFT_GRID_BOARD_MODE\n//     : domain\n//       ? STYLE_BOTTOM_LEFT_GRID_KBSV\n//       : STYLE_BOTTOM_LEFT_GRID\n// }\n// styleTopLeftGrid={\n//   this.props.boardMode === true\n//     ? domain\n//       ? STYLE_TOP_LEFT_GRID_BOARD_MODE_KBSV\n//       : STYLE_TOP_LEFT_GRID_BOARD_MODE\n//     : domain\n//       ? STYLE_TOP_LEFT_GRID_KBSV\n//       : STYLE_TOP_LEFT_GRID\n// }\n// styleTopRightGrid={\n//   this.props.boardMode\n//     ? domain\n//       ? STYLE_TOP_RIGHT_GRID_BOARD_MODE_KBSV\n//       : STYLE_TOP_RIGHT_GRID_BOARD_MODE\n//     : domain\n//       ? STYLE_TOP_RIGHT_GRID_KBSV\n//       : STYLE_TOP_RIGHT_GRID\n// }\n// styleBottomRightGrid={\n//   this.props.boardMode === true\n//     ? domain\n//       ? STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE_KBSV\n//       : STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE\n//     : STYLE_BOTTOM_RIGHT_GRID\n// }\n,width:200,height:200// hideTopRightGridScrollbar={true}\n// hideBottomLeftGridScrollbar={true}\n// onScroll={this.onScroll}\n})// );\n//   }}\n// </AutoSizer>\n;if(this.list.length>0){// if (store.getState().config.domain !== 'kbsv') {\n//   return (\n//     <div\n//       // className={sheetStyle.SheetData}\n//       onMouseOut={() => {\n//         this.setState({\n//           hoveredColumnIndex: null,\n//           hoveredRowIndex: null,\n//         });\n//         this.virtualList.forceUpdate();\n//       }}\n//     >\n//       {SheetDataForm}\n//     </div>\n//   );\n// } else {\nreturn/*#__PURE__*/ // <ReduxBlockUi\n//   tag=\"div\"\n//   className={'SheetData'}\n//   block={this.props.blockAction}\n//   unblock={this.props.unBlockAction}\n//   onMouseOut={() => {\n//     this.setState({\n//       hoveredColumnIndex: null,\n//       hoveredRowIndex: null,\n//     });\n//     // this.virtualList.forceUpdate();\n//   }}\n// >\n// { SheetDataForm }\nReact.createElement(AutoSizer,null,function(_ref5){var height=_ref5.height,width=_ref5.width;return/*#__PURE__*/React.createElement(MultiGrid,{width:width,height:height,rowCount:_this3.list.length,rowHeight:_this3.getRowHeight,columnCount:config.header.length,columnWidth:_this3.getColumnWidth,cellRenderer:_this3.cellRenderer,fixedColumnCount:config.fixedColumnCount,fixedRowCount:config.fixedRowCount,enableFixedColumnScroll:false,enableFixedRowScroll:false,hideTopRightGridScrollbar:true,hideBottomLeftGridScrollbar:true,style:{display:'flex',flexDirection:'column'}});})// <AutoSizer>\n//   {({ height, width }: Size) => {\n//     return (\n//       <MultiGrid\n//         width={700}\n//         height={250}\n//         rowCount={this.list.length}\n//         rowHeight={this.getRowHeight}\n//         columnCount={config.header.length}\n//         columnWidth={this.getColumnWidth}\n//         cellRenderer={this.cellRenderer}\n//         fixedColumnCount={config.fixedColumnCount}\n//         fixedRowCount={config.fixedRowCount}\n//         enableFixedColumnScroll={false}\n//         enableFixedRowScroll={false}\n//         hideTopRightGridScrollbar={true}\n//         hideBottomLeftGridScrollbar={true}\n//         style={{ display: 'flex' }}\n//       />\n//     );\n//   }}\n// </AutoSizer>,\n// </ReduxBlockUi>\n;}// }\nreturn null;}}]);return SheetData;}(React.Component);SheetData.defaultProps={isRowClickable:true,boardMode:false,isTotalRow:false,haveTotalRow:false};export default SheetData;","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/components/SheetData/index.tsx"],"names":["React","AutoSizer","MultiGrid","STYLE","SheetData","props","list","lock","config","loadMore","componentDidMount","data","processData","getColumnWidth","index","header","width","getRowHeight","rowHeight","onScroll","clientHeight","clientWidth","scrollHeight","scrollLeft","scrollTop","scrollWidth","undefined","requestLoadMore","cellRenderer","columnIndex","key","rowIndex","style","haveTotalRow","properties","rowData","hideHeader","fixedColumnCount","headerStyle","label","length","setState","hoveredColumnIndex","hoveredRowIndex","isRowClickable","onClick","onClickRow","element","isShowOrderHistory","onClickRowIndex","state","JSON","parse","stringify","totalWidth","reduce","a","b","totalFixedWidth","nextProps","prevProps","SheetDataForm","fixedRowCount","height","display","flexDirection","Component","defaultProps","boardMode","isTotalRow"],"mappings":"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AAI1C,KAAK,CAAG,MAAI,CAACN,MAAL,CAAY6B,gBAApB,CAAuCoB,CAAC,CAACzC,KAAzC,CAAiD,CAArD,CAApD,EAD4B,CAE5B,CAF4B,CAA9B,CAID,CAED,MAAO,KAAP,CACD,CA7CH,8DA+CqB4C,SA/CrB,CA+CiD,CAQ9C,CAPC;AACA;AACA;AACA;AACA;AACA;AACA;AAGF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5EF,uCA2OW,oBACCpD,CAAAA,MADD,CACY,KAAKH,KADjB,CACCG,MADD,CAEP;AAEA,GAAMqD,CAAAA,aAAa,eACjB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,oBAAC,SACC;AADF,EAEE,gBAAgB,CAAErD,MAAM,CAAC6B,gBAF3B,CAGE,aAAa,CAAE7B,MAAM,CAACsD,aAHxB,CAIE,YAAY,CAAE,KAAKlC,YAJrB,CAKE,WAAW,CAAE,KAAKf,cALpB,CAME,WAAW,CAAEL,MAAM,CAACO,MAAP,CAAcyB,MAN7B,CAOE,uBAAuB,CAAE,KAP3B,CAQE,oBAAoB,CAAE,KARxB,CASE,SAAS,CAAE,KAAKvB,YATlB,CAUE,QAAQ,CAAE,CACV;AAXF,CAYE,KAAK,CAAEd,KACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CF,CA+CE,KAAK,CAAE,GA/CT,CAgDE,MAAM,CAAE,GACV;AACA;AACA;AAnDA,EAqDA;AACA;AACA;AAjFF,CAoFA,GAAI,KAAKG,IAAL,CAAUkC,MAAV,CAAmB,CAAvB,CAA0B,CACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAC,SAAD,MACG,mBAAGuB,CAAAA,MAAH,OAAGA,MAAH,CAAW/C,KAAX,OAAWA,KAAX,oBACC,oBAAC,SAAD,EACE,KAAK,CAAEA,KADT,CAEE,MAAM,CAAE+C,MAFV,CAGE,QAAQ,CAAE,MAAI,CAACzD,IAAL,CAAUkC,MAHtB,CAIE,SAAS,CAAE,MAAI,CAACvB,YAJlB,CAKE,WAAW,CAAET,MAAM,CAACO,MAAP,CAAcyB,MAL7B,CAME,WAAW,CAAE,MAAI,CAAC3B,cANpB,CAOE,YAAY,CAAE,MAAI,CAACe,YAPrB,CAQE,gBAAgB,CAAEpB,MAAM,CAAC6B,gBAR3B,CASE,aAAa,CAAE7B,MAAM,CAACsD,aATxB,CAUE,uBAAuB,CAAE,KAV3B,CAWE,oBAAoB,CAAE,KAXxB,CAYE,yBAAyB,CAAE,IAZ7B,CAaE,2BAA2B,CAAE,IAb/B,CAcE,KAAK,CAAE,CAAEE,OAAO,CAAE,MAAX,CAAmBC,aAAa,CAAE,QAAlC,CAdT,EADD,EADH,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDF,CA2DD,CACD;AACA,MAAO,KAAP,CACD,CAlZH,uBAA+BjE,KAAK,CAACkE,SAArC,EAAa9D,S,CACJ+D,Y,CAAe,CACpBvB,cAAc,CAAE,IADI,CAEpBwB,SAAS,CAAE,KAFS,CAGpBC,UAAU,CAAE,KAHQ,CAIpBpC,YAAY,CAAE,KAJM,C,CAoZxB,cAAe7B,CAAAA,SAAf","sourcesContent":["import * as React from 'react';\r\n// import ReduxBlockUi from 'react-block-ui/redux';\r\nimport { AutoSizer, MultiGrid, Size, Index, ScrollParams, GridCellProps } from 'react-virtualized';\r\nimport './styles.css';\r\nimport { IParams } from 'interfaces/common';\r\n\r\nconst STYLE = {\r\n  // backgroundColor: 'red',\r\n};\r\n// const STYLE_BOTTOM_LEFT_GRID = {\r\n//   borderRight: '2px solid #d0e9fa',\r\n// };\r\n\r\n// const STYLE_BOTTOM_LEFT_GRID_KBSV = {\r\n//   borderRight: '2px solid rgb(219, 199, 174)',\r\n//   backgroundColor: 'white',\r\n// };\r\n\r\n// const STYLE_BOTTOM_LEFT_GRID_BOARD_MODE = {\r\n//   borderRight: '2px solid #565c61',\r\n//   backgroundColor: '#38444F',\r\n// };\r\n\r\n// const STYLE_BOTTOM_LEFT_GRID_BOARD_MODE_KBSV = {\r\n//   borderRight: '2px solid #565c61',\r\n//   backgroundColor: '#282624',\r\n// };\r\n// const STYLE_BOTTOM_RIGHT_GRID = {\r\n//   backgroundColor: 'white',\r\n// };\r\n// const STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE = {\r\n//   backgroundColor: '#38444F',\r\n// };\r\n\r\n// const STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE_KBSV = {\r\n//   backgroundColor: '#282624',\r\n// };\r\n// const STYLE_TOP_LEFT_GRID = {\r\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\r\n//   borderRight: '2px solid #d0e9fa',\r\n//   backgroundColor: '#ededed',\r\n// };\r\n\r\n// const STYLE_TOP_LEFT_GRID_KBSV = {\r\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\r\n//   borderRight: '2px solid rgb(219, 199, 174)',\r\n//   backgroundColor: 'rgba(250, 193, 28, 0.2)',\r\n// };\r\n\r\n// const STYLE_TOP_LEFT_GRID_BOARD_MODE = {\r\n//   borderBottom: '1px solid #818181',\r\n//   borderRight: '2px solid #565c61',\r\n//   backgroundColor: '#ededed',\r\n// };\r\n\r\n// const STYLE_TOP_LEFT_GRID_BOARD_MODE_KBSV = {\r\n//   borderBottom: '1px solid #818181',\r\n//   borderRight: '2px solid #565c61',\r\n//   backgroundColor: '#282624',\r\n// };\r\n\r\n// const STYLE_TOP_RIGHT_GRID = {\r\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\r\n//   backgroundColor: 'rgba(241, 243, 246, 1)',\r\n// };\r\n\r\n// const STYLE_TOP_RIGHT_GRID_KBSV = {\r\n//   borderBottom: '1px solid rgba(128,128,128,0.27)',\r\n//   backgroundColor: 'rgb(250, 193, 28, .1)',\r\n// };\r\n\r\n// const STYLE_TOP_RIGHT_GRID_BOARD_MODE = {\r\n//   borderBottom: '1px solid #818181',\r\n//   backgroundColor: 'rgba(241, 243, 246, 1)',\r\n// };\r\n\r\n// const STYLE_TOP_RIGHT_GRID_BOARD_MODE_KBSV = {\r\n//   borderBottom: '1px solid #818181',\r\n//   backgroundColor: '#282624',\r\n// };\r\n\r\ninterface ISheetDataColumn {\r\n  label: string | React.ReactElement;\r\n  width: number;\r\n  style?: React.CSSProperties;\r\n  element(rowData: IParams, index: number, style?: React.CSSProperties): React.ReactNode;\r\n}\r\n\r\nexport interface ISheetDataConfig {\r\n  fetchCount: number;\r\n  fixedColumnCount: number;\r\n  fixedRowCount: number;\r\n  rowHeight: number;\r\n  hideHeader?: boolean;\r\n  header: ISheetDataColumn[];\r\n  headerStyle?: React.CSSProperties;\r\n  totalWidth?: number;\r\n  totalFixedWidth?: number;\r\n}\r\n\r\ninterface ISheetDataProps extends React.ClassAttributes<SheetData> {\r\n  data?: IParams[] | null;\r\n  singleData?: IParams | null;\r\n  config: ISheetDataConfig;\r\n  isRowClickable?: boolean;\r\n  boardMode?: boolean;\r\n  isShowOrderHistory?: boolean;\r\n  isPlusRow?: boolean;\r\n  isTotalRow?: boolean;\r\n  blockAction?: string[];\r\n  unBlockAction?: string[];\r\n  haveTotalRow?: boolean;\r\n\r\n  onClickRow?(rowData: IParams): void;\r\n  sheetDataRef?(ref: SheetData): void;\r\n  requestLoadMore?(): void;\r\n}\r\n\r\ninterface ISheetDataState {\r\n  hoveredRowIndex?: number | null;\r\n  hoveredColumnIndex?: number | null;\r\n  onClickRowIndex?: number | null;\r\n}\r\n\r\nexport class SheetData extends React.Component<ISheetDataProps, ISheetDataState> {\r\n  static defaultProps = {\r\n    isRowClickable: true,\r\n    boardMode: false,\r\n    isTotalRow: false,\r\n    haveTotalRow: false,\r\n  };\r\n\r\n  private list: IParams[] = [{}];\r\n  private lock = false;\r\n  // private virtualList: MultiGrid;\r\n  private config: ISheetDataConfig;\r\n  private loadMore = true;\r\n\r\n  constructor(props: ISheetDataProps) {\r\n    super(props);\r\n    this.state = {};\r\n    this.config = JSON.parse(JSON.stringify(this.props.config));\r\n    this.config.totalWidth = this.config.header.reduce((a: number, b: ISheetDataColumn) => a + b.width, 0);\r\n    this.config.totalFixedWidth = this.config.header.reduce(\r\n      (a: number, b: ISheetDataColumn, index: number) => a + (index < this.config.fixedColumnCount ? b.width : 0),\r\n      0\r\n    );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.data != null) {\r\n      this.processData();\r\n    }\r\n    // if (this.props.singleData != null) {\r\n    //   this.processSingleData();\r\n    // }\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps: ISheetDataProps) {\r\n    if (this.props.config !== nextProps.config) {\r\n      this.config = JSON.parse(JSON.stringify(nextProps.config));\r\n      this.config.totalWidth = this.config.header.reduce((a: number, b: ISheetDataColumn) => a + b.width, 0);\r\n      this.config.totalFixedWidth = this.config.header.reduce(\r\n        (a: number, b: ISheetDataColumn, index: number) => a + (index < this.config.fixedColumnCount ? b.width : 0),\r\n        0\r\n      );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps: ISheetDataProps) {\r\n    // if (this.props.data !== prevProps.data) {\r\n    //   this.processData();\r\n    // } else if (this.props.data != null) {\r\n    // if (this.virtualList != null && this.virtualList.recomputeGridSize != null) {\r\n    //   this.virtualList.recomputeGridSize();\r\n    // }\r\n    // }\r\n  }\r\n\r\n  // private processSingleData = () => {\r\n  //   const { config, singleData } = this.props;\r\n\r\n  //   if (singleData == null) {\r\n  //     this.list = [{}];\r\n  //   } else {\r\n  //     if (singleData) {\r\n  //       this.list = [];\r\n  //       if (config.hideHeader !== true) {\r\n  //         this.list.push({});\r\n  //       }\r\n  //       this.list = this.list.concat([singleData]);\r\n  //     } else {\r\n  //       this.list = [];\r\n  //       if (config.hideHeader !== true) {\r\n  //         this.list.push({});\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  private processData = () => {\r\n    const { data } = this.props;\r\n\r\n    if (data == null) {\r\n      this.loadMore = true;\r\n      this.list = [{}];\r\n    } else {\r\n      this.list = [{}, ...data];\r\n    }\r\n  };\r\n\r\n  private getColumnWidth = ({ index }: Index) => {\r\n    return this.config.header[index].width;\r\n  };\r\n\r\n  private getRowHeight = ({ index }: Index) => {\r\n    if (index === 0) {\r\n      return 40;\r\n    } else {\r\n      return this.config.rowHeight;\r\n    }\r\n  };\r\n\r\n  private onScroll = ({\r\n    clientHeight,\r\n    clientWidth,\r\n    scrollHeight,\r\n    scrollLeft,\r\n    scrollTop,\r\n    scrollWidth,\r\n  }: ScrollParams) => {\r\n    if (clientHeight !== undefined && scrollTop !== undefined && scrollHeight !== undefined) {\r\n      if ((scrollTop + clientHeight) / scrollHeight > 0.8 && this.lock === false) {\r\n        if (this.props.requestLoadMore && this.loadMore && this.props.data != null) {\r\n          this.props.requestLoadMore();\r\n          this.lock = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  private cellRenderer = ({ columnIndex, key, rowIndex, style }: GridCellProps) => {\r\n    const { config, haveTotalRow } = this.props;\r\n    const properties = config.header[columnIndex];\r\n    const rowData = this.list[rowIndex];\r\n\r\n    if (rowData) {\r\n      if (rowIndex === 0 && config.hideHeader !== true) {\r\n        return (\r\n          <div key={key} style={style}>\r\n            <div\r\n              className={`SheetData-Column1 ${columnIndex === config.fixedColumnCount - 1 && 'SheetData-last-fixed-column'}`}\r\n              style={{ ...properties.style, ...config.headerStyle }}\r\n            >\r\n              {properties.label}\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        // return null;\r\n        // if (haveTotalRow !== true) {\r\n        if (columnIndex <= config.header.length) {\r\n          return (\r\n            <div\r\n              key={key}\r\n              style={style}\r\n              onMouseOver={() => {\r\n                this.setState({\r\n                  hoveredColumnIndex: columnIndex,\r\n                  hoveredRowIndex: rowIndex,\r\n                });\r\n                // this.virtualList.forceUpdate();\r\n              }}\r\n              // className={`${domain ? sheetStyle.Column2KBSV : sheetStyle.Column2} \r\n              //   ${this.props.boardMode === true ? sheetStyle.BlackColumn : ''} \r\n              //   ${rowIndex === this.state.hoveredRowIndex && sheetStyle.HoverItem}\r\n              //   ${this.props.isShowOrderHistory && rowIndex === this.state.onClickRowIndex && sheetStyle.OnClickItem}\r\n              //   ${this.props.isRowClickable === true ? sheetStyle.ColumnClickable : ''} \r\n              //   ${rowIndex % 2 === 0 ? sheetStyle.Highlight : ''}\r\n              //   ${rowIndex % 2 === 0 && this.props.boardMode === true ? sheetStyle.HighlightBlack : ''}\r\n              //   ${columnIndex === config.header.length - 1 ? sheetStyle.ColumnLast : ''}`}\r\n              {...(this.props.isRowClickable === true ? { onClick: this.onClickRow(rowData, rowIndex) } : null)}\r\n            >\r\n              <div\r\n                className={`SheetData-Column2 ${columnIndex === config.fixedColumnCount - 1 ? 'SheetData-last-fixed-column' : 'SheetData-notLast-fixed-column'} ${rowIndex % 2 !== 0 ? 'SheetData-Row1' : 'SheetData-Row2'}`}\r\n              >\r\n                {properties.element(rowData, rowIndex, properties.style)}\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n        // } else {\r\n        //   if (rowIndex < this.list.length - 1) {\r\n        //     if (columnIndex <= config.header.length) {\r\n        //       return (\r\n        //         <div\r\n        //           key={key}\r\n        //           style={style}\r\n        //           onMouseOver={() => {\r\n        //             this.setState({\r\n        //               hoveredColumnIndex: columnIndex,\r\n        //               hoveredRowIndex: rowIndex,\r\n        //             });\r\n        //             // this.virtualList.forceUpdate();\r\n        //           }}\r\n        //           // className={`${domain ? sheetStyle.Column2KBSV : sheetStyle.Column2} \r\n        //           //   ${this.props.boardMode === true ? sheetStyle.BlackColumn : ''} \r\n        //           //   ${rowIndex === this.state.hoveredRowIndex && sheetStyle.HoverItem}\r\n        //           //   ${this.props.isShowOrderHistory &&\r\n        //           //   rowIndex === this.state.onClickRowIndex &&\r\n        //           //   sheetStyle.OnClickItem}\r\n        //           //   ${this.props.isRowClickable === true ? sheetStyle.ColumnClickable : ''} \r\n        //           //   ${rowIndex % 2 === 0 ? sheetStyle.Highlight : ''}\r\n        //           //   ${rowIndex % 2 === 0 && this.props.boardMode === true ? sheetStyle.HighlightBlack : ''}\r\n        //           //   ${columnIndex === config.header.length - 1 ? sheetStyle.ColumnLast : ''}`}\r\n        //           {...(this.props.isRowClickable === true ? { onClick: this.onClickRow(rowData, rowIndex) } : null)}\r\n        //         >\r\n        //           {properties.element(rowData, rowIndex, properties.style)}\r\n        //         </div>\r\n        //       );\r\n        //     } else {\r\n        //       return null;\r\n        //     }\r\n        //   } else {\r\n        //     return (\r\n        //       <div key={key} style={style}>\r\n        //         <div\r\n        //           // className={`${sheetStyle.ColumnLastKBSV} ${\r\n        //           //   this.props.boardMode === true ? sheetStyle.BlackColumn : ''\r\n        //           //   } ${columnIndex === config.header.length - 1 ? sheetStyle.ColumnLast : ''}`}\r\n        //           style={{ ...properties.style, ...config.headerStyle }}\r\n        //         >\r\n        //           {properties.element(rowData, -1, properties.style)}\r\n        //         </div>\r\n        //       </div>\r\n        //     );\r\n        //   }\r\n        // }\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  private onClickRow = (rowData: IParams, rowIndex?: number) => () => {\r\n    if (this.props.onClickRow != null) {\r\n      this.props.onClickRow(rowData);\r\n    }\r\n    if (this.props.isShowOrderHistory === true) {\r\n      this.setState({\r\n        onClickRowIndex: rowIndex,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { config } = this.props;\r\n    // const domain = store.getState().config.domain === 'kbsv';\r\n\r\n    const SheetDataForm = (\r\n      // <AutoSizer>\r\n      //   {({ width, height }: Size) => {\r\n      //     const totalWidth = config.header.reduce((a: number, b: ISheetDataColumn) => a + b.width, 0);\r\n      //     if (width - 6 > totalWidth) {\r\n      //       //6px is Scrollbar width\r\n\r\n      //       for (let i = 0; i < this.config.header.length; i++) {\r\n      //         if (i >= config.fixedColumnCount) {\r\n      //           this.config.header[i].width = Math.floor(\r\n      //             (config.header[i].width / (this.config.totalWidth! - this.config.totalFixedWidth!)) *\r\n      //             (width - this.config.totalFixedWidth! - 6)\r\n      //           );\r\n      //         }\r\n      //       }\r\n      //     } else {\r\n      //       this.config = JSON.parse(JSON.stringify(this.props.config));\r\n      //       this.config.totalWidth = this.config.header.reduce((a: number, b: ISheetDataColumn) => a + b.width, 0);\r\n      //       this.config.totalFixedWidth = this.config.header.reduce(\r\n      //         (a: number, b: ISheetDataColumn, index: number) =>\r\n      //           a + (index < this.config.fixedColumnCount ? b.width : 0),\r\n      //         0\r\n      //       );\r\n      //     }\r\n\r\n      // return (\r\n      <MultiGrid\r\n        // ref={(ref: MultiGrid) => (this.virtualList = ref)}\r\n        fixedColumnCount={config.fixedColumnCount}\r\n        fixedRowCount={config.fixedRowCount}\r\n        cellRenderer={this.cellRenderer}\r\n        columnWidth={this.getColumnWidth}\r\n        columnCount={config.header.length}\r\n        enableFixedColumnScroll={false}\r\n        enableFixedRowScroll={false}\r\n        rowHeight={this.getRowHeight}\r\n        rowCount={1}\r\n        // rowCount={this.list.length}\r\n        style={STYLE}\r\n        // styleBottomLeftGrid={\r\n        //   this.props.boardMode === true\r\n        //     ? domain\r\n        //       ? STYLE_BOTTOM_LEFT_GRID_BOARD_MODE_KBSV\r\n        //       : STYLE_BOTTOM_LEFT_GRID_BOARD_MODE\r\n        //     : domain\r\n        //       ? STYLE_BOTTOM_LEFT_GRID_KBSV\r\n        //       : STYLE_BOTTOM_LEFT_GRID\r\n        // }\r\n        // styleTopLeftGrid={\r\n        //   this.props.boardMode === true\r\n        //     ? domain\r\n        //       ? STYLE_TOP_LEFT_GRID_BOARD_MODE_KBSV\r\n        //       : STYLE_TOP_LEFT_GRID_BOARD_MODE\r\n        //     : domain\r\n        //       ? STYLE_TOP_LEFT_GRID_KBSV\r\n        //       : STYLE_TOP_LEFT_GRID\r\n        // }\r\n        // styleTopRightGrid={\r\n        //   this.props.boardMode\r\n        //     ? domain\r\n        //       ? STYLE_TOP_RIGHT_GRID_BOARD_MODE_KBSV\r\n        //       : STYLE_TOP_RIGHT_GRID_BOARD_MODE\r\n        //     : domain\r\n        //       ? STYLE_TOP_RIGHT_GRID_KBSV\r\n        //       : STYLE_TOP_RIGHT_GRID\r\n        // }\r\n        // styleBottomRightGrid={\r\n        //   this.props.boardMode === true\r\n        //     ? domain\r\n        //       ? STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE_KBSV\r\n        //       : STYLE_BOTTOM_RIGHT_GRID_BOARD_MODE\r\n        //     : STYLE_BOTTOM_RIGHT_GRID\r\n        // }\r\n        width={200}\r\n        height={200}\r\n      // hideTopRightGridScrollbar={true}\r\n      // hideBottomLeftGridScrollbar={true}\r\n      // onScroll={this.onScroll}\r\n      />\r\n      // );\r\n      //   }}\r\n      // </AutoSizer>\r\n    );\r\n\r\n    if (this.list.length > 0) {\r\n      // if (store.getState().config.domain !== 'kbsv') {\r\n      //   return (\r\n      //     <div\r\n      //       // className={sheetStyle.SheetData}\r\n      //       onMouseOut={() => {\r\n      //         this.setState({\r\n      //           hoveredColumnIndex: null,\r\n      //           hoveredRowIndex: null,\r\n      //         });\r\n      //         this.virtualList.forceUpdate();\r\n      //       }}\r\n      //     >\r\n      //       {SheetDataForm}\r\n      //     </div>\r\n      //   );\r\n      // } else {\r\n      return (\r\n        // <ReduxBlockUi\r\n        //   tag=\"div\"\r\n        //   className={'SheetData'}\r\n        //   block={this.props.blockAction}\r\n        //   unblock={this.props.unBlockAction}\r\n        //   onMouseOut={() => {\r\n        //     this.setState({\r\n        //       hoveredColumnIndex: null,\r\n        //       hoveredRowIndex: null,\r\n        //     });\r\n        //     // this.virtualList.forceUpdate();\r\n        //   }}\r\n        // >\r\n        // { SheetDataForm }\r\n        <AutoSizer>\r\n          {({ height, width }) => (\r\n            <MultiGrid\r\n              width={width}\r\n              height={height}\r\n              rowCount={this.list.length}\r\n              rowHeight={this.getRowHeight}\r\n              columnCount={config.header.length}\r\n              columnWidth={this.getColumnWidth}\r\n              cellRenderer={this.cellRenderer}\r\n              fixedColumnCount={config.fixedColumnCount}\r\n              fixedRowCount={config.fixedRowCount}\r\n              enableFixedColumnScroll={false}\r\n              enableFixedRowScroll={false}\r\n              hideTopRightGridScrollbar={true}\r\n              hideBottomLeftGridScrollbar={true}\r\n              style={{ display: 'flex', flexDirection: 'column' }}\r\n            />\r\n          )}\r\n        </AutoSizer>\r\n        // <AutoSizer>\r\n        //   {({ height, width }: Size) => {\r\n        //     return (\r\n        //       <MultiGrid\r\n        //         width={700}\r\n        //         height={250}\r\n        //         rowCount={this.list.length}\r\n        //         rowHeight={this.getRowHeight}\r\n        //         columnCount={config.header.length}\r\n        //         columnWidth={this.getColumnWidth}\r\n        //         cellRenderer={this.cellRenderer}\r\n        //         fixedColumnCount={config.fixedColumnCount}\r\n        //         fixedRowCount={config.fixedRowCount}\r\n        //         enableFixedColumnScroll={false}\r\n        //         enableFixedRowScroll={false}\r\n        //         hideTopRightGridScrollbar={true}\r\n        //         hideBottomLeftGridScrollbar={true}\r\n        //         style={{ display: 'flex' }}\r\n        //       />\r\n        //     );\r\n        //   }}\r\n        // </AutoSizer>,\r\n        // </ReduxBlockUi>\r\n      );\r\n    }\r\n    // }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SheetData;\r\n"]},"metadata":{},"sourceType":"module"}