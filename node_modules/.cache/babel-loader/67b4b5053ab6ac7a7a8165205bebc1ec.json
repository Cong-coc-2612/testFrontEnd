{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import ReduxBlockUi from'react-block-ui/redux';import TextInput from'components/TextInput';import config from'config';import{checkUsernameExisted,setUsernameExistedDefault}from'redux-saga/global-actions/CheckUsernameExisted-action';import{checkEmailExisted,setEmailExistedDefault}from'redux-saga/global-actions/CheckEmailExisted-action';import{CHECK_USERNAME_EXISTED_SUCCESS,CHECK_USERNAME_EXISTED_FAILED}from'redux-saga/global-reducers/IsUsernameExisted-reducer';import{CHECK_EMAIL_EXISTED_FAILED,CHECK_EMAIL_EXISTED_SUCCESS}from'redux-saga/global-reducers/IsEmailExisted-reducer';import{CHECK_USERNAME_EXISTED,CHECK_EMAIL_EXISTED,SIGNUP}from'redux-saga/actions';import{signUp}from'./actions';import{SIGNUP_FAILED,SIGNUP_SUCCESS}from'./reducers';import'./styles.css';var SignUp=/*#__PURE__*/function(_React$Component){_inherits(SignUp,_React$Component);var _super=_createSuper(SignUp);function SignUp(props){var _this;_classCallCheck(this,SignUp);_this=_super.call(this,props);_this.onChangeUserName=function(value){_this.setState({username:value});};_this.onChangeFirstName=function(value){_this.setState({firstName:value});};_this.onChangeLastName=function(value){_this.setState({lastName:value});};_this.validateUsername=function(){var usernameError=false;var usernameErrorContent='';if(_this.state.username.trim()===''||!config.regex.username.test(_this.state.username)){usernameError=true;usernameErrorContent='Tên đăng nhập không được trống, và phải chứa từ 8 đến 32 kí tự';}else{var params={path:'',param:{username:_this.state.username},data:{}};_this.props.checkUsernameExisted(params);}return{usernameError:usernameError,usernameErrorContent:usernameErrorContent};};_this.onBlurUserName=function(){var _this$validateUsernam=_this.validateUsername(),usernameError=_this$validateUsernam.usernameError,usernameErrorContent=_this$validateUsernam.usernameErrorContent;_this.setState({usernameError:usernameError,usernameErrorContent:usernameErrorContent});_this.props.setUsernameExistedDefault();};_this.validateEmail=function(){var emailError=false;var emailErrorContent='';if(_this.state.email.trim()===''||!config.regex.email.test(_this.state.email)){emailError=true;emailErrorContent='Email không hợp lệ';}else{var params={path:'',param:{email:_this.state.email},data:{}};_this.props.checkEmailExisted(params);}return{emailError:emailError,emailErrorContent:emailErrorContent};};_this.onBlurEmail=function(){var _this$validateEmail=_this.validateEmail(),emailError=_this$validateEmail.emailError,emailErrorContent=_this$validateEmail.emailErrorContent;_this.setState({emailError:emailError,emailErrorContent:emailErrorContent});_this.props.setEmailExistedDefault();};_this.onChangePassword=function(value){_this.setState({password:value});};_this.onChangeEmail=function(value){_this.setState({email:value});};_this.onChangeReconfirmPassword=function(value){_this.setState({reConfirmPassword:value});};_this.validate=function(){var passwordError=false;var passwordErrorContent='';var firstNameError=false;var firstNameErrorContent='';var lastNameError=false;var lastNameErrorContent='';var usernameErrorContent='';var usernameError=false;var emailErrorContent='';var emailError=false;var reconfirmPasswordErrorContent='';var reconfirmPasswordError=false;if(_this.state.password.includes(' ')||!config.regex.password.test(_this.state.password)||_this.state.password.trim()===''){passwordError=true;passwordErrorContent='Mật khẩu không được trống, không chứa dấu cách, và phải chứa từ 8 đến 32 kí tự';}if(_this.state.username.trim()===''||!config.regex.username.test(_this.state.username)){usernameError=true;usernameErrorContent='Tên đăng nhập không được trống, và phải chứa từ 8 đến 32 kí tự';}if(_this.state.firstName.trim()===''){firstNameError=true;firstNameErrorContent='Tên không được trống';}if(_this.state.lastName.trim()===''){lastNameError=true;lastNameErrorContent='Họ không được trống';}if(_this.state.email.trim()===''||!config.regex.email.test(_this.state.email)){emailError=true;emailErrorContent='Email không hợp lệ';}if(_this.state.reConfirmPassword!==_this.state.password){reconfirmPasswordError=true;reconfirmPasswordErrorContent='Nhập lại mật khẩu phải giống mật khẩu';}return{passwordError:passwordError,passwordErrorContent:passwordErrorContent,usernameErrorContent:usernameErrorContent,usernameError:usernameError,emailErrorContent:emailErrorContent,emailError:emailError,reconfirmPasswordErrorContent:reconfirmPasswordErrorContent,reconfirmPasswordError:reconfirmPasswordError,firstNameError:firstNameError,firstNameErrorContent:firstNameErrorContent,lastNameError:lastNameError,lastNameErrorContent:lastNameErrorContent};};_this.handleSignUp=function(){var _this$validate=_this.validate(),passwordError=_this$validate.passwordError,passwordErrorContent=_this$validate.passwordErrorContent,usernameErrorContent=_this$validate.usernameErrorContent,usernameError=_this$validate.usernameError,emailErrorContent=_this$validate.emailErrorContent,emailError=_this$validate.emailError,reconfirmPasswordErrorContent=_this$validate.reconfirmPasswordErrorContent,reconfirmPasswordError=_this$validate.reconfirmPasswordError,firstNameError=_this$validate.firstNameError,firstNameErrorContent=_this$validate.firstNameErrorContent,lastNameError=_this$validate.lastNameError,lastNameErrorContent=_this$validate.lastNameErrorContent;_this.setState({passwordError:passwordError,passwordErrorContent:passwordErrorContent,usernameErrorContent:usernameErrorContent,usernameError:usernameError,emailErrorContent:emailErrorContent,emailError:emailError,reconfirmPasswordErrorContent:reconfirmPasswordErrorContent,reconfirmPasswordError:reconfirmPasswordError,firstNameError:firstNameError,firstNameErrorContent:firstNameErrorContent,lastNameError:lastNameError,lastNameErrorContent:lastNameErrorContent});if(passwordError===true||usernameError===true||reconfirmPasswordError===true||emailError===true||firstNameError===true||lastNameError===true){return;}var params={path:'',param:{},data:{username:_this.state.username,password:_this.state.password,email:_this.state.email,firstName:_this.state.firstName,lastName:_this.state.lastName}};_this.props.signUp(params);};_this.state={username:'',firstName:'',lastName:'',password:'',email:'',reConfirmPassword:'',usernameError:false,passwordError:false,firstNameError:false,lastNameError:false,usernameErrorContent:'',lastNameErrorContent:'',firstNameErrorContent:'',passwordErrorContent:'',emailError:false,reconfirmPasswordError:false,emailErrorContent:'',reconfirmPasswordErrorContent:''};return _this;}_createClass(SignUp,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.props.isUsernameExisted!==nextProps.isUsernameExisted&&nextProps.isUsernameExisted===true){this.setState({usernameError:true,usernameErrorContent:'Tài khoản này đã tồn tại'});}if(this.props.isUsernameExisted!==nextProps.isUsernameExisted&&nextProps.isUsernameExisted===false){this.setState({usernameError:false,usernameErrorContent:'Tên đăng nhập có thể sử dụng được'});}if(this.props.isUsernameExisted!==nextProps.isUsernameExisted&&nextProps.isUsernameExisted===null){this.setState({usernameError:true,usernameErrorContent:'Mất kết nối'});}if(this.props.isEmailExisted!==nextProps.isEmailExisted&&nextProps.isEmailExisted===true){this.setState({emailError:true,emailErrorContent:'Email này đã được sử dụng'});}if(this.props.isEmailExisted!==nextProps.isEmailExisted&&nextProps.isEmailExisted===false){this.setState({emailError:false,emailErrorContent:'Email có thể sử dụng được'});}if(this.props.isEmailExisted!==nextProps.isEmailExisted&&nextProps.isEmailExisted===null){this.setState({emailError:true,emailErrorContent:'Mất kết nối'});}// if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === {}) {\n//   this.setState({\n//     usernameError: false,\n//     usernameErrorContent: '',\n//   });\n// }\nreturn true;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:CHECK_USERNAME_EXISTED,unblock:[CHECK_USERNAME_EXISTED_SUCCESS,CHECK_USERNAME_EXISTED_FAILED]},/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:CHECK_EMAIL_EXISTED,unblock:[CHECK_EMAIL_EXISTED_FAILED,CHECK_EMAIL_EXISTED_SUCCESS]},/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:SIGNUP,unblock:[SIGNUP_FAILED,SIGNUP_SUCCESS]},/*#__PURE__*/React.createElement(\"div\",{className:\"Container-login\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Container-login-middle\"},/*#__PURE__*/React.createElement(\"h2\",null,\"\\u0110\\u0103ng k\\xFD\"),/*#__PURE__*/React.createElement(\"p\",{className:\"Long-introduction\"},\"B\\u1EAFt \\u0111\\u1EA7u d\\u1EC5 d\\xE0ng b\\u1EB1ng c\\xE1ch \\u0111\\u0103ng k\\xFD \\u0111\\u1EC3 qu\\u1EA3n l\\xFD c\\xE1c gi\\u1EA3i \\u0111\\u1EA5u\"),/*#__PURE__*/React.createElement(TextInput,{onHandleSubmit:this.handleSignUp,label:'Tên đăng nhập',onChangeText:this.onChangeUserName,error:this.state.usernameError,errorContent:this.state.usernameErrorContent,onBlur:this.onBlurUserName}),/*#__PURE__*/React.createElement(TextInput,{onHandleSubmit:this.handleSignUp,label:'Họ',onChangeText:this.onChangeFirstName,error:this.state.firstNameError,errorContent:this.state.firstNameErrorContent}),/*#__PURE__*/React.createElement(TextInput,{onHandleSubmit:this.handleSignUp,label:'Tên',onChangeText:this.onChangeLastName,error:this.state.lastNameError,errorContent:this.state.lastNameErrorContent}),/*#__PURE__*/React.createElement(TextInput,{onHandleSubmit:this.handleSignUp,label:'Email',onChangeText:this.onChangeEmail,error:this.state.emailError,errorContent:this.state.emailErrorContent,onBlur:this.onBlurEmail}),/*#__PURE__*/React.createElement(TextInput,{onHandleSubmit:this.handleSignUp,label:'Mật khẩu',type:'password',onChangeText:this.onChangePassword,error:this.state.passwordError,errorContent:this.state.passwordErrorContent}),/*#__PURE__*/React.createElement(TextInput,{onHandleSubmit:this.handleSignUp,label:'Xác nhận mật khẩu',type:'password',onChangeText:this.onChangeReconfirmPassword,error:this.state.reconfirmPasswordError,errorContent:this.state.reconfirmPasswordErrorContent}),/*#__PURE__*/React.createElement(\"div\",{className:\"Button-login-container\",onClick:this.handleSignUp},/*#__PURE__*/React.createElement(\"div\",{className:\"Button-login\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"Button-login-text\"},\"\\u0110\\u0103ng k\\xFD\"))))))));}}]);return SignUp;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{isUsernameExisted:state.isUsernameExisted,isEmailExisted:state.isEmailExisted};};export default connect(mapStateToProps,{signUp:signUp,checkUsernameExisted:checkUsernameExisted,setUsernameExistedDefault:setUsernameExistedDefault,checkEmailExisted:checkEmailExisted,setEmailExistedDefault:setEmailExistedDefault})(SignUp);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/screens/SignUp/index.tsx"],"names":["React","connect","ReduxBlockUi","TextInput","config","checkUsernameExisted","setUsernameExistedDefault","checkEmailExisted","setEmailExistedDefault","CHECK_USERNAME_EXISTED_SUCCESS","CHECK_USERNAME_EXISTED_FAILED","CHECK_EMAIL_EXISTED_FAILED","CHECK_EMAIL_EXISTED_SUCCESS","CHECK_USERNAME_EXISTED","CHECK_EMAIL_EXISTED","SIGNUP","signUp","SIGNUP_FAILED","SIGNUP_SUCCESS","SignUp","props","onChangeUserName","value","setState","username","onChangeFirstName","firstName","onChangeLastName","lastName","validateUsername","usernameError","usernameErrorContent","state","trim","regex","test","params","path","param","data","onBlurUserName","validateEmail","emailError","emailErrorContent","email","onBlurEmail","onChangePassword","password","onChangeEmail","onChangeReconfirmPassword","reConfirmPassword","validate","passwordError","passwordErrorContent","firstNameError","firstNameErrorContent","lastNameError","lastNameErrorContent","reconfirmPasswordErrorContent","reconfirmPasswordError","includes","handleSignUp","nextProps","nextState","isUsernameExisted","isEmailExisted","Component","mapStateToProps"],"mappings":"gpBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,oBAAT,CAA+BC,yBAA/B,KAAgE,uDAAhE,CACA,OAASC,iBAAT,CAA4BC,sBAA5B,KAA0D,oDAA1D,CACA,OAASC,8BAAT,CAAyCC,6BAAzC,KAA8E,sDAA9E,CACA,OAASC,0BAAT,CAAqCC,2BAArC,KAAwE,mDAAxE,CACA,OAASC,sBAAT,CAAiCC,mBAAjC,CAAsDC,MAAtD,KAAoE,oBAApE,CAEA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,aAAT,CAAwBC,cAAxB,KAA8C,YAA9C,CACA,MAAO,cAAP,C,GAkCMC,CAAAA,M,4GACJ,gBAAYC,KAAZ,CAAiC,wCAC/B,uBAAMA,KAAN,EAD+B,MAsEzBC,gBAtEyB,CAsEN,SAACC,KAAD,CAAmB,CAC5C,MAAKC,QAAL,CAAc,CAAEC,QAAQ,CAAEF,KAAZ,CAAd,EACD,CAxEgC,OA0EzBG,iBA1EyB,CA0EL,SAACH,KAAD,CAAmB,CAC7C,MAAKC,QAAL,CAAc,CAAEG,SAAS,CAAEJ,KAAb,CAAd,EACD,CA5EgC,OA8EzBK,gBA9EyB,CA8EN,SAACL,KAAD,CAAmB,CAC5C,MAAKC,QAAL,CAAc,CAAEK,QAAQ,CAAEN,KAAZ,CAAd,EACD,CAhFgC,OAkFzBO,gBAlFyB,CAkFN,UAAM,CAC/B,GAAIC,CAAAA,aAAa,CAAG,KAApB,CACA,GAAIC,CAAAA,oBAAoB,CAAG,EAA3B,CACA,GAAI,MAAKC,KAAL,CAAWR,QAAX,CAAoBS,IAApB,KAA+B,EAA/B,EAAqC,CAAC7B,MAAM,CAAC8B,KAAP,CAAaV,QAAb,CAAsBW,IAAtB,CAA2B,MAAKH,KAAL,CAAWR,QAAtC,CAA1C,CAA2F,CACzFM,aAAa,CAAG,IAAhB,CACAC,oBAAoB,CAAG,gEAAvB,CACD,CAHD,IAGO,CACL,GAAMK,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,EADO,CAEbC,KAAK,CAAE,CACLd,QAAQ,CAAE,MAAKQ,KAAL,CAAWR,QADhB,CAFM,CAKbe,IAAI,CAAE,EALO,CAAf,CAOA,MAAKnB,KAAL,CAAWf,oBAAX,CAAgC+B,MAAhC,EACD,CAED,MAAO,CAAEN,aAAa,CAAbA,aAAF,CAAiBC,oBAAoB,CAApBA,oBAAjB,CAAP,CACD,CApGgC,OAsGzBS,cAtGyB,CAsGR,UAAM,2BACmB,MAAKX,gBAAL,EADnB,CACrBC,aADqB,uBACrBA,aADqB,CACNC,oBADM,uBACNA,oBADM,CAE7B,MAAKR,QAAL,CAAc,CACZO,aAAa,CAAbA,aADY,CAEZC,oBAAoB,CAApBA,oBAFY,CAAd,EAIA,MAAKX,KAAL,CAAWd,yBAAX,GACD,CA7GgC,OA+GzBmC,aA/GyB,CA+GT,UAAM,CAC5B,GAAIC,CAAAA,UAAU,CAAG,KAAjB,CACA,GAAIC,CAAAA,iBAAiB,CAAG,EAAxB,CACA,GAAI,MAAKX,KAAL,CAAWY,KAAX,CAAiBX,IAAjB,KAA4B,EAA5B,EAAkC,CAAC7B,MAAM,CAAC8B,KAAP,CAAaU,KAAb,CAAmBT,IAAnB,CAAwB,MAAKH,KAAL,CAAWY,KAAnC,CAAvC,CAAkF,CAChFF,UAAU,CAAG,IAAb,CACAC,iBAAiB,CAAG,oBAApB,CACD,CAHD,IAGO,CACL,GAAMP,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,EADO,CAEbC,KAAK,CAAE,CACLM,KAAK,CAAE,MAAKZ,KAAL,CAAWY,KADb,CAFM,CAKbL,IAAI,CAAE,EALO,CAAf,CAOA,MAAKnB,KAAL,CAAWb,iBAAX,CAA6B6B,MAA7B,EACD,CAED,MAAO,CAAEM,UAAU,CAAVA,UAAF,CAAcC,iBAAiB,CAAjBA,iBAAd,CAAP,CACD,CAjIgC,OAmIzBE,WAnIyB,CAmIX,UAAM,yBACgB,MAAKJ,aAAL,EADhB,CAClBC,UADkB,qBAClBA,UADkB,CACNC,iBADM,qBACNA,iBADM,CAE1B,MAAKpB,QAAL,CAAc,CACZmB,UAAU,CAAVA,UADY,CAEZC,iBAAiB,CAAjBA,iBAFY,CAAd,EAIA,MAAKvB,KAAL,CAAWZ,sBAAX,GACD,CA1IgC,OA4IzBsC,gBA5IyB,CA4IN,SAACxB,KAAD,CAAmB,CAC5C,MAAKC,QAAL,CAAc,CAAEwB,QAAQ,CAAEzB,KAAZ,CAAd,EACD,CA9IgC,OAgJzB0B,aAhJyB,CAgJT,SAAC1B,KAAD,CAAmB,CACzC,MAAKC,QAAL,CAAc,CAAEqB,KAAK,CAAEtB,KAAT,CAAd,EACD,CAlJgC,OAoJzB2B,yBApJyB,CAoJG,SAAC3B,KAAD,CAAmB,CACrD,MAAKC,QAAL,CAAc,CAAE2B,iBAAiB,CAAE5B,KAArB,CAAd,EACD,CAtJgC,OAwJzB6B,QAxJyB,CAwJd,UAAM,CACvB,GAAIC,CAAAA,aAAa,CAAG,KAApB,CACA,GAAIC,CAAAA,oBAAoB,CAAG,EAA3B,CACA,GAAIC,CAAAA,cAAc,CAAG,KAArB,CACA,GAAIC,CAAAA,qBAAqB,CAAG,EAA5B,CACA,GAAIC,CAAAA,aAAa,CAAG,KAApB,CACA,GAAIC,CAAAA,oBAAoB,CAAG,EAA3B,CACA,GAAI1B,CAAAA,oBAAoB,CAAG,EAA3B,CACA,GAAID,CAAAA,aAAa,CAAG,KAApB,CACA,GAAIa,CAAAA,iBAAiB,CAAG,EAAxB,CACA,GAAID,CAAAA,UAAU,CAAG,KAAjB,CACA,GAAIgB,CAAAA,6BAA6B,CAAG,EAApC,CACA,GAAIC,CAAAA,sBAAsB,CAAG,KAA7B,CACA,GAAI,MAAK3B,KAAL,CAAWe,QAAX,CAAoBa,QAApB,CAA6B,GAA7B,GAAqC,CAACxD,MAAM,CAAC8B,KAAP,CAAaa,QAAb,CAAsBZ,IAAtB,CAA2B,MAAKH,KAAL,CAAWe,QAAtC,CAAtC,EAAyF,MAAKf,KAAL,CAAWe,QAAX,CAAoBd,IAApB,KAA+B,EAA5H,CAAgI,CAC9HmB,aAAa,CAAG,IAAhB,CACAC,oBAAoB,CAAG,gFAAvB,CACD,CACD,GAAI,MAAKrB,KAAL,CAAWR,QAAX,CAAoBS,IAApB,KAA+B,EAA/B,EAAqC,CAAC7B,MAAM,CAAC8B,KAAP,CAAaV,QAAb,CAAsBW,IAAtB,CAA2B,MAAKH,KAAL,CAAWR,QAAtC,CAA1C,CAA2F,CACzFM,aAAa,CAAG,IAAhB,CACAC,oBAAoB,CAAG,gEAAvB,CACD,CACD,GAAI,MAAKC,KAAL,CAAWN,SAAX,CAAqBO,IAArB,KAAgC,EAApC,CAAwC,CACtCqB,cAAc,CAAG,IAAjB,CACAC,qBAAqB,CAAG,sBAAxB,CACD,CACD,GAAI,MAAKvB,KAAL,CAAWJ,QAAX,CAAoBK,IAApB,KAA+B,EAAnC,CAAuC,CACrCuB,aAAa,CAAG,IAAhB,CACAC,oBAAoB,CAAG,qBAAvB,CACD,CACD,GAAI,MAAKzB,KAAL,CAAWY,KAAX,CAAiBX,IAAjB,KAA4B,EAA5B,EAAkC,CAAC7B,MAAM,CAAC8B,KAAP,CAAaU,KAAb,CAAmBT,IAAnB,CAAwB,MAAKH,KAAL,CAAWY,KAAnC,CAAvC,CAAkF,CAChFF,UAAU,CAAG,IAAb,CACAC,iBAAiB,CAAG,oBAApB,CACD,CACD,GAAI,MAAKX,KAAL,CAAWkB,iBAAX,GAAiC,MAAKlB,KAAL,CAAWe,QAAhD,CAA0D,CACxDY,sBAAsB,CAAG,IAAzB,CACAD,6BAA6B,CAAG,uCAAhC,CACD,CAED,MAAO,CAAEN,aAAa,CAAbA,aAAF,CAAiBC,oBAAoB,CAApBA,oBAAjB,CAAuCtB,oBAAoB,CAApBA,oBAAvC,CAA6DD,aAAa,CAAbA,aAA7D,CAA4Ea,iBAAiB,CAAjBA,iBAA5E,CAA+FD,UAAU,CAAVA,UAA/F,CAA2GgB,6BAA6B,CAA7BA,6BAA3G,CAA0IC,sBAAsB,CAAtBA,sBAA1I,CAAkKL,cAAc,CAAdA,cAAlK,CAAkLC,qBAAqB,CAArBA,qBAAlL,CAAyMC,aAAa,CAAbA,aAAzM,CAAwNC,oBAAoB,CAApBA,oBAAxN,CAAP,CACD,CA/LgC,OAiMzBI,YAjMyB,CAiMV,UAAM,oBAC4N,MAAKV,QAAL,EAD5N,CACnBC,aADmB,gBACnBA,aADmB,CACJC,oBADI,gBACJA,oBADI,CACkBtB,oBADlB,gBACkBA,oBADlB,CACwCD,aADxC,gBACwCA,aADxC,CACuDa,iBADvD,gBACuDA,iBADvD,CAC0ED,UAD1E,gBAC0EA,UAD1E,CACsFgB,6BADtF,gBACsFA,6BADtF,CACqHC,sBADrH,gBACqHA,sBADrH,CAC6IL,cAD7I,gBAC6IA,cAD7I,CAC6JC,qBAD7J,gBAC6JA,qBAD7J,CACoLC,aADpL,gBACoLA,aADpL,CACmMC,oBADnM,gBACmMA,oBADnM,CAE3B,MAAKlC,QAAL,CAAc,CACZ6B,aAAa,CAAbA,aADY,CAEZC,oBAAoB,CAApBA,oBAFY,CAGZtB,oBAAoB,CAApBA,oBAHY,CAIZD,aAAa,CAAbA,aAJY,CAKZa,iBAAiB,CAAjBA,iBALY,CAMZD,UAAU,CAAVA,UANY,CAOZgB,6BAA6B,CAA7BA,6BAPY,CAQZC,sBAAsB,CAAtBA,sBARY,CASZL,cAAc,CAAdA,cATY,CAUZC,qBAAqB,CAArBA,qBAVY,CAWZC,aAAa,CAAbA,aAXY,CAYZC,oBAAoB,CAApBA,oBAZY,CAAd,EAcA,GAAIL,aAAa,GAAK,IAAlB,EAA0BtB,aAAa,GAAK,IAA5C,EAAoD6B,sBAAsB,GAAK,IAA/E,EAAuFjB,UAAU,GAAK,IAAtG,EAA8GY,cAAc,GAAK,IAAjI,EAAyIE,aAAa,GAAK,IAA/J,CAAqK,CACnK,OACD,CACD,GAAMpB,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,EADO,CAEbC,KAAK,CAAE,EAFM,CAGbC,IAAI,CAAE,CACJf,QAAQ,CAAE,MAAKQ,KAAL,CAAWR,QADjB,CAEJuB,QAAQ,CAAE,MAAKf,KAAL,CAAWe,QAFjB,CAGJH,KAAK,CAAE,MAAKZ,KAAL,CAAWY,KAHd,CAIJlB,SAAS,CAAE,MAAKM,KAAL,CAAWN,SAJlB,CAKJE,QAAQ,CAAE,MAAKI,KAAL,CAAWJ,QALjB,CAHO,CAAf,CAYA,MAAKR,KAAL,CAAWJ,MAAX,CAAkBoB,MAAlB,EACD,CAjOgC,CAE/B,MAAKJ,KAAL,CAAa,CACXR,QAAQ,CAAE,EADC,CAEXE,SAAS,CAAE,EAFA,CAGXE,QAAQ,CAAE,EAHC,CAIXmB,QAAQ,CAAE,EAJC,CAKXH,KAAK,CAAE,EALI,CAMXM,iBAAiB,CAAE,EANR,CAOXpB,aAAa,CAAE,KAPJ,CAQXsB,aAAa,CAAE,KARJ,CASXE,cAAc,CAAE,KATL,CAUXE,aAAa,CAAE,KAVJ,CAWXzB,oBAAoB,CAAE,EAXX,CAYX0B,oBAAoB,CAAE,EAZX,CAaXF,qBAAqB,CAAE,EAbZ,CAcXF,oBAAoB,CAAE,EAdX,CAeXX,UAAU,CAAE,KAfD,CAgBXiB,sBAAsB,CAAE,KAhBb,CAiBXhB,iBAAiB,CAAE,EAjBR,CAkBXe,6BAA6B,CAAE,EAlBpB,CAAb,CAF+B,aAsBhC,C,uFAEqBI,S,CAAyBC,S,CAAyB,CACtE,GAAI,KAAK3C,KAAL,CAAW4C,iBAAX,GAAiCF,SAAS,CAACE,iBAA3C,EAAgEF,SAAS,CAACE,iBAAV,GAAgC,IAApG,CAA0G,CACxG,KAAKzC,QAAL,CAAc,CACZO,aAAa,CAAE,IADH,CAEZC,oBAAoB,CAAE,0BAFV,CAAd,EAID,CACD,GAAI,KAAKX,KAAL,CAAW4C,iBAAX,GAAiCF,SAAS,CAACE,iBAA3C,EAAgEF,SAAS,CAACE,iBAAV,GAAgC,KAApG,CAA2G,CACzG,KAAKzC,QAAL,CAAc,CACZO,aAAa,CAAE,KADH,CAEZC,oBAAoB,CAAE,mCAFV,CAAd,EAID,CACD,GAAI,KAAKX,KAAL,CAAW4C,iBAAX,GAAiCF,SAAS,CAACE,iBAA3C,EAAgEF,SAAS,CAACE,iBAAV,GAAgC,IAApG,CAA0G,CACxG,KAAKzC,QAAL,CAAc,CACZO,aAAa,CAAE,IADH,CAEZC,oBAAoB,CAAE,aAFV,CAAd,EAID,CACD,GAAI,KAAKX,KAAL,CAAW6C,cAAX,GAA8BH,SAAS,CAACG,cAAxC,EAA0DH,SAAS,CAACG,cAAV,GAA6B,IAA3F,CAAiG,CAC/F,KAAK1C,QAAL,CAAc,CACZmB,UAAU,CAAE,IADA,CAEZC,iBAAiB,CAAE,2BAFP,CAAd,EAID,CACD,GAAI,KAAKvB,KAAL,CAAW6C,cAAX,GAA8BH,SAAS,CAACG,cAAxC,EAA0DH,SAAS,CAACG,cAAV,GAA6B,KAA3F,CAAkG,CAChG,KAAK1C,QAAL,CAAc,CACZmB,UAAU,CAAE,KADA,CAEZC,iBAAiB,CAAE,2BAFP,CAAd,EAID,CACD,GAAI,KAAKvB,KAAL,CAAW6C,cAAX,GAA8BH,SAAS,CAACG,cAAxC,EAA0DH,SAAS,CAACG,cAAV,GAA6B,IAA3F,CAAiG,CAC/F,KAAK1C,QAAL,CAAc,CACZmB,UAAU,CAAE,IADA,CAEZC,iBAAiB,CAAE,aAFP,CAAd,EAID,CACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,KAAP,CACD,C,uCA+JQ,CACP,mBACE,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAE9B,sBAFT,CAGE,OAAO,CAAE,CAACJ,8BAAD,CAAiCC,6BAAjC,CAHX,eAKE,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAEI,mBAFT,CAGE,OAAO,CAAE,CAACH,0BAAD,CAA6BC,2BAA7B,CAHX,eAKA,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAEG,MAFT,CAGE,OAAO,CAAE,CAACE,aAAD,CAAgBC,cAAhB,CAHX,eAKE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,wBAAf,eACE,qDADF,cAEE,yBAAG,SAAS,CAAC,mBAAb,8IAFF,cAIE,oBAAC,SAAD,EAAW,cAAc,CAAE,KAAK2C,YAAhC,CAA8C,KAAK,CAAE,eAArD,CAAsE,YAAY,CAAE,KAAKxC,gBAAzF,CAA2G,KAAK,CAAE,KAAKW,KAAL,CAAWF,aAA7H,CAA4I,YAAY,CAAE,KAAKE,KAAL,CAAWD,oBAArK,CAA2L,MAAM,CAAE,KAAKS,cAAxM,EAJF,cAKE,oBAAC,SAAD,EAAW,cAAc,CAAE,KAAKqB,YAAhC,CAA8C,KAAK,CAAE,IAArD,CAA2D,YAAY,CAAE,KAAKpC,iBAA9E,CAAiG,KAAK,CAAE,KAAKO,KAAL,CAAWsB,cAAnH,CAAmI,YAAY,CAAE,KAAKtB,KAAL,CAAWuB,qBAA5J,EALF,cAME,oBAAC,SAAD,EAAW,cAAc,CAAE,KAAKM,YAAhC,CAA8C,KAAK,CAAE,KAArD,CAA4D,YAAY,CAAE,KAAKlC,gBAA/E,CAAiG,KAAK,CAAE,KAAKK,KAAL,CAAWwB,aAAnH,CAAkI,YAAY,CAAE,KAAKxB,KAAL,CAAWyB,oBAA3J,EANF,cAOE,oBAAC,SAAD,EAAW,cAAc,CAAE,KAAKI,YAAhC,CAA8C,KAAK,CAAE,OAArD,CAA8D,YAAY,CAAE,KAAKb,aAAjF,CAAgG,KAAK,CAAE,KAAKhB,KAAL,CAAWU,UAAlH,CAA8H,YAAY,CAAE,KAAKV,KAAL,CAAWW,iBAAvJ,CAA0K,MAAM,CAAE,KAAKE,WAAvL,EAPF,cAQE,oBAAC,SAAD,EAAW,cAAc,CAAE,KAAKgB,YAAhC,CAA8C,KAAK,CAAE,UAArD,CAAiE,IAAI,CAAE,UAAvE,CAAmF,YAAY,CAAE,KAAKf,gBAAtG,CAAwH,KAAK,CAAE,KAAKd,KAAL,CAAWoB,aAA1I,CAAyJ,YAAY,CAAE,KAAKpB,KAAL,CAAWqB,oBAAlL,EARF,cASE,oBAAC,SAAD,EAAW,cAAc,CAAE,KAAKQ,YAAhC,CAA8C,KAAK,CAAE,mBAArD,CAA0E,IAAI,CAAE,UAAhF,CAA4F,YAAY,CAAE,KAAKZ,yBAA/G,CAA0I,KAAK,CAAE,KAAKjB,KAAL,CAAW2B,sBAA5J,CAAoL,YAAY,CAAE,KAAK3B,KAAL,CAAW0B,6BAA7M,EATF,cAWE,2BAAK,SAAS,CAAC,wBAAf,CAAwC,OAAO,CAAE,KAAKG,YAAtD,eACE,2BAAK,SAAS,CAAC,cAAf,eACE,0BAAI,SAAS,CAAC,mBAAd,yBADF,CADF,CAXF,CADF,CALF,CALA,CALF,CADF,CAwCD,C,oBA7QkB7D,KAAK,CAACkE,S,EAgR3B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACnC,KAAD,CAAmB,CACzC,MAAO,CACLgC,iBAAiB,CAAEhC,KAAK,CAACgC,iBADpB,CAELC,cAAc,CAAEjC,KAAK,CAACiC,cAFjB,CAAP,CAID,CALD,CAOA,cAAehE,CAAAA,OAAO,CACpBkE,eADoB,CAEpB,CAAEnD,MAAM,CAANA,MAAF,CAAUX,oBAAoB,CAApBA,oBAAV,CAAgCC,yBAAyB,CAAzBA,yBAAhC,CAA2DC,iBAAiB,CAAjBA,iBAA3D,CAA8EC,sBAAsB,CAAtBA,sBAA9E,CAFoB,CAAP,CAGbW,MAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReduxBlockUi from 'react-block-ui/redux';\r\nimport TextInput from 'components/TextInput';\r\nimport { IBigRequest } from 'interfaces/common';\r\nimport config from 'config';\r\nimport { checkUsernameExisted, setUsernameExistedDefault } from 'redux-saga/global-actions/CheckUsernameExisted-action';\r\nimport { checkEmailExisted, setEmailExistedDefault } from 'redux-saga/global-actions/CheckEmailExisted-action';\r\nimport { CHECK_USERNAME_EXISTED_SUCCESS, CHECK_USERNAME_EXISTED_FAILED } from 'redux-saga/global-reducers/IsUsernameExisted-reducer';\r\nimport { CHECK_EMAIL_EXISTED_FAILED, CHECK_EMAIL_EXISTED_SUCCESS } from 'redux-saga/global-reducers/IsEmailExisted-reducer';\r\nimport { CHECK_USERNAME_EXISTED, CHECK_EMAIL_EXISTED, SIGNUP } from 'redux-saga/actions';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { signUp } from './actions';\r\nimport { SIGNUP_FAILED, SIGNUP_SUCCESS } from './reducers';\r\nimport './styles.css';\r\n\r\ninterface ISignUpProps extends React.ClassAttributes<SignUp> {\r\n  isUsernameExisted: boolean | null | {};\r\n  isEmailExisted: boolean | null | {};\r\n\r\n  signUp(param: IBigRequest): void;\r\n  checkUsernameExisted(param: IBigRequest): void;\r\n  checkEmailExisted(param: IBigRequest): void;\r\n  setUsernameExistedDefault(): void;\r\n  setEmailExistedDefault(): void;\r\n}\r\n\r\ninterface ISignUpState {\r\n  username: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: string;\r\n  email: string;\r\n  reConfirmPassword: string;\r\n  usernameError: boolean;\r\n  firstNameError: boolean;\r\n  passwordError: boolean;\r\n  lastNameError: boolean;\r\n  usernameErrorContent: string;\r\n  firstNameErrorContent: string;\r\n  passwordErrorContent: string;\r\n  lastNameErrorContent: string;\r\n  emailError: boolean;\r\n  reconfirmPasswordError: boolean;\r\n  emailErrorContent: string;\r\n  reconfirmPasswordErrorContent: string;\r\n}\r\n\r\nclass SignUp extends React.Component<ISignUpProps, ISignUpState> {\r\n  constructor(props: ISignUpProps) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      password: '',\r\n      email: '',\r\n      reConfirmPassword: '',\r\n      usernameError: false,\r\n      passwordError: false,\r\n      firstNameError: false,\r\n      lastNameError: false,\r\n      usernameErrorContent: '',\r\n      lastNameErrorContent: '',\r\n      firstNameErrorContent: '',\r\n      passwordErrorContent: '',\r\n      emailError: false,\r\n      reconfirmPasswordError: false,\r\n      emailErrorContent: '',\r\n      reconfirmPasswordErrorContent: '',\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ISignUpProps, nextState: ISignUpState) {\r\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === true) {\r\n      this.setState({\r\n        usernameError: true,\r\n        usernameErrorContent: 'Tài khoản này đã tồn tại',\r\n      });\r\n    }\r\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === false) {\r\n      this.setState({\r\n        usernameError: false,\r\n        usernameErrorContent: 'Tên đăng nhập có thể sử dụng được',\r\n      });\r\n    }\r\n    if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === null) {\r\n      this.setState({\r\n        usernameError: true,\r\n        usernameErrorContent: 'Mất kết nối',\r\n      });\r\n    }\r\n    if (this.props.isEmailExisted !== nextProps.isEmailExisted && nextProps.isEmailExisted === true) {\r\n      this.setState({\r\n        emailError: true,\r\n        emailErrorContent: 'Email này đã được sử dụng',\r\n      });\r\n    }\r\n    if (this.props.isEmailExisted !== nextProps.isEmailExisted && nextProps.isEmailExisted === false) {\r\n      this.setState({\r\n        emailError: false,\r\n        emailErrorContent: 'Email có thể sử dụng được',\r\n      });\r\n    }\r\n    if (this.props.isEmailExisted !== nextProps.isEmailExisted && nextProps.isEmailExisted === null) {\r\n      this.setState({\r\n        emailError: true,\r\n        emailErrorContent: 'Mất kết nối',\r\n      });\r\n    }\r\n    // if (this.props.isUsernameExisted !== nextProps.isUsernameExisted && nextProps.isUsernameExisted === {}) {\r\n    //   this.setState({\r\n    //     usernameError: false,\r\n    //     usernameErrorContent: '',\r\n    //   });\r\n    // }\r\n    return true;\r\n  }\r\n\r\n  private onChangeUserName = (value: string) => {\r\n    this.setState({ username: value, });\r\n  }\r\n\r\n  private onChangeFirstName = (value: string) => {\r\n    this.setState({ firstName: value, });\r\n  }\r\n\r\n  private onChangeLastName = (value: string) => {\r\n    this.setState({ lastName: value, });\r\n  }\r\n\r\n  private validateUsername = () => {\r\n    let usernameError = false;\r\n    let usernameErrorContent = '';\r\n    if (this.state.username.trim() === '' || !config.regex.username.test(this.state.username)) {\r\n      usernameError = true;\r\n      usernameErrorContent = 'Tên đăng nhập không được trống, và phải chứa từ 8 đến 32 kí tự';\r\n    } else {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          username: this.state.username,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.checkUsernameExisted(params);\r\n    }\r\n\r\n    return { usernameError, usernameErrorContent };\r\n  }\r\n\r\n  private onBlurUserName = () => {\r\n    const { usernameError, usernameErrorContent } = this.validateUsername();\r\n    this.setState({\r\n      usernameError,\r\n      usernameErrorContent,\r\n    });\r\n    this.props.setUsernameExistedDefault();\r\n  }\r\n\r\n  private validateEmail = () => {\r\n    let emailError = false;\r\n    let emailErrorContent = '';\r\n    if (this.state.email.trim() === '' || !config.regex.email.test(this.state.email)) {\r\n      emailError = true;\r\n      emailErrorContent = 'Email không hợp lệ';\r\n    } else {\r\n      const params = {\r\n        path: '',\r\n        param: {\r\n          email: this.state.email,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.checkEmailExisted(params);\r\n    }\r\n\r\n    return { emailError, emailErrorContent };\r\n  }\r\n\r\n  private onBlurEmail = () => {\r\n    const { emailError, emailErrorContent } = this.validateEmail();\r\n    this.setState({\r\n      emailError,\r\n      emailErrorContent,\r\n    });\r\n    this.props.setEmailExistedDefault();\r\n  }\r\n\r\n  private onChangePassword = (value: string) => {\r\n    this.setState({ password: value, });\r\n  }\r\n\r\n  private onChangeEmail = (value: string) => {\r\n    this.setState({ email: value, });\r\n  }\r\n\r\n  private onChangeReconfirmPassword = (value: string) => {\r\n    this.setState({ reConfirmPassword: value, });\r\n  }\r\n\r\n  private validate = () => {\r\n    let passwordError = false;\r\n    let passwordErrorContent = '';\r\n    let firstNameError = false;\r\n    let firstNameErrorContent = '';\r\n    let lastNameError = false;\r\n    let lastNameErrorContent = '';\r\n    let usernameErrorContent = '';\r\n    let usernameError = false;\r\n    let emailErrorContent = '';\r\n    let emailError = false;\r\n    let reconfirmPasswordErrorContent = '';\r\n    let reconfirmPasswordError = false;\r\n    if (this.state.password.includes(' ') || !config.regex.password.test(this.state.password) || this.state.password.trim() === '') {\r\n      passwordError = true;\r\n      passwordErrorContent = 'Mật khẩu không được trống, không chứa dấu cách, và phải chứa từ 8 đến 32 kí tự';\r\n    }\r\n    if (this.state.username.trim() === '' || !config.regex.username.test(this.state.username)) {\r\n      usernameError = true;\r\n      usernameErrorContent = 'Tên đăng nhập không được trống, và phải chứa từ 8 đến 32 kí tự';\r\n    }\r\n    if (this.state.firstName.trim() === '') {\r\n      firstNameError = true;\r\n      firstNameErrorContent = 'Tên không được trống';\r\n    }\r\n    if (this.state.lastName.trim() === '') {\r\n      lastNameError = true;\r\n      lastNameErrorContent = 'Họ không được trống';\r\n    }\r\n    if (this.state.email.trim() === '' || !config.regex.email.test(this.state.email)) {\r\n      emailError = true;\r\n      emailErrorContent = 'Email không hợp lệ';\r\n    }\r\n    if (this.state.reConfirmPassword !== this.state.password) {\r\n      reconfirmPasswordError = true;\r\n      reconfirmPasswordErrorContent = 'Nhập lại mật khẩu phải giống mật khẩu';\r\n    }\r\n\r\n    return { passwordError, passwordErrorContent, usernameErrorContent, usernameError, emailErrorContent, emailError, reconfirmPasswordErrorContent, reconfirmPasswordError, firstNameError, firstNameErrorContent, lastNameError, lastNameErrorContent };\r\n  }\r\n\r\n  private handleSignUp = () => {\r\n    const { passwordError, passwordErrorContent, usernameErrorContent, usernameError, emailErrorContent, emailError, reconfirmPasswordErrorContent, reconfirmPasswordError, firstNameError, firstNameErrorContent, lastNameError, lastNameErrorContent } = this.validate();\r\n    this.setState({\r\n      passwordError,\r\n      passwordErrorContent,\r\n      usernameErrorContent,\r\n      usernameError,\r\n      emailErrorContent,\r\n      emailError,\r\n      reconfirmPasswordErrorContent,\r\n      reconfirmPasswordError,\r\n      firstNameError,\r\n      firstNameErrorContent,\r\n      lastNameError,\r\n      lastNameErrorContent\r\n    });\r\n    if (passwordError === true || usernameError === true || reconfirmPasswordError === true || emailError === true || firstNameError === true || lastNameError === true) {\r\n      return;\r\n    }\r\n    const params = {\r\n      path: '',\r\n      param: {},\r\n      data: {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n        email: this.state.email,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n      },\r\n    };\r\n\r\n    this.props.signUp(params);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ReduxBlockUi\r\n        tag=\"div\"\r\n        block={CHECK_USERNAME_EXISTED}\r\n        unblock={[CHECK_USERNAME_EXISTED_SUCCESS, CHECK_USERNAME_EXISTED_FAILED]}\r\n      >\r\n        <ReduxBlockUi\r\n          tag=\"div\"\r\n          block={CHECK_EMAIL_EXISTED}\r\n          unblock={[CHECK_EMAIL_EXISTED_FAILED, CHECK_EMAIL_EXISTED_SUCCESS]}\r\n        >\r\n        <ReduxBlockUi\r\n          tag=\"div\"\r\n          block={SIGNUP}\r\n          unblock={[SIGNUP_FAILED, SIGNUP_SUCCESS]}\r\n        >\r\n          <div className=\"Container-login\">\r\n            <div className=\"Container-login-middle\">\r\n              <h2>Đăng ký</h2>\r\n              <p className=\"Long-introduction\">Bắt đầu dễ dàng bằng cách đăng ký để quản lý các giải đấu</p>\r\n\r\n              <TextInput onHandleSubmit={this.handleSignUp} label={'Tên đăng nhập'} onChangeText={this.onChangeUserName} error={this.state.usernameError} errorContent={this.state.usernameErrorContent} onBlur={this.onBlurUserName} />\r\n              <TextInput onHandleSubmit={this.handleSignUp} label={'Họ'} onChangeText={this.onChangeFirstName} error={this.state.firstNameError} errorContent={this.state.firstNameErrorContent} />\r\n              <TextInput onHandleSubmit={this.handleSignUp} label={'Tên'} onChangeText={this.onChangeLastName} error={this.state.lastNameError} errorContent={this.state.lastNameErrorContent} />\r\n              <TextInput onHandleSubmit={this.handleSignUp} label={'Email'} onChangeText={this.onChangeEmail} error={this.state.emailError} errorContent={this.state.emailErrorContent} onBlur={this.onBlurEmail} />\r\n              <TextInput onHandleSubmit={this.handleSignUp} label={'Mật khẩu'} type={'password'} onChangeText={this.onChangePassword} error={this.state.passwordError} errorContent={this.state.passwordErrorContent} />\r\n              <TextInput onHandleSubmit={this.handleSignUp} label={'Xác nhận mật khẩu'} type={'password'} onChangeText={this.onChangeReconfirmPassword} error={this.state.reconfirmPasswordError} errorContent={this.state.reconfirmPasswordErrorContent} />\r\n\r\n              <div className=\"Button-login-container\" onClick={this.handleSignUp}>\r\n                <div className=\"Button-login\">\r\n                  <h4 className=\"Button-login-text\">Đăng ký</h4>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </ReduxBlockUi>\r\n        </ReduxBlockUi>\r\n      </ReduxBlockUi>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    isUsernameExisted: state.isUsernameExisted,\r\n    isEmailExisted: state.isEmailExisted,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signUp, checkUsernameExisted, setUsernameExistedDefault, checkEmailExisted, setEmailExistedDefault }\r\n)(SignUp);"]},"metadata":{},"sourceType":"module"}