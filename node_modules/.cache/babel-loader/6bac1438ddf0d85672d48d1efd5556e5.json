{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(_callee);import{all}from'redux-saga/effects';import{login}from'./sagas/Login';import{signUp}from'./sagas/SignUp';import{showNotification}from'./sagas/Common';import{queryBracketBoardInfo}from'./sagas/BracketBoard';import{queryUserInfo}from'./sagas/QueryUserInfo';import{logOut}from'./sagas/LogOut';import{queryTournamentInfo}from'./sagas/QueryTournamentInfo';import{isUsernameExisted}from'./sagas/IsUsernameExisted';import{queryListTournamentsOfUser}from'./sagas/QueryListTournamentsOfUser';import{queryListTeams}from'./sagas/QueryListTeams';import{createNewTournament}from'./sagas/CreateNewTournament';import{editUserInfo}from'./sagas/EditUserInfo';import{editTournamentInfo}from'./sagas/EditTournamentInfo';import{queryListCompetitionOfTournament}from'./sagas/QueryListCompetitionOfTournament';import{addACompetition}from'./sagas/AddACompetition';import{isEmailExisted}from'./sagas/IsEmailExisted';import{queryListTournaments}from'./sagas/QueryListTournament';import{queryListPlayerOfTeam}from'./sagas/QueryListPlayerOfTeam';import{activeAccount}from'./sagas/ActiveAccount';import{searchTournament}from'./sagas/SearchTournaments';import{updateBackground}from'./sagas/UpdateBackground';import{queryListUsers}from'./sagas/QueryListUsers';import{searchUsers}from'./sagas/SearchUsers';import{updateAvatar}from'./sagas/UpdateAvatar';import{querySportsByTournament}from'./sagas/QuerySportsByTournament';import{queryCompetitionsBySportAndTournament}from'./sagas/QueryCompetitionsBySportAndTournament';import{addATeamToCompetition}from'./sagas/AddATeamToCompetition';import{updateAvatarTournament}from'./sagas/UpdateAvatarTournament';import{updateBackgroundTournament}from'./sagas/UpdateBackgroundTournament';import{addListTeamSelecting}from'./sagas/AddListTeamSelecting';import{swapTwoTeamInBracket}from'./sagas/SwapTwoTeamInBracket';import{deleteListSelectingTeam}from'./sagas/DeleteListSelectingTeam';import{queryCompetitionInfo}from'./sagas/QueryCompetitionInfo';import{queryAllSports}from'./sagas/QueryAllSports';import{querySportInfo}from'./sagas/QuerySportInfo';import{editTeam}from'./sagas/EditTeam';import{queryFinalStageSetting}from'./sagas/QueryFinalStageSetting';import{queryGroupStageSetting}from'./sagas/QueryGroupStageSetting';import{queryAllFormat}from'./sagas/QueryAllFormat';import{editCompetition}from'./sagas/EditCompetition';import{editFinalStageSetting}from'./sagas/EditFinalStageSetting';import{editGroupStageSetting}from'./sagas/EditGroupStageSetting';import{createAFinalStageSetting}from'./sagas/CreateAFinalStageSetting';import{createAGroupStageSetting}from'./sagas/CreateAGroupStageSetting';import{updateSchedule}from'./sagas/UpdateSchedule';import{queryBracketRankInfo}from'./sagas/BracketRank';import{deleteCompetition}from'./sagas/DeleteCompetition';import{startTournament}from'./sagas/StartTournament';import{getMatchResult}from'./sagas/GetMatchResult';export default function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return all([login(),signUp(),showNotification(),queryBracketBoardInfo(),queryUserInfo(),logOut(),queryTournamentInfo(),isUsernameExisted(),isEmailExisted(),queryListTournamentsOfUser(),queryListTournaments(),queryListTeams(),createNewTournament(),editUserInfo(),editTournamentInfo(),queryListCompetitionOfTournament(),addACompetition(),queryListPlayerOfTeam(),activeAccount(),searchTournament(),updateBackground(),updateAvatar(),queryListUsers(),searchUsers(),querySportsByTournament(),queryCompetitionsBySportAndTournament(),addATeamToCompetition(),updateAvatarTournament(),updateBackgroundTournament(),addListTeamSelecting(),swapTwoTeamInBracket(),deleteListSelectingTeam(),queryCompetitionInfo(),queryAllSports(),querySportInfo(),editTeam(),queryFinalStageSetting(),queryGroupStageSetting(),queryAllFormat(),editCompetition(),editFinalStageSetting(),editGroupStageSetting(),createAFinalStageSetting(),createAGroupStageSetting(),updateSchedule(),queryBracketRankInfo(),deleteCompetition(),startTournament(),getMatchResult()]);case 2:case\"end\":return _context.stop();}}},_marked);}","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/redux-saga/sagas.ts"],"names":["all","login","signUp","showNotification","queryBracketBoardInfo","queryUserInfo","logOut","queryTournamentInfo","isUsernameExisted","queryListTournamentsOfUser","queryListTeams","createNewTournament","editUserInfo","editTournamentInfo","queryListCompetitionOfTournament","addACompetition","isEmailExisted","queryListTournaments","queryListPlayerOfTeam","activeAccount","searchTournament","updateBackground","queryListUsers","searchUsers","updateAvatar","querySportsByTournament","queryCompetitionsBySportAndTournament","addATeamToCompetition","updateAvatarTournament","updateBackgroundTournament","addListTeamSelecting","swapTwoTeamInBracket","deleteListSelectingTeam","queryCompetitionInfo","queryAllSports","querySportInfo","editTeam","queryFinalStageSetting","queryGroupStageSetting","queryAllFormat","editCompetition","editFinalStageSetting","editGroupStageSetting","createAFinalStageSetting","createAGroupStageSetting","updateSchedule","queryBracketRankInfo","deleteCompetition","startTournament","getMatchResult"],"mappings":"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","sourcesContent":["import { all } from 'redux-saga/effects';\r\nimport { login } from './sagas/Login';\r\nimport { signUp } from './sagas/SignUp';\r\nimport { showNotification } from './sagas/Common';\r\nimport { queryBracketBoardInfo } from './sagas/BracketBoard';\r\nimport { queryUserInfo } from './sagas/QueryUserInfo';\r\nimport { logOut } from './sagas/LogOut';\r\nimport { queryTournamentInfo } from './sagas/QueryTournamentInfo';\r\nimport { isUsernameExisted } from './sagas/IsUsernameExisted';\r\nimport { queryListTournamentsOfUser } from './sagas/QueryListTournamentsOfUser';\r\nimport { queryListTeams } from './sagas/QueryListTeams';\r\nimport { createNewTournament } from './sagas/CreateNewTournament';\r\nimport { editUserInfo } from './sagas/EditUserInfo';\r\nimport { editTournamentInfo } from './sagas/EditTournamentInfo';\r\nimport { queryListCompetitionOfTournament } from './sagas/QueryListCompetitionOfTournament';\r\nimport { addACompetition } from './sagas/AddACompetition';\r\nimport { isEmailExisted } from './sagas/IsEmailExisted';\r\nimport { queryListTournaments } from './sagas/QueryListTournament';\r\nimport { queryListPlayerOfTeam } from './sagas/QueryListPlayerOfTeam';\r\nimport { activeAccount } from './sagas/ActiveAccount';\r\nimport { searchTournament } from './sagas/SearchTournaments';\r\nimport { updateBackground } from './sagas/UpdateBackground';\r\nimport { queryListUsers } from './sagas/QueryListUsers';\r\nimport { searchUsers } from './sagas/SearchUsers';\r\nimport { updateAvatar } from './sagas/UpdateAvatar';\r\nimport { querySportsByTournament } from './sagas/QuerySportsByTournament';\r\nimport { queryCompetitionsBySportAndTournament } from './sagas/QueryCompetitionsBySportAndTournament';\r\nimport { addATeamToCompetition } from './sagas/AddATeamToCompetition';\r\nimport { updateAvatarTournament } from './sagas/UpdateAvatarTournament';\r\nimport { updateBackgroundTournament } from './sagas/UpdateBackgroundTournament';\r\nimport { addListTeamSelecting } from './sagas/AddListTeamSelecting';\r\nimport { swapTwoTeamInBracket } from './sagas/SwapTwoTeamInBracket';\r\nimport { deleteListSelectingTeam } from './sagas/DeleteListSelectingTeam';\r\nimport { queryCompetitionInfo } from './sagas/QueryCompetitionInfo';\r\nimport { queryAllSports } from './sagas/QueryAllSports';\r\nimport { querySportInfo } from './sagas/QuerySportInfo';\r\nimport { editTeam } from './sagas/EditTeam';\r\nimport { queryFinalStageSetting } from './sagas/QueryFinalStageSetting';\r\nimport { queryGroupStageSetting } from './sagas/QueryGroupStageSetting';\r\nimport { queryAllFormat } from './sagas/QueryAllFormat';\r\nimport { editCompetition } from './sagas/EditCompetition';\r\nimport { editFinalStageSetting } from './sagas/EditFinalStageSetting';\r\nimport { editGroupStageSetting } from './sagas/EditGroupStageSetting';\r\nimport { createAFinalStageSetting } from './sagas/CreateAFinalStageSetting';\r\nimport { createAGroupStageSetting } from './sagas/CreateAGroupStageSetting';\r\nimport { updateSchedule } from './sagas/UpdateSchedule';\r\nimport { queryBracketRankInfo } from './sagas/BracketRank';\r\nimport { deleteCompetition } from './sagas/DeleteCompetition';\r\nimport { startTournament } from './sagas/StartTournament';\r\nimport { getMatchResult } from './sagas/GetMatchResult';\r\n\r\nexport default function* () {\r\n  yield all([\r\n    login(),\r\n    signUp(),\r\n    showNotification(),\r\n    queryBracketBoardInfo(),\r\n    queryUserInfo(),\r\n    logOut(),\r\n    queryTournamentInfo(),\r\n    isUsernameExisted(),\r\n    isEmailExisted(),\r\n    queryListTournamentsOfUser(),\r\n    queryListTournaments(),\r\n    queryListTeams(),\r\n    createNewTournament(),\r\n    editUserInfo(),\r\n    editTournamentInfo(),\r\n    queryListCompetitionOfTournament(),\r\n    addACompetition(),\r\n    queryListPlayerOfTeam(),\r\n    activeAccount(),\r\n    searchTournament(),\r\n    updateBackground(),\r\n    updateAvatar(),\r\n    queryListUsers(),\r\n    searchUsers(),\r\n    querySportsByTournament(),\r\n    queryCompetitionsBySportAndTournament(),\r\n    addATeamToCompetition(),\r\n    updateAvatarTournament(),\r\n    updateBackgroundTournament(),\r\n    addListTeamSelecting(),\r\n    swapTwoTeamInBracket(),\r\n    deleteListSelectingTeam(),\r\n    queryCompetitionInfo(),\r\n    queryAllSports(),\r\n    querySportInfo(),\r\n    editTeam(),\r\n    queryFinalStageSetting(),\r\n    queryGroupStageSetting(),\r\n    queryAllFormat(),\r\n    editCompetition(),\r\n    editFinalStageSetting(),\r\n    editGroupStageSetting(),\r\n    createAFinalStageSetting(),\r\n    createAGroupStageSetting(),\r\n    updateSchedule(),\r\n    queryBracketRankInfo(),\r\n    deleteCompetition(),\r\n    startTournament(),\r\n    getMatchResult(),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}