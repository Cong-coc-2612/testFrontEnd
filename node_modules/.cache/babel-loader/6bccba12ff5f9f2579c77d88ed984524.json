{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{isAfter,isBefore}from'date-fns';import'react-block-ui/style.css';import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import TextInput from'components/TextInput';import{COOKIES_TYPE}from'global';import{cookies}from'utils/cookies';import{createNewTournament}from'./actions';import'./styles.css';var CreateNewTournament=/*#__PURE__*/function(_React$Component){_inherits(CreateNewTournament,_React$Component);var _super=_createSuper(CreateNewTournament);function CreateNewTournament(props){var _this;_classCallCheck(this,CreateNewTournament);_this=_super.call(this,props);_this.onChangeTournamentname=function(value){_this.setState({tournamentName:value});};_this.onChangeTournamentShortName=function(value){_this.setState({tournamentShortName:value});};_this.onChangeTournamentDescription=function(value){_this.setState({tournamentDescription:value});};_this.onChangeTournamentDonor=function(value){_this.setState({donor:value});};_this.onChangeTournamentStartLocation=function(value){_this.setState({tournamentStartLocation:value});};_this.onChangeTournamentEndLocation=function(value){_this.setState({tournamentEndLocation:value});};_this.handleChangeStartDate=function(value){if(isAfter(value,_this.state.endDate)){_this.setState({startDate:value,endDate:value});}else{_this.setState({startDate:value});}};_this.handleChangeEndDate=function(value){if(isBefore(value,_this.state.startDate)){_this.setState({startDate:value,endDate:value});}else{_this.setState({endDate:value});}};_this.validate=function(){var tournamentNameError=false;var tournamentNameErrorContent='';var tournamentShortNameErrorContent='';var tournamentShortNameError=false;if(_this.state.tournamentName.trim()===''){tournamentNameError=true;tournamentNameErrorContent='Tên giải không được trống';}if(_this.state.tournamentShortName.trim()===''){tournamentShortNameError=true;tournamentShortNameErrorContent='Tên ngắn của giải không được trống';}return{tournamentNameError:tournamentNameError,tournamentNameErrorContent:tournamentNameErrorContent,tournamentShortNameErrorContent:tournamentShortNameErrorContent,tournamentShortNameError:tournamentShortNameError};};_this.handleCreateNewTournament=function(){var _this$validate=_this.validate(),tournamentNameError=_this$validate.tournamentNameError,tournamentNameErrorContent=_this$validate.tournamentNameErrorContent,tournamentShortNameErrorContent=_this$validate.tournamentShortNameErrorContent,tournamentShortNameError=_this$validate.tournamentShortNameError;_this.setState({tournamentNameError:tournamentNameError,tournamentNameErrorContent:tournamentNameErrorContent,tournamentShortNameErrorContent:tournamentShortNameErrorContent,tournamentShortNameError:tournamentShortNameError});if(tournamentNameError===true||tournamentShortNameError===true){return;}var params={path:'',param:{},data:{fullName:_this.state.tournamentName,shortName:_this.state.tournamentShortName,description:_this.state.tournamentDescription,creatorId:cookies.get(COOKIES_TYPE.AUTH_TOKEN).User.id,openingLocation:_this.state.tournamentStartLocation,openingTime:_this.state.startDate,closingLocation:_this.state.tournamentEndLocation,closingTime:_this.state.endDate,donor:_this.state.donor}};_this.props.createNewTournament(params);};_this.state={tournamentName:'',tournamentNameError:false,tournamentNameErrorContent:'',tournamentShortName:'',tournamentShortNameError:false,tournamentShortNameErrorContent:'',tournamentDescription:'',tournamentDescriptionError:false,tournamentDescriptionErrorContent:'',tournamentStartLocation:'',tournamentStartLocationError:false,tournamentStartLocationErrorContent:'',tournamentEndLocation:'',tournamentEndLocationError:false,tournamentEndLocationErrorContent:'',donor:'',donorError:false,donorErrorContent:'',startDate:new Date(),endDate:new Date()};return _this;}_createClass(CreateNewTournament,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"CreateNewTournament-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CreateNewTournament-tournament-container\"},/*#__PURE__*/React.createElement(\"p\",{className:\"CreateNewTournament-header-text\"},\"T\\u1EA1o m\\u1EDBi gi\\u1EA3i \\u0111\\u1EA5u\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"T\\xEAn gi\\u1EA3i:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(TextInput,{label:\"Nh\\u1EADp t\\xEAn c\\u1EE7a gi\\u1EA3i\",error:this.state.tournamentNameError,errorContent:this.state.tournamentNameErrorContent,onChangeText:this.onChangeTournamentname}))),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"T\\xEAn ng\\u1EAFn:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(TextInput,{label:\"Nh\\u1EADp t\\xEAn ng\\u1EAFn c\\u1EE7a gi\\u1EA3i\",error:this.state.tournamentShortNameError,errorContent:this.state.tournamentShortNameErrorContent,onChangeText:this.onChangeTournamentShortName}))),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"M\\xF4 t\\u1EA3:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(TextInput,{label:\"Nh\\u1EADp m\\xF4 t\\u1EA3\",error:this.state.tournamentDescriptionError,errorContent:this.state.tournamentDescriptionErrorContent,onChangeText:this.onChangeTournamentDescription}))),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"\\u0110\\u1ECBa \\u0111i\\u1EC3m khai m\\u1EA1c:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(TextInput,{label:\"\",error:this.state.tournamentStartLocationError,errorContent:this.state.tournamentStartLocationErrorContent,onChangeText:this.onChangeTournamentStartLocation}))),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"Th\\u1EDDi gian khai m\\u1EA1c:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.startDate,dateFormat:\"dd/MM/yyyy\",onChange:this.handleChangeStartDate}))),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"\\u0110\\u1ECBa \\u0111i\\u1EC3m b\\u1EBF m\\u1EA1c:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(TextInput,{label:\"\",error:this.state.tournamentEndLocationError,errorContent:this.state.tournamentEndLocationErrorContent,onChangeText:this.onChangeTournamentEndLocation}))),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"Th\\u1EDDi gian b\\u1EBF m\\u1EA1c:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(DatePicker,{selected:this.state.endDate,onChange:this.handleChangeEndDate,dateFormat:\"dd/MM/yyyy\"}))),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-listManager-container'},/*#__PURE__*/React.createElement(\"p\",null,\"Nh\\xE0 t\\xE0i tr\\u1EE3:\"),/*#__PURE__*/React.createElement(\"div\",{className:'CreateNewTournament-tounamentName-container-container'},/*#__PURE__*/React.createElement(TextInput,{label:\"\",error:this.state.donorError,errorContent:this.state.donorErrorContent,onChangeText:this.onChangeTournamentDonor}))),/*#__PURE__*/React.createElement(\"div\",{className:\"CreateNewTournament-button-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CreateNewTournament-button\",onClick:this.handleCreateNewTournament},/*#__PURE__*/React.createElement(\"h4\",{className:\"CreateNewTournament-button-text\"},\"T\\u1EA1o m\\u1EDBi\")))));}}]);return CreateNewTournament;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{};};export default connect(mapStateToProps,{createNewTournament:createNewTournament})(CreateNewTournament);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/screens/CreateNewTournament/index.tsx"],"names":["React","connect","isAfter","isBefore","DatePicker","TextInput","COOKIES_TYPE","cookies","createNewTournament","CreateNewTournament","props","onChangeTournamentname","value","setState","tournamentName","onChangeTournamentShortName","tournamentShortName","onChangeTournamentDescription","tournamentDescription","onChangeTournamentDonor","donor","onChangeTournamentStartLocation","tournamentStartLocation","onChangeTournamentEndLocation","tournamentEndLocation","handleChangeStartDate","state","endDate","startDate","handleChangeEndDate","validate","tournamentNameError","tournamentNameErrorContent","tournamentShortNameErrorContent","tournamentShortNameError","trim","handleCreateNewTournament","params","path","param","data","fullName","shortName","description","creatorId","get","AUTH_TOKEN","User","id","openingLocation","openingTime","closingLocation","closingTime","tournamentDescriptionError","tournamentDescriptionErrorContent","tournamentStartLocationError","tournamentStartLocationErrorContent","tournamentEndLocationError","tournamentEndLocationErrorContent","donorError","donorErrorContent","Date","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isAfter, isBefore } from 'date-fns';\r\nimport 'react-block-ui/style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport TextInput from 'components/TextInput';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { IBigRequest } from 'interfaces/common';\r\nimport { COOKIES_TYPE } from 'global';\r\nimport { cookies } from 'utils/cookies';\r\nimport { createNewTournament } from './actions';\r\nimport './styles.css';\r\n\r\ninterface ICreateNewTournamentProps extends React.ClassAttributes<CreateNewTournament> {\r\n  createNewTournament(param: IBigRequest): void;\r\n}\r\n\r\ninterface ICreateNewTournamentState {\r\n  tournamentName: string;\r\n  tournamentNameError: boolean;\r\n  tournamentNameErrorContent: string;\r\n  tournamentShortName: string;\r\n  tournamentShortNameError: boolean;\r\n  tournamentShortNameErrorContent: string;\r\n  tournamentDescription: string;\r\n  tournamentDescriptionError: boolean;\r\n  tournamentDescriptionErrorContent: string;\r\n  tournamentStartLocation: string;\r\n  tournamentStartLocationError: boolean;\r\n  tournamentStartLocationErrorContent: string;\r\n  tournamentEndLocation: string;\r\n  tournamentEndLocationError: boolean;\r\n  tournamentEndLocationErrorContent: string;\r\n  donor: string;\r\n  donorError: boolean;\r\n  donorErrorContent: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n}\r\n\r\nclass CreateNewTournament extends React.Component<ICreateNewTournamentProps, ICreateNewTournamentState> {\r\n  constructor(props: ICreateNewTournamentProps) {\r\n    super(props);\r\n    this.state = {\r\n      tournamentName: '',\r\n      tournamentNameError: false,\r\n      tournamentNameErrorContent: '',\r\n      tournamentShortName: '',\r\n      tournamentShortNameError: false,\r\n      tournamentShortNameErrorContent: '',\r\n      tournamentDescription: '',\r\n      tournamentDescriptionError: false,\r\n      tournamentDescriptionErrorContent: '',\r\n      tournamentStartLocation: '',\r\n      tournamentStartLocationError: false,\r\n      tournamentStartLocationErrorContent: '',\r\n      tournamentEndLocation: '',\r\n      tournamentEndLocationError: false,\r\n      tournamentEndLocationErrorContent: '',\r\n      donor: '',\r\n      donorError: false,\r\n      donorErrorContent: '',\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n    };\r\n  }\r\n\r\n  private onChangeTournamentname = (value: string) => {\r\n    this.setState({ tournamentName: value, });\r\n  }\r\n\r\n  private onChangeTournamentShortName = (value: string) => {\r\n    this.setState({ tournamentShortName: value, });\r\n  }\r\n\r\n  private onChangeTournamentDescription = (value: string) => {\r\n    this.setState({ tournamentDescription: value, });\r\n  }\r\n\r\n  private onChangeTournamentDonor = (value: string) => {\r\n    this.setState({ donor: value, });\r\n  }\r\n\r\n  private onChangeTournamentStartLocation = (value: string) => {\r\n    this.setState({ tournamentStartLocation: value, });\r\n  }\r\n\r\n  private onChangeTournamentEndLocation = (value: string) => {\r\n    this.setState({ tournamentEndLocation: value, });\r\n  }\r\n\r\n  private handleChangeStartDate = (value: Date) => {\r\n    if (isAfter(value, this.state.endDate)) {\r\n      this.setState({\r\n        startDate: value,\r\n        endDate: value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        startDate: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleChangeEndDate = (value: Date) => {\r\n    if (isBefore(value, this.state.startDate)) {\r\n      this.setState({\r\n        startDate: value,\r\n        endDate: value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        endDate: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  private validate = () => {\r\n    let tournamentNameError = false;\r\n    let tournamentNameErrorContent = '';\r\n    let tournamentShortNameErrorContent = '';\r\n    let tournamentShortNameError = false;\r\n    if (this.state.tournamentName.trim() === '') {\r\n      tournamentNameError = true;\r\n      tournamentNameErrorContent = 'Tên giải không được trống';\r\n    }\r\n    if (this.state.tournamentShortName.trim() === '') {\r\n      tournamentShortNameError = true;\r\n      tournamentShortNameErrorContent = 'Tên ngắn của giải không được trống';\r\n    }\r\n\r\n    return { tournamentNameError, tournamentNameErrorContent, tournamentShortNameErrorContent, tournamentShortNameError };\r\n  }\r\n\r\n  private handleCreateNewTournament = () => {\r\n    const { tournamentNameError, tournamentNameErrorContent, tournamentShortNameErrorContent, tournamentShortNameError } = this.validate();\r\n    this.setState({\r\n      tournamentNameError,\r\n      tournamentNameErrorContent,\r\n      tournamentShortNameErrorContent,\r\n      tournamentShortNameError\r\n    });\r\n    if (tournamentNameError === true || tournamentShortNameError === true) {\r\n      return;\r\n    }\r\n    const params = {\r\n      path: '',\r\n      param: {},\r\n      data: {\r\n        fullName: this.state.tournamentName,\r\n        shortName: this.state.tournamentShortName,\r\n        description: this.state.tournamentDescription,\r\n        creatorId: cookies.get(COOKIES_TYPE.AUTH_TOKEN).User.id,\r\n        openingLocation: this.state.tournamentStartLocation,\r\n        openingTime: this.state.startDate,\r\n        closingLocation: this.state.tournamentEndLocation,\r\n        closingTime: this.state.endDate,\r\n        donor: this.state.donor,\r\n      },\r\n    };\r\n\r\n    this.props.createNewTournament(params);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreateNewTournament-container\">\r\n        <div className=\"CreateNewTournament-tournament-container\">\r\n          <p className=\"CreateNewTournament-header-text\">Tạo mới giải đấu</p>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Tên giải:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <TextInput label='Nhập tên của giải' error={this.state.tournamentNameError} errorContent={this.state.tournamentNameErrorContent} onChangeText={this.onChangeTournamentname} />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Tên ngắn:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <TextInput label='Nhập tên ngắn của giải' error={this.state.tournamentShortNameError} errorContent={this.state.tournamentShortNameErrorContent} onChangeText={this.onChangeTournamentShortName} />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Mô tả:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <TextInput label='Nhập mô tả' error={this.state.tournamentDescriptionError} errorContent={this.state.tournamentDescriptionErrorContent} onChangeText={this.onChangeTournamentDescription} />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Địa điểm khai mạc:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <TextInput label='' error={this.state.tournamentStartLocationError} errorContent={this.state.tournamentStartLocationErrorContent} onChangeText={this.onChangeTournamentStartLocation} />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Thời gian khai mạc:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <DatePicker\r\n                selected={this.state.startDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n                onChange={this.handleChangeStartDate}\r\n              />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Địa điểm bế mạc:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <TextInput label='' error={this.state.tournamentEndLocationError} errorContent={this.state.tournamentEndLocationErrorContent} onChangeText={this.onChangeTournamentEndLocation} />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Thời gian bế mạc:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <DatePicker\r\n                selected={this.state.endDate}\r\n                onChange={this.handleChangeEndDate}\r\n                dateFormat=\"dd/MM/yyyy\"\r\n              />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className={'CreateNewTournament-listManager-container'}>\r\n            <p>Nhà tài trợ:</p>\r\n            <div className={'CreateNewTournament-tounamentName-container-container'}>\r\n              <TextInput label='' error={this.state.donorError} errorContent={this.state.donorErrorContent} onChangeText={this.onChangeTournamentDonor} />\r\n              {/*defaultValue */}\r\n            </div>\r\n          </div>\r\n          <div className=\"CreateNewTournament-button-container\">\r\n            <div className=\"CreateNewTournament-button\" onClick={this.handleCreateNewTournament}>\r\n              <h4 className=\"CreateNewTournament-button-text\">Tạo mới</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewTournament }\r\n)(CreateNewTournament);"]},"metadata":{},"sourceType":"module"}