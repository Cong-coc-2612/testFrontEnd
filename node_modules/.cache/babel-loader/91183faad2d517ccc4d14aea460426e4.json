{"ast":null,"code":"import _objectSpread from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import Skeleton from'react-loading-skeleton';import UserInfoTeamsItem from'components/UserInfoTeamsItem';import TextInput from'components/TextInput';import{queryListTeams,addATeamToCompetition}from'./actions';import'./styles.css';var UserInfoTeams=/*#__PURE__*/function(_React$Component){_inherits(UserInfoTeams,_React$Component);var _super=_createSuper(UserInfoTeams);function UserInfoTeams(props){var _this;_classCallCheck(this,UserInfoTeams);_this=_super.call(this,props);_this.requestData=function(){var params={path:'',param:_objectSpread({},_this.props.type==='user'?{userId:_this.props.id}:{competitionId:_this.props.id},{limit:999}),data:{}};_this.props.queryListTeams(params);};_this.validate=function(){var teamNameToAddError=false;var teamNameToAddErrorContent='';var teamShortNameToAddError=false;var teamShortNameToAddErrorContent='';if(_this.state.teamNameToAdd.trim()===''){teamNameToAddError=true;teamNameToAddErrorContent='Tên đội không được trống';}if(_this.state.teamShortNameToAdd.trim()===''){teamNameToAddError=true;teamNameToAddErrorContent='Tên ngắn đội không được trống';}var listTemp=[];if(_this.props.listTeam.map(function(item,index){if(item.fullName===_this.state.teamNameToAdd){listTemp.push(item);}})){if(listTemp.length>0){teamNameToAddError=true;teamNameToAddErrorContent='Tên đội đã tồn tại trong cuộc thi';}}listTemp=[];if(_this.props.listTeam.map(function(item,index){if(item.shortName===_this.state.teamShortNameToAdd){listTemp.push(item);}})){if(listTemp.length>0){teamShortNameToAddError=true;teamShortNameToAddErrorContent='Tên ngắn đội đã tồn tại trong cuộc thi';}}return{teamNameToAddError:teamNameToAddError,teamNameToAddErrorContent:teamNameToAddErrorContent,teamShortNameToAddError:teamShortNameToAddError,teamShortNameToAddErrorContent:teamShortNameToAddErrorContent};};_this.handleAddATeam=function(){var _this$validate=_this.validate(),teamNameToAddError=_this$validate.teamNameToAddError,teamNameToAddErrorContent=_this$validate.teamNameToAddErrorContent,teamShortNameToAddError=_this$validate.teamShortNameToAddError,teamShortNameToAddErrorContent=_this$validate.teamShortNameToAddErrorContent;_this.setState({teamNameToAddError:teamNameToAddError,teamNameToAddErrorContent:teamNameToAddErrorContent,teamShortNameToAddError:teamShortNameToAddError,teamShortNameToAddErrorContent:teamShortNameToAddErrorContent});if(teamNameToAddError===true||teamShortNameToAddError===true){return;}var params={path:'',param:{},data:{fullName:_this.state.teamNameToAdd,shortName:_this.state.teamShortNameToAdd,description:'',creatorId:_this.props.currentUserInfo!=null&&_this.props.currentUserInfo.id,competitionId:_this.props.id}};_this.props.addATeamToCompetition(params);_this.setState({teamNameToAdd:'',teamShortNameToAdd:''});};_this.onChangeTeamNameToAdd=function(value){_this.setState({teamNameToAdd:value});};_this.onChangeTeamShortNameToAdd=function(value){_this.setState({teamShortNameToAdd:value});};_this.state={teamNameToAdd:'',teamNameToAddError:false,teamNameToAddErrorContent:'',teamShortNameToAdd:'',teamShortNameToAddError:false,teamShortNameToAddErrorContent:''};return _this;}_createClass(UserInfoTeams,[{key:\"componentDidMount\",value:function componentDidMount(){this.requestData();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeams-container\"},this.props.listTeam!=null?this.props.listTeam.length>0?this.props.listTeam.map(function(item,index){return/*#__PURE__*/React.createElement(UserInfoTeamsItem,{listTeam:_this2.props.listTeam,competitionInfo:_this2.props.competitionInfo,tournamentInfo:_this2.props.tournamentInfo,info:item,index:index,key:index});}):/*#__PURE__*/React.createElement(\"p\",null,\"Kh\\xF4ng t\\xECm th\\u1EA5y \\u0111\\u1ED9i n\\xE0o!\"):/*#__PURE__*/React.createElement(Skeleton,null),this.props.listTeam!=null&&/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsAddItem-container2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsAddItem-container-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsAddItem-container-container-container\"},/*#__PURE__*/React.createElement(TextInput,{style:{width:200},label:'Nhập tên đội',value:this.state.teamNameToAdd,error:this.state.teamNameToAddError,errorContent:this.state.teamNameToAddErrorContent,onChangeText:this.onChangeTeamNameToAdd}),/*#__PURE__*/React.createElement(TextInput,{style:{width:200},label:'Nhập tên ngắn đội',value:this.state.teamShortNameToAdd,error:this.state.teamShortNameToAddError,errorContent:this.state.teamShortNameToAddErrorContent,onChangeText:this.onChangeTeamShortNameToAdd}),/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsAddItem-login-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"UserInfoTeamsAddItem-login\",onClick:this.handleAddATeam},/*#__PURE__*/React.createElement(\"h4\",{className:\"UserInfoTeamsAddItem-login-text\"},\"Th\\xEAm \\u0111\\u1ED9i\")))))));}}]);return UserInfoTeams;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{listTeam:state.listTeam,currentUserInfo:state.currentUserInfo};};export default connect(mapStateToProps,{queryListTeams:queryListTeams,addATeamToCompetition:addATeamToCompetition})(UserInfoTeams);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/components/Teams/index.tsx"],"names":["React","connect","Skeleton","UserInfoTeamsItem","TextInput","queryListTeams","addATeamToCompetition","UserInfoTeams","props","requestData","params","path","param","type","userId","id","competitionId","limit","data","validate","teamNameToAddError","teamNameToAddErrorContent","teamShortNameToAddError","teamShortNameToAddErrorContent","state","teamNameToAdd","trim","teamShortNameToAdd","listTemp","listTeam","map","item","index","fullName","push","length","shortName","handleAddATeam","setState","description","creatorId","currentUserInfo","onChangeTeamNameToAdd","value","onChangeTeamShortNameToAdd","competitionInfo","tournamentInfo","width","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport UserInfoTeamsItem from 'components/UserInfoTeamsItem';\r\nimport TextInput from 'components/TextInput';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { queryListTeams, addATeamToCompetition } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IUserInfoTeamsProps extends React.ClassAttributes<UserInfoTeams> {\r\n  id: number;\r\n  type: 'user' | 'competition';\r\n  listTeam: IParams[] | null;\r\n  tournamentInfo: IParams | null;\r\n  competitionInfo: IParams | null;\r\n  currentUserInfo: IParams | null;\r\n\r\n  queryListTeams(param: IBigRequest): void;\r\n  addATeamToCompetition(param: IBigRequest): void;\r\n}\r\n\r\ninterface IUserInfoTeamsState {\r\n  teamNameToAdd: string;\r\n  teamNameToAddError: boolean;\r\n  teamNameToAddErrorContent: string;\r\n  teamShortNameToAdd: string;\r\n  teamShortNameToAddError: boolean;\r\n  teamShortNameToAddErrorContent: string;\r\n}\r\n\r\nclass UserInfoTeams extends React.Component<IUserInfoTeamsProps, IUserInfoTeamsState> {\r\n  constructor(props: IUserInfoTeamsProps) {\r\n    super(props);\r\n    this.state = {\r\n      teamNameToAdd: '',\r\n      teamNameToAddError: false,\r\n      teamNameToAddErrorContent: '',\r\n      teamShortNameToAdd: '',\r\n      teamShortNameToAddError: false,\r\n      teamShortNameToAddErrorContent: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        ...this.props.type === 'user' ? { userId: this.props.id } : { competitionId: this.props.id },\r\n        limit: 999,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryListTeams(params);\r\n  }\r\n\r\n  private validate = () => {\r\n    let teamNameToAddError = false;\r\n    let teamNameToAddErrorContent = '';\r\n    let teamShortNameToAddError = false;\r\n    let teamShortNameToAddErrorContent = '';\r\n    if (this.state.teamNameToAdd.trim() === '') {\r\n      teamNameToAddError = true;\r\n      teamNameToAddErrorContent = 'Tên đội không được trống';\r\n    }\r\n    if (this.state.teamShortNameToAdd.trim() === '') {\r\n      teamNameToAddError = true;\r\n      teamNameToAddErrorContent = 'Tên ngắn đội không được trống';\r\n    }\r\n    let listTemp = [];\r\n    if (this.props.listTeam!.map((item, index) => { if (item.fullName === this.state.teamNameToAdd) { listTemp.push(item); } })) {\r\n      if (listTemp.length > 0) {\r\n        teamNameToAddError = true;\r\n        teamNameToAddErrorContent = 'Tên đội đã tồn tại trong cuộc thi';\r\n      }\r\n    }\r\n    listTemp = [];\r\n    if (this.props.listTeam!.map((item, index) => { if (item.shortName === this.state.teamShortNameToAdd) { listTemp.push(item); } })) {\r\n      if (listTemp.length > 0) {\r\n        teamShortNameToAddError = true;\r\n        teamShortNameToAddErrorContent = 'Tên ngắn đội đã tồn tại trong cuộc thi';\r\n      }\r\n    }\r\n\r\n    return { teamNameToAddError, teamNameToAddErrorContent, teamShortNameToAddError, teamShortNameToAddErrorContent };\r\n  }\r\n\r\n  private handleAddATeam = () => {\r\n    const { teamNameToAddError, teamNameToAddErrorContent, teamShortNameToAddError, teamShortNameToAddErrorContent } = this.validate();\r\n    this.setState({\r\n      teamNameToAddError,\r\n      teamNameToAddErrorContent,\r\n      teamShortNameToAddError,\r\n      teamShortNameToAddErrorContent\r\n    });\r\n    if (teamNameToAddError === true || teamShortNameToAddError === true) {\r\n      return;\r\n    }\r\n    const params = {\r\n      path: '',\r\n      param: {},\r\n      data: {\r\n        fullName: this.state.teamNameToAdd,\r\n        shortName: this.state.teamShortNameToAdd,\r\n        description: '',\r\n        creatorId: this.props.currentUserInfo != null && this.props.currentUserInfo.id,\r\n        competitionId: this.props.id,\r\n      },\r\n    };\r\n    this.props.addATeamToCompetition(params);\r\n    this.setState({ teamNameToAdd: '', teamShortNameToAdd: '', });\r\n  }\r\n\r\n  private onChangeTeamNameToAdd = (value: string) => {\r\n    this.setState({ teamNameToAdd: value, });\r\n  }\r\n\r\n  private onChangeTeamShortNameToAdd = (value: string) => {\r\n    this.setState({ teamShortNameToAdd: value, });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"UserInfoTeams-container\">\r\n        {this.props.listTeam != null ? (this.props.listTeam.length > 0 ?\r\n          this.props.listTeam.map(\r\n            (item, index) => <UserInfoTeamsItem listTeam={this.props.listTeam as IParams[]} competitionInfo={this.props.competitionInfo} tournamentInfo={this.props.tournamentInfo} info={item} index={index} key={index} />\r\n          ) : <p>Không tìm thấy đội nào!</p>) :\r\n          <Skeleton />\r\n        }\r\n        {this.props.listTeam != null && <div className=\"UserInfoTeamsAddItem-container2\">\r\n          <div className=\"UserInfoTeamsAddItem-container-container\">\r\n            <div className=\"UserInfoTeamsAddItem-container-container-container\">\r\n              <TextInput style={{ width: 200 }} label={'Nhập tên đội'} value={this.state.teamNameToAdd} error={this.state.teamNameToAddError} errorContent={this.state.teamNameToAddErrorContent} onChangeText={this.onChangeTeamNameToAdd} />\r\n              <TextInput style={{ width: 200 }} label={'Nhập tên ngắn đội'} value={this.state.teamShortNameToAdd} error={this.state.teamShortNameToAddError} errorContent={this.state.teamShortNameToAddErrorContent} onChangeText={this.onChangeTeamShortNameToAdd} />\r\n              <div className=\"UserInfoTeamsAddItem-login-container\">\r\n                <div className=\"UserInfoTeamsAddItem-login\" onClick={this.handleAddATeam}>\r\n                  <h4 className=\"UserInfoTeamsAddItem-login-text\">Thêm đội</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTeam: state.listTeam,\r\n    currentUserInfo: state.currentUserInfo,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { queryListTeams, addATeamToCompetition }\r\n)(UserInfoTeams);"]},"metadata":{},"sourceType":"module"}