{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(doDeleteCompetition),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watchDeleteCompetition);import{call,takeLatest,put}from'redux-saga/effects';import{query,METHOD}from'utils/socketApi';import{QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID_SUCCESS}from'components/CompetitionsSetting/reducers';import{DELETE_COMPETITION,QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID}from'redux-saga/actions';var deleteCompetition=function deleteCompetition(data,path,param){var uri='competition';var datas=_objectSpread({},data);var paths=path;var params=_objectSpread({},param);return query(uri,METHOD.DELETE,datas,params,paths);};function doDeleteCompetition(request){var response;return _regeneratorRuntime.wrap(function doDeleteCompetition$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(deleteCompetition,request.data.data,request.data.path,request.data.param);case 3:response=_context.sent;if(!(response.data.error.MessageCode===0)){_context.next=11;break;}_context.next=7;return put({type:request.response.success});case 7:_context.next=9;return put({type:QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID,response:{success:QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID_SUCCESS,failed:QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID_SUCCESS},data:{path:'',param:{tournamentId:request.data.data.tournamentId,limit:99},data:{}}});case 9:_context.next=12;break;case 11:throw new Error(response.data.error.Message);case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);_context.next=18;return put({type:request.response.failed});case 18:case\"end\":return _context.stop();}}},_marked,null,[[0,14]]);}export default function watchDeleteCompetition(){return _regeneratorRuntime.wrap(function watchDeleteCompetition$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(DELETE_COMPETITION,doDeleteCompetition);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/redux-saga/sagas/DeleteCompetition/deleteCompetition.ts"],"names":["doDeleteCompetition","watchDeleteCompetition","call","takeLatest","put","query","METHOD","QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID_SUCCESS","DELETE_COMPETITION","QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID","deleteCompetition","data","path","param","uri","datas","paths","params","DELETE","request","response","error","MessageCode","type","success","failed","tournamentId","limit","Error","Message"],"mappings":"wXAcUA,mB,iDAgCeC,sB,EA9CzB,OAASC,IAAT,CAAeC,UAAf,CAA2BC,GAA3B,KAAsC,oBAAtC,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,iBAA9B,CAEA,OAASC,8CAAT,KAA+D,yCAA/D,CACA,OAASC,kBAAT,CAA6BC,sCAA7B,KAA2E,oBAA3E,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,CAAgBC,IAAhB,CAAuCC,KAAvC,CAA0D,CAClF,GAAMC,CAAAA,GAAG,CAAG,aAAZ,CACA,GAAMC,CAAAA,KAAK,kBAAQJ,IAAR,CAAX,CACA,GAAMK,CAAAA,KAAK,CAAGJ,IAAd,CACA,GAAMK,CAAAA,MAAM,kBAAQJ,KAAR,CAAZ,CACA,MAAOR,CAAAA,KAAK,CAACS,GAAD,CAAMR,MAAM,CAACY,MAAb,CAAqBH,KAArB,CAA4BE,MAA5B,CAAoCD,KAApC,CAAZ,CACD,CAND,CAQA,QAAUhB,CAAAA,mBAAV,CAA8BmB,OAA9B,2KAEqB,MAAMjB,CAAAA,IAAI,CAACQ,iBAAD,CAAoBS,OAAO,CAACR,IAAR,CAAaA,IAAjC,CAAuCQ,OAAO,CAACR,IAAR,CAAaC,IAApD,CAA0DO,OAAO,CAACR,IAAR,CAAaE,KAAvE,CAAV,CAFrB,OAEUO,QAFV,oBAGQA,QAAQ,CAACT,IAAT,CAAcU,KAAd,CAAoBC,WAApB,GAAoC,CAH5C,2CAIM,MAAMlB,CAAAA,GAAG,CAAC,CACRmB,IAAI,CAAEJ,OAAO,CAACC,QAAR,CAAiBI,OADf,CAAD,CAAT,CAJN,uBAOM,MAAMpB,CAAAA,GAAG,CAAC,CACRmB,IAAI,CAAEd,sCADE,CAERW,QAAQ,CAAE,CACRI,OAAO,CAAEjB,8CADD,CAERkB,MAAM,CAAElB,8CAFA,CAFF,CAMRI,IAAI,CAAE,CACJC,IAAI,CAAE,EADF,CAEJC,KAAK,CAAE,CACLa,YAAY,CAAEP,OAAO,CAACR,IAAR,CAAaA,IAAb,CAAkBe,YAD3B,CAELC,KAAK,CAAE,EAFF,CAFH,CAMJhB,IAAI,CAAE,EANF,CANE,CAAD,CAAT,CAPN,2CAuBY,IAAIiB,CAAAA,KAAJ,CAAUR,QAAQ,CAACT,IAAT,CAAcU,KAAd,CAAoBQ,OAA9B,CAvBZ,2GA0BI,MAAMzB,CAAAA,GAAG,CAAC,CACRmB,IAAI,CAAEJ,OAAO,CAACC,QAAR,CAAiBK,MADf,CAAD,CAAT,CA1BJ,qEAgCA,cAAe,SAAUxB,CAAAA,sBAAV,sJACb,MAAME,CAAAA,UAAU,CAACK,kBAAD,CAAqBR,mBAArB,CAAhB,CADa","sourcesContent":["import { call, takeLatest, put } from 'redux-saga/effects';\r\nimport { query, METHOD } from 'utils/socketApi';\r\nimport { IRequest, IParams, IBigRequest } from 'interfaces/common';\r\nimport { QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID_SUCCESS } from 'components/CompetitionsSetting/reducers';\r\nimport { DELETE_COMPETITION, QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID } from 'redux-saga/actions';\r\n\r\nconst deleteCompetition = (data: IParams, path: string | number, param: IParams) => {\r\n  const uri = 'competition';\r\n  const datas = { ...data };\r\n  const paths = path;\r\n  const params = { ...param };\r\n  return query(uri, METHOD.DELETE, datas, params, paths);\r\n};\r\n\r\nfunction* doDeleteCompetition(request: IRequest<IBigRequest>) {\r\n  try {\r\n    const response = yield call(deleteCompetition, request.data.data, request.data.path, request.data.param);\r\n    if (response.data.error.MessageCode === 0) {\r\n      yield put({\r\n        type: request.response.success,\r\n      });\r\n      yield put({\r\n        type: QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID,\r\n        response: {\r\n          success: QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID_SUCCESS,\r\n          failed: QUERY_ALL_COMPETITION_BY_TOURNAMENT_ID_SUCCESS,\r\n        },\r\n        data: {\r\n          path: '',\r\n          param: {\r\n            tournamentId: request.data.data.tournamentId,\r\n            limit: 99,\r\n          },\r\n          data: {},\r\n        },\r\n      });\r\n    } else {\r\n      throw new Error(response.data.error.Message);\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: request.response.failed,\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* watchDeleteCompetition() {\r\n  yield takeLatest(DELETE_COMPETITION, doDeleteCompetition);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}