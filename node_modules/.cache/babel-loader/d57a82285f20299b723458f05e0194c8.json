{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import Skeleton from'react-loading-skeleton';import Select from'react-select';import{editGroupStageSetting,editFinalStageSetting,editCompetition,queryAllFormats,queryCompetition,queryAllSports,querySportInfo,queryFinalStageSetting,queryGroupStageSetting,updateSchedule}from'./actions';import'./styles.css';import CustomModal from'components/CustomModal';import TextInput from'components/TextInput';import CustomTab from'components/CustomTab';import Player from'components/Player';import{IoMdAddCircleOutline}from'react-icons/io';import{queryAllCompetitionsByTournamentId}from'components/CompetitionsSetting/actions';import BracketBoard from'components/BracketBoard';import Teams from'components/Teams';import BracketSchedule from'components/BracketSchedule';import BracketRank from'components/BracketRank';import{queryTournamentInfo}from'screens/TournamentInfo/actions';import config from'config';import{formatTournamentStatus}from'utils/common';import{cookies}from'utils/cookies';import{COOKIES_TYPE}from'global';var customStyles={content:{top:'5%',left:'15%',right:'15%',bottom:'5%',backgroundColor:'#2b303d',display:'flex',flexDirection:'column'},overlay:{zIndex:100001}};var genderOptions=[{value:true,label:'Nam'},{value:false,label:'Nữ'}];var sportOptions=[];var competitionFormatOptions=[];var CompetitionInfo=/*#__PURE__*/function(_React$Component){_inherits(CompetitionInfo,_React$Component);var _super=_createSuper(CompetitionInfo);function CompetitionInfo(props){var _this;_classCallCheck(this,CompetitionInfo);_this=_super.call(this,props);_this.tabList=[];_this.componentList=[];_this.requestData=function(){var params={path:'',param:{id:_this.props.routerInfo.match.params.competitionId},data:{}};_this.props.queryCompetition(params);_this.props.queryAllSports();_this.props.queryAllFormats();};_this.handleCloseModal=function(){var confirm=window.confirm('Bạn có chắc chắn muốn hủy form đăng ký?');if(confirm===true){_this.setState({showJoinModal:false});}};_this.validateForm=function(){var teamNameInFormError=false;var teamNameInFormErrorContent='';var teamShortNameInFormErrorContent='';var teamShortNameInFormError=false;if(_this.state.teamNameInForm.trim()===''){teamNameInFormError=true;teamNameInFormErrorContent='Tên đội không được trống';}if(_this.state.teamShortNameInForm.trim()===''){teamShortNameInFormError=true;teamShortNameInFormErrorContent='Tên ngắn đội không được trống';}return{teamNameInFormError:teamNameInFormError,teamNameInFormErrorContent:teamNameInFormErrorContent,teamShortNameInFormError:teamShortNameInFormError,teamShortNameInFormErrorContent:teamShortNameInFormErrorContent};};_this.validateAddPlayer=function(){var playerEmailInFormErrorContent='';var playerEmailInFormError=false;var playerNameInFormErrorContent='';var playerNameInFormError=false;if(_this.state.playerNameInForm.trim()===''){playerNameInFormError=true;playerNameInFormErrorContent='Tên người chơi không được trống';}if(!config.regex.email.test(_this.state.playerEmailInForm)){playerEmailInFormError=true;playerEmailInFormErrorContent='Email không hợp lệ';}return{playerEmailInFormError:playerEmailInFormError,playerEmailInFormErrorContent:playerEmailInFormErrorContent,playerNameInFormErrorContent:playerNameInFormErrorContent,playerNameInFormError:playerNameInFormError};};_this.handleConfirmModal=function(){var _this$validateForm=_this.validateForm(),teamNameInFormError=_this$validateForm.teamNameInFormError,teamNameInFormErrorContent=_this$validateForm.teamNameInFormErrorContent,teamShortNameInFormError=_this$validateForm.teamShortNameInFormError,teamShortNameInFormErrorContent=_this$validateForm.teamShortNameInFormErrorContent;_this.setState({teamNameInFormError:teamNameInFormError,teamNameInFormErrorContent:teamNameInFormErrorContent,teamShortNameInFormError:teamShortNameInFormError,teamShortNameInFormErrorContent:teamShortNameInFormErrorContent});if(teamNameInFormError===true||teamShortNameInFormError===true){return;}// this.props.registTeam();\n};_this.addPlayer=function(){var _this$validateAddPlay=_this.validateAddPlayer(),playerEmailInFormError=_this$validateAddPlay.playerEmailInFormError,playerEmailInFormErrorContent=_this$validateAddPlay.playerEmailInFormErrorContent,playerNameInFormErrorContent=_this$validateAddPlay.playerNameInFormErrorContent,playerNameInFormError=_this$validateAddPlay.playerNameInFormError;_this.setState({playerEmailInFormError:playerEmailInFormError,playerEmailInFormErrorContent:playerEmailInFormErrorContent,playerNameInFormErrorContent:playerNameInFormErrorContent,playerNameInFormError:playerNameInFormError});if(playerNameInFormError===true||playerEmailInFormError===true){return;}var listTemp=_this.state.listPlayerInForm;listTemp.push({name:_this.state.playerNameInForm,age:_this.state.playerAgeInForm,email:_this.state.playerEmailInForm,gender:_this.state.playerGenderInForm.label});_this.setState({listPlayerInForm:listTemp,playerNameInForm:'',playerAgeInForm:0,playerEmailInForm:'',playerGenderInForm:{value:true,label:'Nam'}});};_this.onChangeTeamNameInForm=function(value){_this.setState({teamNameInForm:value});};_this.onChangeTeamShortNameInForm=function(value){_this.setState({teamShortNameInForm:value});};_this.onDeletePlayer=function(indexx){_this.setState({listPlayerInForm:_this.state.listPlayerInForm.filter(function(item,index){return index!==indexx;})});};_this.onChangePlayerNameInForm=function(value){_this.setState({playerNameInForm:value.target.value});};_this.onChangePlayerEmailInForm=function(value){_this.setState({playerEmailInForm:value.target.value});};_this.onChangePlayerGenderInForm=function(value){_this.setState({playerGenderInForm:value});};_this.onChangePlayerAgeInForm=function(value){var tempValue=0;if(!isNaN(value.target.value)){tempValue=Number(value.target.value);}else{tempValue=0;}_this.setState({playerAgeInForm:tempValue});};_this.handleJoinTournament=function(){_this.setState({showJoinModal:true});};_this.onChangeCompetitionFullName=function(value){_this.setState({competitionFullName:value});};_this.onChangeSport=function(value){_this.setState({selectedSport:value});};_this.handleOpenEditCompetitionInfo=function(){_this.setState({onEditMode:true,competitionFullName:_this.props.competitionInfo.Competition.name!=null?_this.props.competitionInfo.Competition.name:'',selectedSport:_this.props.competitionInfo.Competition.sportId!=null?sportOptions.find(function(element){return element.value===_this.props.competitionInfo.Competition.sportId;})!=null?sportOptions.find(function(element){return element.value===_this.props.competitionInfo.Competition.sportId;}):null:null,onePhase:_this.props.competitionInfo.Competition.hasGroupStage===false,twoPhase:_this.props.competitionInfo.Competition.hasGroupStage===true,selectedCompetitionFormatPhase1:_this.props.finalStageSetting!=null&&_this.props.groupStageSetting!=null?_this.props.competitionInfo.Competition.hasGroupStage===false?competitionFormatOptions.find(function(element){return element.value===_this.props.finalStageSetting.formatId;}):competitionFormatOptions.find(function(element){return element.value===_this.props.groupStageSetting.formatId;}):null,selectedCompetitionFormatPhase2:_this.props.finalStageSetting!=null?competitionFormatOptions.find(function(element){return element.value===_this.props.finalStageSetting.formatId;}):null,homeWayPhase1:_this.props.finalStageSetting!=null&&_this.props.groupStageSetting!=null?_this.props.competitionInfo.Competition.hasGroupStage===false?_this.props.finalStageSetting.hasHomeMatch:_this.props.groupStageSetting.hasHomeMatch:false,homeWayPhase2:_this.props.finalStageSetting!=null?_this.props.finalStageSetting.hasHomeMatch:false,amountOfTeamsInAGroup:_this.props.groupStageSetting!=null?_this.props.groupStageSetting.maxTeamPerTable:2,amountOfTeamsGoOnInAGroup:_this.props.groupStageSetting!=null?_this.props.groupStageSetting.advanceTeamPerTable:1});};_this.validateCompetitionInfo=function(){var competitionFullNameError=false;var competitionFullNameErrorContent='';if(_this.state.competitionFullName.trim()===''){competitionFullNameError=true;competitionFullNameErrorContent='Tên cuộc thi không được trống';}var tempList=_this.props.allCompetitionByTournamentId.slice(0);var tempList2=tempList.filter(function(element){return element.id!==_this.props.competitionInfo.Competition.id;});if(tempList2.find(function(element){return element.name===_this.state.competitionFullName;})!=null){competitionFullNameError=true;competitionFullNameErrorContent='Tên cuộc thi này đã tồn tại';}return{competitionFullNameError:competitionFullNameError,competitionFullNameErrorContent:competitionFullNameErrorContent};};_this.handleCloseEditCompetitionInfo=function(){var _this$validateCompeti=_this.validateCompetitionInfo(),competitionFullNameError=_this$validateCompeti.competitionFullNameError,competitionFullNameErrorContent=_this$validateCompeti.competitionFullNameErrorContent;var _this$validateAmountO=_this.validateAmountOfTeamsInAGroup(),amountOfTeamsInAGroupError=_this$validateAmountO.amountOfTeamsInAGroupError,amountOfTeamsInAGroupErrorContent=_this$validateAmountO.amountOfTeamsInAGroupErrorContent;var _this$validateAmountO2=_this.validateAmountOfTeamsGoOnInAGroup(),amountOfTeamsGoOnInAGroupError=_this$validateAmountO2.amountOfTeamsGoOnInAGroupError,amountOfTeamsGoOnInAGroupErrorContent=_this$validateAmountO2.amountOfTeamsGoOnInAGroupErrorContent;_this.setState({amountOfTeamsInAGroupError:amountOfTeamsInAGroupError,amountOfTeamsInAGroupErrorContent:amountOfTeamsInAGroupErrorContent,amountOfTeamsGoOnInAGroupError:amountOfTeamsGoOnInAGroupError,amountOfTeamsGoOnInAGroupErrorContent:amountOfTeamsGoOnInAGroupErrorContent,competitionFullNameError:competitionFullNameError,competitionFullNameErrorContent:competitionFullNameErrorContent});if(competitionFullNameError===true||amountOfTeamsInAGroupError===true||amountOfTeamsGoOnInAGroupError===true){return;}var params={path:'',param:{id:_this.props.routerInfo.match.params.competitionId},data:{description:_this.props.competitionInfo.Competition.description,hasGroupStage:_this.state.onePhase===true?false:true,name:_this.state.competitionFullName,sportId:_this.state.selectedSport.value,status:_this.props.competitionInfo.Competition.status,tournamentId:_this.props.competitionInfo.Competition.tournamentId,url:_this.props.competitionInfo.Competition.url}};_this.props.editCompetition(params);params={path:'',param:{id:_this.props.finalStageSetting.id},data:{competitionId:_this.props.routerInfo.match.params.competitionId,formatId:_this.state.twoPhase===true?_this.state.selectedCompetitionFormatPhase2.value:_this.state.selectedCompetitionFormatPhase1.value,hasHomeMatch:_this.state.twoPhase===true?_this.state.homeWayPhase2:_this.state.homeWayPhase1,status:_this.props.finalStageSetting.status,url:_this.props.finalStageSetting.url}};_this.props.editFinalStageSetting(params);if(_this.state.twoPhase===true){params={path:'',param:{id:_this.props.groupStageSetting.id},data:{competitionId:_this.props.routerInfo.match.params.competitionId,formatId:_this.state.selectedCompetitionFormatPhase1.value,hasHomeMatch:_this.state.homeWayPhase1,status:_this.props.groupStageSetting.status,url:_this.props.groupStageSetting.url,advanceTeamPerTable:_this.state.amountOfTeamsGoOnInAGroup,maxTeamPerTable:_this.state.amountOfTeamsInAGroup}};_this.props.editGroupStageSetting(params);}params={path:'',param:{competitionId:_this.props.routerInfo.match.params.competitionId},data:{}};_this.props.updateSchedule(params);_this.setState({onEditMode:false});};_this.OnChoose1=function(){_this.setState({onePhase:true,twoPhase:false});};_this.OnChoose2=function(){_this.setState({onePhase:false,twoPhase:true});};_this.onChangeCompetitionFormatPhase1=function(value){_this.setState({selectedCompetitionFormatPhase1:value});};_this.onChangeCompetitionFormatPhase2=function(value){_this.setState({selectedCompetitionFormatPhase2:value});};_this.onChangeHomeWayPhase1=function(){_this.setState({homeWayPhase1:!_this.state.homeWayPhase1});};_this.onChangeHomeWayPhase2=function(){_this.setState({homeWayPhase2:!_this.state.homeWayPhase2});};_this.onChangeAmountOfTeamsInAGroup=function(value){var tempValue=0;if(!isNaN(value)){tempValue=Number(value);}else{tempValue=0;}_this.setState({amountOfTeamsInAGroup:tempValue});};_this.onChangeAmountOfTeamsGoOnInAGroup=function(value){var tempValue=0;if(!isNaN(value)){tempValue=Number(value);}else{tempValue=0;}_this.setState({amountOfTeamsGoOnInAGroup:tempValue});};_this.validateAmountOfTeamsInAGroup=function(){var amountOfTeamsInAGroupError=false;var amountOfTeamsInAGroupErrorContent='';if(_this.state.amountOfTeamsInAGroup<2){amountOfTeamsInAGroupError=true;amountOfTeamsInAGroupErrorContent='Số đội tối đa trong 1 bảng phải lớn hơn 1';}return{amountOfTeamsInAGroupError:amountOfTeamsInAGroupError,amountOfTeamsInAGroupErrorContent:amountOfTeamsInAGroupErrorContent};};_this.onBlurAmountOfTeamsInAGroup=function(){var _this$validateAmountO3=_this.validateAmountOfTeamsInAGroup(),amountOfTeamsInAGroupError=_this$validateAmountO3.amountOfTeamsInAGroupError,amountOfTeamsInAGroupErrorContent=_this$validateAmountO3.amountOfTeamsInAGroupErrorContent;_this.setState({amountOfTeamsInAGroupError:amountOfTeamsInAGroupError,amountOfTeamsInAGroupErrorContent:amountOfTeamsInAGroupErrorContent});if(amountOfTeamsInAGroupError===true){return;}};_this.validateAmountOfTeamsGoOnInAGroup=function(){var amountOfTeamsGoOnInAGroupError=false;var amountOfTeamsGoOnInAGroupErrorContent='';if(_this.state.amountOfTeamsGoOnInAGroup<1||_this.state.amountOfTeamsGoOnInAGroup>=_this.state.amountOfTeamsInAGroup){amountOfTeamsGoOnInAGroupError=true;amountOfTeamsGoOnInAGroupErrorContent='Số đội đi tiếp trong 1 bảng phải lớn hơn 0 và nhỏ hơn số đội tối đa';}return{amountOfTeamsGoOnInAGroupError:amountOfTeamsGoOnInAGroupError,amountOfTeamsGoOnInAGroupErrorContent:amountOfTeamsGoOnInAGroupErrorContent};};_this.onBlurAmountOfTeamsGoOnInAGroup=function(){var _this$validateAmountO4=_this.validateAmountOfTeamsGoOnInAGroup(),amountOfTeamsGoOnInAGroupError=_this$validateAmountO4.amountOfTeamsGoOnInAGroupError,amountOfTeamsGoOnInAGroupErrorContent=_this$validateAmountO4.amountOfTeamsGoOnInAGroupErrorContent;_this.setState({amountOfTeamsGoOnInAGroupError:amountOfTeamsGoOnInAGroupError,amountOfTeamsGoOnInAGroupErrorContent:amountOfTeamsGoOnInAGroupErrorContent});if(amountOfTeamsGoOnInAGroupError===true){return;}};_this.state={showJoinModal:false,teamNameInForm:'',playerEmailInForm:'',teamNameInFormError:false,teamNameInFormErrorContent:'',playerNameInForm:'',playerAgeInForm:0,playerGenderInForm:{value:true,label:'Nam'},playerEmailInFormError:false,playerEmailInFormErrorContent:'',playerNameInFormError:false,playerNameInFormErrorContent:'',teamShortNameInForm:'',teamShortNameInFormError:false,onEditMode:false,teamShortNameInFormErrorContent:'',competitionFullName:'',competitionFullNameError:false,competitionFullNameErrorContent:'',selectedSport:null,onePhase:true,twoPhase:false,selectedCompetitionFormatPhase1:null,selectedCompetitionFormatPhase2:null,homeWayPhase2:false,homeWayPhase1:false,amountOfTeamsInAGroup:2,amountOfTeamsInAGroupError:false,amountOfTeamsInAGroupErrorContent:'',amountOfTeamsGoOnInAGroup:1,amountOfTeamsGoOnInAGroupError:false,amountOfTeamsGoOnInAGroupErrorContent:'',listPlayerInForm:[{name:'Phan Trọng Nhân',gender:'Nam',age:23,email:'caulamgithelol.lmht@gmail.com'}]};return _this;}_createClass(CompetitionInfo,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextProps.competitionInfo!==this.props.competitionInfo&&nextProps.competitionInfo!=null&&nextProps.competitionInfo.Competition!=null&&nextProps.competitionInfo.Competition.tournamentId!=null){var _params={path:'',param:{id:nextProps.competitionInfo.Competition.tournamentId},data:{}};this.props.queryTournamentInfo(_params);_params={path:'',param:{tournamentId:nextProps.competitionInfo.Competition.tournamentId,limit:99},data:{}};this.props.queryAllCompetitionsByTournamentId(_params);_params={path:'',param:{id:nextProps.competitionInfo.Competition.sportId},data:{}};this.props.querySportInfo(_params);_params={path:'',param:{competitionId:this.props.routerInfo.match.params.competitionId},data:{}};this.props.queryFinalStageSetting(_params);_params={path:'',param:{competitionId:this.props.routerInfo.match.params.competitionId},data:{}};this.props.queryGroupStageSetting(_params);}if(this.props.allSports!==nextProps.allSports){sportOptions=[];nextProps.allSports.map(function(item,index){return sportOptions.push({value:item.id,label:item.fullName});});}if(this.props.allFormats!==nextProps.allFormats){competitionFormatOptions=[];nextProps.allFormats.map(function(item,index){return competitionFormatOptions.push({value:item.id,label:item.description});});}if((this.props.competitionInfo!==nextProps.competitionInfo||this.props.tournamentInfo!==nextProps.tournamentInfo)&&nextProps.competitionInfo!=null&&nextProps.competitionInfo.Competition!=null&&nextProps.tournamentInfo!=null&&nextProps.tournamentInfo.Tournament!=null){if(nextProps.competitionInfo.Competition.hasGroupStage===false){this.tabList=['Nhánh thi đấu vòng chung kết','Lịch thi đấu vòng chung kết','BXH vòng chung kết','Các đội tham gia'];this.componentList=[/*#__PURE__*/React.createElement(BracketBoard,{competitionId:this.props.routerInfo.match.params.competitionId,finalStage:true}),/*#__PURE__*/React.createElement(BracketSchedule,{competitionId:this.props.routerInfo.match.params.competitionId,finalStage:true}),/*#__PURE__*/React.createElement(BracketRank,{competitionId:this.props.routerInfo.match.params.competitionId,finalStage:true}),/*#__PURE__*/React.createElement(Teams,{competitionInfo:nextProps.competitionInfo,tournamentInfo:nextProps.tournamentInfo,id:nextProps.competitionInfo.Competition.id,type:'competition'})];}else{this.tabList=['Nhánh thi đấu vòng bảng','Lịch thi đấu vòng bảng','Nhánh thi đấu vòng chung kết','Lịch thi đấu vòng chung kết','Các đội tham gia'];this.componentList=[/*#__PURE__*/React.createElement(BracketBoard,{competitionId:this.props.routerInfo.match.params.competitionId,finalStage:false}),/*#__PURE__*/React.createElement(BracketSchedule,{competitionId:this.props.routerInfo.match.params.competitionId,finalStage:false}),/*#__PURE__*/React.createElement(BracketBoard,{competitionId:this.props.routerInfo.match.params.competitionId,finalStage:true}),/*#__PURE__*/React.createElement(BracketSchedule,{competitionId:this.props.routerInfo.match.params.competitionId,finalStage:true}),/*#__PURE__*/React.createElement(Teams,{competitionInfo:nextProps.competitionInfo,tournamentInfo:nextProps.tournamentInfo,id:nextProps.competitionInfo.Competition.id,type:'competition'})];}}return true;}},{key:\"componentDidMount\",value:function componentDidMount(){this.requestData();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-Container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},this.state.onEditMode===false?/*#__PURE__*/React.createElement(\"p\",{className:\"CompetitionInfo-name-text\"},this.props.competitionInfo!=null&&this.props.competitionInfo.Competition?this.props.competitionInfo.Competition.name:/*#__PURE__*/React.createElement(Skeleton,{width:400,height:30})):/*#__PURE__*/React.createElement(TextInput,{style:{width:300},label:'Tên cuộc thi',value:this.state.competitionFullName,onChangeText:this.onChangeCompetitionFullName,error:this.state.competitionFullNameError,errorContent:this.state.competitionFullNameErrorContent})),/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},this.state.onEditMode===false&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.tournamentInfo!=null&&this.props.tournamentInfo.Tournament?\"Tr\\u1EA1ng th\\xE1i: \".concat(formatTournamentStatus(this.props.tournamentInfo.Tournament.status)):/*#__PURE__*/React.createElement(Skeleton,{width:200,height:20}))),/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},this.state.onEditMode===false?/*#__PURE__*/React.createElement(\"p\",null,this.props.sportInfo!=null?\"B\\u1ED9 m\\xF4n thi \\u0111\\u1EA5u: \".concat(this.props.sportInfo.fullName):/*#__PURE__*/React.createElement(Skeleton,{width:200,height:20})):sportOptions.length>0&&/*#__PURE__*/React.createElement(Select,{options:sportOptions,className:\"Select\",defaultValue:this.state.selectedSport,value:this.state.selectedSport,onChange:this.onChangeSport,maxMenuHeight:140}))),this.state.onEditMode===false&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.tournamentInfo!=null&&this.props.tournamentInfo.Tournament?\"Thu\\u1ED9c gi\\u1EA3i: \".concat(this.props.tournamentInfo.Tournament.fullName):/*#__PURE__*/React.createElement(Skeleton,{width:250,height:20})))),this.state.onEditMode===true?/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,\"C\\xE1ch t\\u1ED5 ch\\u1EE9c gi\\u1EA3i:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"competitionType\",onClick:this.OnChoose1,checked:this.state.onePhase,readOnly:true}),/*#__PURE__*/React.createElement(\"label\",{onClick:this.OnChoose1},\"1 giai \\u0111o\\u1EA1n\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"competitionType\",onClick:this.OnChoose2,checked:this.state.twoPhase,readOnly:true}),/*#__PURE__*/React.createElement(\"label\",{onClick:this.OnChoose2},\"2 giai \\u0111o\\u1EA1n\"))):/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.competitionInfo!=null&&this.props.competitionInfo.Competition?\"C\\xE1ch t\\u1ED5 ch\\u1EE9c gi\\u1EA3i: \".concat(this.props.competitionInfo.Competition.hasGroupStage===true?'2 giai đoạn':'1 giai đoạn'):/*#__PURE__*/React.createElement(Skeleton,{width:250,height:20})))),this.state.onEditMode===true?/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,\"Th\\u1EC3 th\\u1EE9c\".concat(this.state.onePhase===true?'':' vòng bảng')),/*#__PURE__*/React.createElement(Select,{options:competitionFormatOptions,className:\"Select\",defaultValue:this.state.selectedCompetitionFormatPhase1,value:this.state.selectedCompetitionFormatPhase1,onChange:this.onChangeCompetitionFormatPhase1,menuPlacement:'top'}))):/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.competitionInfo!=null&&this.props.competitionInfo.Competition?\"\".concat(this.props.competitionInfo.Competition.hasGroupStage===true?'Thể thức vòng bảng: ':'Thể thức: ',\"\\n                            \").concat(this.props.groupStageSetting!=null&&this.props.allFormats!=null&&this.props.finalStageSetting!=null&&this.props.allFormats.length>0&&this.props.allFormats.find(function(element){return element.id===_this2.props.finalStageSetting.formatId;})!=null&&this.props.allFormats.find(function(element){return element.id===_this2.props.groupStageSetting.formatId;})!=null?this.props.competitionInfo.Competition.hasGroupStage!==true?this.props.allFormats.find(function(element){return element.id===_this2.props.finalStageSetting.formatId;}).description:this.props.allFormats.find(function(element){return element.id===_this2.props.groupStageSetting.formatId;}).description:'chưa có'):/*#__PURE__*/React.createElement(Skeleton,{width:300,height:20})))),this.state.onEditMode===true?this.state.selectedCompetitionFormatPhase1!=null&&this.state.selectedCompetitionFormatPhase1.value!==2&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"label\",{className:\"Checkbox-label\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:this.state.homeWayPhase1,onChange:this.onChangeHomeWayPhase1}),\"\".concat(this.state.selectedCompetitionFormatPhase1.value===3?\"\".concat(this.state.twoPhase===true?'Chơi lượt đi lượt về vòng bảng':'Chơi lượt đi lượt về'):\"\".concat(this.state.twoPhase===true?'Có trận tranh hạng 3 vòng bảng':'Có trận tranh hạng 3'))))):this.props.competitionInfo!=null&&this.props.competitionInfo.Competition&&(this.props.competitionInfo.Competition.hasGroupStage===true?this.props.groupStageSetting!=null&&this.props.groupStageSetting.formatId!==2&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.groupStageSetting.hasHomeMatch===true?this.props.groupStageSetting.formatId===1?'Có trận tranh hạng 3 vòng bảng':'Có chơi lượt đi lượt về vòng bảng':this.props.groupStageSetting.formatId===1?'Không có trận tranh hạng 3 vòng bảng':'Không chơi lượt đi lượt về vòng bảng'))):this.props.finalStageSetting!=null&&this.props.finalStageSetting.formatId!==2&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.finalStageSetting.hasHomeMatch===true?this.props.finalStageSetting.formatId===1?'Có trận tranh hạng 3':'Có chơi lượt đi lượt về':this.props.finalStageSetting.formatId===1?'Không có trận tranh hạng 3':'Không chơi lượt đi lượt về')))),this.state.onEditMode===true?this.state.twoPhase===true&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(TextInput,{style:{width:250},label:'Số đội trong 1 bảng (lớn hơn 1)',value:this.state.amountOfTeamsInAGroup,onChangeText:this.onChangeAmountOfTeamsInAGroup,error:this.state.amountOfTeamsInAGroupError,errorContent:this.state.amountOfTeamsInAGroupErrorContent,onBlur:this.onBlurAmountOfTeamsInAGroup})),/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(TextInput,{style:{width:300},label:'Số đội đi tiếp trong 1 bảng (lớn hơn 0)',value:this.state.amountOfTeamsGoOnInAGroup,onChangeText:this.onChangeAmountOfTeamsGoOnInAGroup,error:this.state.amountOfTeamsGoOnInAGroupError,errorContent:this.state.amountOfTeamsGoOnInAGroupErrorContent,onBlur:this.onBlurAmountOfTeamsGoOnInAGroup}))):this.props.competitionInfo!=null&&this.props.competitionInfo.Competition&&this.props.competitionInfo.Competition.hasGroupStage===true&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,\"S\\u1ED1 \\u0111\\u1ED9i trong 1 b\\u1EA3ng: \",this.props.groupStageSetting!=null?this.props.groupStageSetting.maxTeamPerTable:2)),/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,\"S\\u1ED1 \\u0111\\u1ED9i \\u0111i ti\\u1EBFp trong 1 b\\u1EA3ng: \",this.props.groupStageSetting!=null?this.props.groupStageSetting.advanceTeamPerTable:1))),this.state.onEditMode===true?/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},this.state.twoPhase===true&&/*#__PURE__*/React.createElement(\"p\",null,\"Th\\u1EC3 th\\u1EE9c v\\xF2ng chung k\\u1EBFt\"),this.state.twoPhase===true&&/*#__PURE__*/React.createElement(Select,{options:competitionFormatOptions,className:\"Select\",defaultValue:this.state.selectedCompetitionFormatPhase2,value:this.state.selectedCompetitionFormatPhase2,onChange:this.onChangeCompetitionFormatPhase2,menuPlacement:'top'}))):this.props.competitionInfo!=null&&this.props.competitionInfo.Competition!=null&&this.props.competitionInfo.Competition.hasGroupStage===true&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,\"Th\\u1EC3 th\\u1EE9c v\\xF2ng chung k\\u1EBFt: \",this.props.allFormats!=null&&this.props.finalStageSetting!=null&&this.props.allFormats.length>0&&this.props.allFormats.find(function(element){return element.id===_this2.props.finalStageSetting.formatId;})!=null&&this.props.allFormats.find(function(element){return element.id===_this2.props.finalStageSetting.formatId;}).description))),this.state.onEditMode===false?this.props.competitionInfo!=null&&this.props.competitionInfo.Competition!=null&&this.props.competitionInfo.Competition.hasGroupStage===true&&this.props.finalStageSetting!=null&&this.props.finalStageSetting.formatId!==2&&(this.props.finalStageSetting.formatId===3?/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.finalStageSetting.hasHomeMatch===true?'Chơi lượt đi lượt về vòng chung kết':'Không chơi lượt đi lượt về vòng chung kết'))):/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"p\",null,this.props.finalStageSetting.hasHomeMatch===true?'Có trận tranh hạng 3 vòng chung kết':'Không có trận tranh hạng 3 vòng chung kết')))):this.state.twoPhase===true&&this.state.selectedCompetitionFormatPhase2.value!==2&&(this.state.selectedCompetitionFormatPhase2.value===3?/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"label\",{className:\"Checkbox-label\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:this.state.homeWayPhase2,onChange:this.onChangeHomeWayPhase2}),\"Ch\\u01A1i l\\u01B0\\u1EE3t \\u0111i l\\u01B0\\u1EE3t v\\u1EC1 v\\xF2ng chung k\\u1EBFt\"))):/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-basic-info-container-singleRow\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-info-item\"},/*#__PURE__*/React.createElement(\"label\",{className:\"Checkbox-label\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:this.state.homeWayPhase2,onChange:this.onChangeHomeWayPhase2}),\"C\\xF3 tr\\u1EADn tranh h\\u1EA1ng 3 v\\xF2ng chung k\\u1EBFt\")))))),this.props.competitionInfo!=null&&this.props.competitionInfo.Competition!=null&&this.props.competitionInfo.Config!=null&&cookies.get(COOKIES_TYPE.AUTH_TOKEN)!=null&&(this.props.competitionInfo.Config.canEdit!==true?this.props.competitionInfo.Competition.status==='opening'&&/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-login-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-login\",onClick:this.handleJoinTournament},/*#__PURE__*/React.createElement(\"h4\",{className:\"CompetitionInfo-login-text\"},\"Tham gia cu\\u1ED9c thi\"))):(this.props.competitionInfo.Competition.status==='opening'||this.props.competitionInfo.Competition.status==='initializing')&&(this.state.onEditMode===false?/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-login-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-login\",onClick:this.handleOpenEditCompetitionInfo},/*#__PURE__*/React.createElement(\"h4\",{className:\"CompetitionInfo-login-text\"},\"Ch\\u1EC9nh s\\u1EEDa th\\xF4ng tin\"))):/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-login-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-login\",onClick:this.handleCloseEditCompetitionInfo},/*#__PURE__*/React.createElement(\"h4\",{className:\"CompetitionInfo-login-text\"},\"L\\u01B0u ch\\u1EC9nh s\\u1EEDa\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"CompetitionInfo-content-info-advanced-info-container\"},/*#__PURE__*/React.createElement(CustomTab,{tabList:this.tabList,componentList:this.componentList,selectedIndex:0})))),/*#__PURE__*/React.createElement(CustomModal,{customStyles:customStyles,handleCloseModal:this.handleCloseModal,showModal:this.state.showJoinModal,handleConfirmModal:this.handleConfirmModal},/*#__PURE__*/React.createElement(\"div\",{className:'TournamentInfo-join-tournament-form-competition-header'},/*#__PURE__*/React.createElement(\"h3\",null,\"Form \\u0111\\u0103ng k\\xFD d\\u1EF1 thi\")),/*#__PURE__*/React.createElement(TextInput,{label:'Tên đội',value:this.state.teamNameInForm,onChangeText:this.onChangeTeamNameInForm,error:this.state.teamNameInFormError,errorContent:this.state.teamNameInFormErrorContent}),/*#__PURE__*/React.createElement(TextInput,{label:'Tên ngắn đội',value:this.state.teamShortNameInForm,onChangeText:this.onChangeTeamShortNameInForm,error:this.state.teamShortNameInFormError,errorContent:this.state.teamShortNameInFormErrorContent}),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"p\",null,\"T\\xEAn\")),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item2\"},/*#__PURE__*/React.createElement(\"p\",null,\"Gi\\u1EDBi t\\xEDnh\")),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item2\"},/*#__PURE__*/React.createElement(\"p\",null,\"Tu\\u1ED5i\")),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"p\",null,\"Email\")),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-setting\"})),this.state.listPlayerInForm.map(function(item,index){return/*#__PURE__*/React.createElement(Player,{onDelete:_this2.onDeletePlayer,info:item,freeToEdit:true,key:index,index:index});}),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"input\",{type:'text',onChange:this.onChangePlayerNameInForm,value:this.state.playerNameInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item2\"},/*#__PURE__*/React.createElement(Select,{options:genderOptions,className:\"Select\",defaultValue:this.state.playerGenderInForm,value:this.state.playerGenderInForm,onChange:this.onChangePlayerGenderInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item2\"},/*#__PURE__*/React.createElement(\"input\",{style:{width:'70px'},type:'text',onChange:this.onChangePlayerAgeInForm,value:this.state.playerAgeInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-item1\"},/*#__PURE__*/React.createElement(\"input\",{type:'text',onChange:this.onChangePlayerEmailInForm,value:this.state.playerEmailInForm})),/*#__PURE__*/React.createElement(\"div\",{className:\"TournamentInfo-join-tournament-setting\"},/*#__PURE__*/React.createElement(IoMdAddCircleOutline,{color:'white',size:25,style:{marginLeft:'3px',marginRight:'3px'},onClick:this.addPlayer}))),this.state.playerNameInFormError===true&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},this.state.playerNameInFormErrorContent),this.state.playerEmailInFormError===true&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},this.state.playerEmailInFormErrorContent)));}}]);return CompetitionInfo;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{competitionInfo:state.competitionInfo,tournamentInfo:state.tournamentInfo,allSports:state.allSports,sportInfo:state.sportInfo,groupStageSetting:state.groupStageSetting,finalStageSetting:state.finalStageSetting,allFormats:state.allFormats,allCompetitionByTournamentId:state.allCompetitionByTournamentId};};export default connect(mapStateToProps,{editGroupStageSetting:editGroupStageSetting,editFinalStageSetting:editFinalStageSetting,editCompetition:editCompetition,queryAllFormats:queryAllFormats,queryCompetition:queryCompetition,queryTournamentInfo:queryTournamentInfo,queryAllSports:queryAllSports,querySportInfo:querySportInfo,queryFinalStageSetting:queryFinalStageSetting,queryGroupStageSetting:queryGroupStageSetting,queryAllCompetitionsByTournamentId:queryAllCompetitionsByTournamentId,updateSchedule:updateSchedule})(CompetitionInfo);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/screens/CompetitionInfo/index.tsx"],"names":["React","connect","Skeleton","Select","editGroupStageSetting","editFinalStageSetting","editCompetition","queryAllFormats","queryCompetition","queryAllSports","querySportInfo","queryFinalStageSetting","queryGroupStageSetting","updateSchedule","CustomModal","TextInput","CustomTab","Player","IoMdAddCircleOutline","queryAllCompetitionsByTournamentId","BracketBoard","Teams","BracketSchedule","BracketRank","queryTournamentInfo","config","formatTournamentStatus","cookies","COOKIES_TYPE","customStyles","content","top","left","right","bottom","backgroundColor","display","flexDirection","overlay","zIndex","genderOptions","value","label","sportOptions","competitionFormatOptions","CompetitionInfo","props","tabList","componentList","requestData","params","path","param","id","routerInfo","match","competitionId","data","handleCloseModal","confirm","window","setState","showJoinModal","validateForm","teamNameInFormError","teamNameInFormErrorContent","teamShortNameInFormErrorContent","teamShortNameInFormError","state","teamNameInForm","trim","teamShortNameInForm","validateAddPlayer","playerEmailInFormErrorContent","playerEmailInFormError","playerNameInFormErrorContent","playerNameInFormError","playerNameInForm","regex","email","test","playerEmailInForm","handleConfirmModal","addPlayer","listTemp","listPlayerInForm","push","name","age","playerAgeInForm","gender","playerGenderInForm","onChangeTeamNameInForm","onChangeTeamShortNameInForm","onDeletePlayer","indexx","filter","item","index","onChangePlayerNameInForm","target","onChangePlayerEmailInForm","onChangePlayerGenderInForm","onChangePlayerAgeInForm","tempValue","isNaN","Number","handleJoinTournament","onChangeCompetitionFullName","competitionFullName","onChangeSport","selectedSport","handleOpenEditCompetitionInfo","onEditMode","competitionInfo","Competition","sportId","find","element","onePhase","hasGroupStage","twoPhase","selectedCompetitionFormatPhase1","finalStageSetting","groupStageSetting","formatId","selectedCompetitionFormatPhase2","homeWayPhase1","hasHomeMatch","homeWayPhase2","amountOfTeamsInAGroup","maxTeamPerTable","amountOfTeamsGoOnInAGroup","advanceTeamPerTable","validateCompetitionInfo","competitionFullNameError","competitionFullNameErrorContent","tempList","allCompetitionByTournamentId","slice","tempList2","handleCloseEditCompetitionInfo","validateAmountOfTeamsInAGroup","amountOfTeamsInAGroupError","amountOfTeamsInAGroupErrorContent","validateAmountOfTeamsGoOnInAGroup","amountOfTeamsGoOnInAGroupError","amountOfTeamsGoOnInAGroupErrorContent","description","status","tournamentId","url","OnChoose1","OnChoose2","onChangeCompetitionFormatPhase1","onChangeCompetitionFormatPhase2","onChangeHomeWayPhase1","onChangeHomeWayPhase2","onChangeAmountOfTeamsInAGroup","onChangeAmountOfTeamsGoOnInAGroup","onBlurAmountOfTeamsInAGroup","onBlurAmountOfTeamsGoOnInAGroup","nextProps","nextState","limit","allSports","map","fullName","allFormats","tournamentInfo","Tournament","width","sportInfo","length","Config","get","AUTH_TOKEN","canEdit","marginLeft","marginRight","color","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Styles } from 'react-modal';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport * as H from 'history';\r\nimport { StaticContext } from 'react-router';\r\nimport Select, { ValueType, OptionTypeBase } from 'react-select';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport {\r\n  editGroupStageSetting,\r\n  editFinalStageSetting,\r\n  editCompetition,\r\n  queryAllFormats,\r\n  queryCompetition,\r\n  queryAllSports,\r\n  querySportInfo,\r\n  queryFinalStageSetting,\r\n  queryGroupStageSetting,\r\n  updateSchedule\r\n} from './actions';\r\nimport './styles.css';\r\nimport CustomModal from 'components/CustomModal';\r\nimport TextInput from 'components/TextInput';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport CustomTab from 'components/CustomTab';\r\nimport Player from 'components/Player';\r\nimport { IoMdAddCircleOutline } from 'react-icons/io';\r\nimport { queryAllCompetitionsByTournamentId } from 'components/CompetitionsSetting/actions';\r\nimport BracketBoard from 'components/BracketBoard';\r\nimport Teams from 'components/Teams';\r\nimport BracketSchedule from 'components/BracketSchedule';\r\nimport BracketRank from 'components/BracketRank';\r\nimport { queryTournamentInfo } from 'screens/TournamentInfo/actions';\r\nimport config from 'config';\r\nimport { formatTournamentStatus } from 'utils/common';\r\nimport { cookies } from 'utils/cookies';\r\nimport { COOKIES_TYPE } from 'global';\r\n\r\ninterface ICompetitionInfoProps extends React.ClassAttributes<CompetitionInfo> {\r\n  routerInfo: RouteComponentProps<any, StaticContext, H.LocationState>;\r\n  competitionInfo: IParams | null;\r\n  tournamentInfo: IParams | null;\r\n  finalStageSetting: IParams | null;\r\n  groupStageSetting: IParams | null;\r\n  allSports: IParams[];\r\n  allFormats: IParams[];\r\n  sportInfo: IParams | null;\r\n  allCompetitionByTournamentId: IParams[] | null;\r\n\r\n  queryCompetition(params: IBigRequest): void;\r\n  queryTournamentInfo(params: IBigRequest): void;\r\n  querySportInfo(params: IBigRequest): void;\r\n  queryFinalStageSetting(params: IBigRequest): void;\r\n  queryGroupStageSetting(params: IBigRequest): void;\r\n  editCompetition(params: IBigRequest): void;\r\n  editFinalStageSetting(params: IBigRequest): void;\r\n  editGroupStageSetting(params: IBigRequest): void;\r\n  queryAllCompetitionsByTournamentId(params: IBigRequest): void;\r\n  updateSchedule(params: IBigRequest): void;\r\n  queryAllSports(): void;\r\n  queryAllFormats(): void;\r\n}\r\n\r\ninterface ICompetitionInfoState {\r\n  showJoinModal: boolean;\r\n  competitionFullName: string;\r\n  competitionFullNameError: boolean;\r\n  competitionFullNameErrorContent: string;\r\n  teamNameInForm: string;\r\n  teamNameInFormError: boolean;\r\n  teamNameInFormErrorContent: string;\r\n  playerNameInForm: string;\r\n  playerNameInFormError: boolean;\r\n  playerNameInFormErrorContent: string;\r\n  playerEmailInForm: string;\r\n  playerEmailInFormError: boolean;\r\n  playerEmailInFormErrorContent: string;\r\n  playerAgeInForm: number;\r\n  teamShortNameInForm: string;\r\n  teamShortNameInFormError: boolean;\r\n  teamShortNameInFormErrorContent: string;\r\n  listPlayerInForm: IParams[];\r\n  playerGenderInForm: ValueType<OptionTypeBase>;\r\n  onEditMode: boolean;\r\n  selectedSport: ValueType<OptionTypeBase>;\r\n  onePhase: boolean;\r\n  twoPhase: boolean;\r\n  selectedCompetitionFormatPhase1: ValueType<OptionTypeBase>;\r\n  selectedCompetitionFormatPhase2: ValueType<OptionTypeBase>;\r\n  homeWayPhase2: boolean;\r\n  homeWayPhase1: boolean;\r\n  amountOfTeamsInAGroup: number;\r\n  amountOfTeamsInAGroupError: boolean;\r\n  amountOfTeamsInAGroupErrorContent: string;\r\n  amountOfTeamsGoOnInAGroup: number;\r\n  amountOfTeamsGoOnInAGroupError: boolean;\r\n  amountOfTeamsGoOnInAGroupErrorContent: string;\r\n}\r\n\r\nconst customStyles: Styles = {\r\n  content: {\r\n    top: '5%',\r\n    left: '15%',\r\n    right: '15%',\r\n    bottom: '5%',\r\n    backgroundColor: '#2b303d',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  overlay: {\r\n    zIndex: 100001,\r\n  },\r\n};\r\n\r\nconst genderOptions = [\r\n  { value: true, label: 'Nam' },\r\n  { value: false, label: 'Nữ' },\r\n];\r\n\r\nlet sportOptions: IParams[] = [];\r\n\r\nlet competitionFormatOptions: IParams[] = [];\r\n\r\nclass CompetitionInfo extends React.Component<ICompetitionInfoProps, ICompetitionInfoState> {\r\n  private tabList: string[] = [];\r\n  private componentList: ReactNode[] = [];\r\n\r\n  constructor(props: ICompetitionInfoProps) {\r\n    super(props);\r\n    this.state = {\r\n      showJoinModal: false,\r\n      teamNameInForm: '',\r\n      playerEmailInForm: '',\r\n      teamNameInFormError: false,\r\n      teamNameInFormErrorContent: '',\r\n      playerNameInForm: '',\r\n      playerAgeInForm: 0,\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n      playerEmailInFormError: false,\r\n      playerEmailInFormErrorContent: '',\r\n      playerNameInFormError: false,\r\n      playerNameInFormErrorContent: '',\r\n      teamShortNameInForm: '',\r\n      teamShortNameInFormError: false,\r\n      onEditMode: false,\r\n      teamShortNameInFormErrorContent: '',\r\n      competitionFullName: '',\r\n      competitionFullNameError: false,\r\n      competitionFullNameErrorContent: '',\r\n      selectedSport: null,\r\n      onePhase: true,\r\n      twoPhase: false,\r\n      selectedCompetitionFormatPhase1: null,\r\n      selectedCompetitionFormatPhase2: null,\r\n      homeWayPhase2: false,\r\n      homeWayPhase1: false,\r\n      amountOfTeamsInAGroup: 2,\r\n      amountOfTeamsInAGroupError: false,\r\n      amountOfTeamsInAGroupErrorContent: '',\r\n      amountOfTeamsGoOnInAGroup: 1,\r\n      amountOfTeamsGoOnInAGroupError: false,\r\n      amountOfTeamsGoOnInAGroupErrorContent: '',\r\n      listPlayerInForm: [\r\n        {\r\n          name: 'Phan Trọng Nhân',\r\n          gender: 'Nam',\r\n          age: 23,\r\n          email: 'caulamgithelol.lmht@gmail.com',\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ICompetitionInfoProps, nextState: ICompetitionInfoState) {\r\n    if (nextProps.competitionInfo !== this.props.competitionInfo && nextProps.competitionInfo != null && nextProps.competitionInfo.Competition != null && (nextProps.competitionInfo.Competition as unknown as IParams).tournamentId != null) {\r\n      let params: IBigRequest = {\r\n        path: '',\r\n        param: {\r\n          id: (nextProps.competitionInfo.Competition as unknown as IParams).tournamentId,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryTournamentInfo(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          tournamentId: (nextProps.competitionInfo.Competition as unknown as IParams).tournamentId,\r\n          limit: 99,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryAllCompetitionsByTournamentId(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          id: (nextProps.competitionInfo.Competition as unknown as IParams).sportId,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.querySportInfo(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryFinalStageSetting(params);\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n        },\r\n        data: {},\r\n      };\r\n      this.props.queryGroupStageSetting(params);\r\n    }\r\n    if (this.props.allSports !== nextProps.allSports) {\r\n      sportOptions = [];\r\n      nextProps.allSports.map((item, index) => sportOptions.push({ value: item.id, label: item.fullName }));\r\n    }\r\n    if (this.props.allFormats !== nextProps.allFormats) {\r\n      competitionFormatOptions = [];\r\n      nextProps.allFormats.map((item, index) => competitionFormatOptions.push({ value: item.id, label: item.description }));\r\n    }\r\n    if ((this.props.competitionInfo !== nextProps.competitionInfo || this.props.tournamentInfo !== nextProps.tournamentInfo) && nextProps.competitionInfo != null && nextProps.competitionInfo.Competition != null && nextProps.tournamentInfo != null && nextProps.tournamentInfo.Tournament != null) {\r\n      if ((nextProps.competitionInfo.Competition as IParams).hasGroupStage === false) {\r\n        this.tabList = [\r\n          'Nhánh thi đấu vòng chung kết',\r\n          'Lịch thi đấu vòng chung kết',\r\n          'BXH vòng chung kết',\r\n          'Các đội tham gia'\r\n        ];\r\n        this.componentList = [\r\n          <BracketBoard competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <BracketSchedule competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <BracketRank competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <Teams competitionInfo={nextProps.competitionInfo} tournamentInfo={nextProps.tournamentInfo} id={(nextProps.competitionInfo.Competition as unknown as IParams).id as number} type={'competition'} />\r\n        ];\r\n      } else {\r\n        this.tabList = [\r\n          'Nhánh thi đấu vòng bảng',\r\n          'Lịch thi đấu vòng bảng',\r\n          'Nhánh thi đấu vòng chung kết',\r\n          'Lịch thi đấu vòng chung kết',\r\n          'Các đội tham gia'\r\n        ];\r\n        this.componentList = [\r\n          <BracketBoard competitionId={this.props.routerInfo.match.params.competitionId} finalStage={false} />,\r\n          <BracketSchedule competitionId={this.props.routerInfo.match.params.competitionId} finalStage={false} />,\r\n          <BracketBoard competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <BracketSchedule competitionId={this.props.routerInfo.match.params.competitionId} finalStage={true} />,\r\n          <Teams competitionInfo={nextProps.competitionInfo} tournamentInfo={nextProps.tournamentInfo} id={(nextProps.competitionInfo.Competition as unknown as IParams).id as number} type={'competition'} />\r\n        ];\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    const params = {\r\n      path: '',\r\n      param: {\r\n        id: this.props.routerInfo.match.params.competitionId as number,\r\n      },\r\n      data: {},\r\n    }\r\n    this.props.queryCompetition(params);\r\n    this.props.queryAllSports();\r\n    this.props.queryAllFormats();\r\n  }\r\n\r\n  private handleCloseModal = () => {\r\n    const confirm = window.confirm('Bạn có chắc chắn muốn hủy form đăng ký?');\r\n    if (confirm === true) {\r\n      this.setState({\r\n        showJoinModal: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  private validateForm = () => {\r\n    let teamNameInFormError = false;\r\n    let teamNameInFormErrorContent = '';\r\n    let teamShortNameInFormErrorContent = '';\r\n    let teamShortNameInFormError = false;\r\n    if (this.state.teamNameInForm.trim() === '') {\r\n      teamNameInFormError = true;\r\n      teamNameInFormErrorContent = 'Tên đội không được trống';\r\n    }\r\n    if (this.state.teamShortNameInForm.trim() === '') {\r\n      teamShortNameInFormError = true;\r\n      teamShortNameInFormErrorContent = 'Tên ngắn đội không được trống';\r\n    }\r\n\r\n    return {\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    };\r\n  }\r\n\r\n  private validateAddPlayer = () => {\r\n    let playerEmailInFormErrorContent = '';\r\n    let playerEmailInFormError = false;\r\n    let playerNameInFormErrorContent = '';\r\n    let playerNameInFormError = false;\r\n    if (this.state.playerNameInForm.trim() === '') {\r\n      playerNameInFormError = true;\r\n      playerNameInFormErrorContent = 'Tên người chơi không được trống';\r\n    }\r\n    if (!config.regex.email.test(this.state.playerEmailInForm)) {\r\n      playerEmailInFormError = true;\r\n      playerEmailInFormErrorContent = 'Email không hợp lệ';\r\n    }\r\n\r\n    return {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    };\r\n  }\r\n\r\n  private handleConfirmModal = () => {\r\n    const {\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    } = this.validateForm();\r\n    this.setState({\r\n      teamNameInFormError,\r\n      teamNameInFormErrorContent,\r\n      teamShortNameInFormError,\r\n      teamShortNameInFormErrorContent\r\n    });\r\n    if (teamNameInFormError === true || teamShortNameInFormError === true) {\r\n      return;\r\n    }\r\n    // this.props.registTeam();\r\n  };\r\n\r\n  private addPlayer = () => {\r\n    const {\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    } = this.validateAddPlayer();\r\n    this.setState({\r\n      playerEmailInFormError,\r\n      playerEmailInFormErrorContent,\r\n      playerNameInFormErrorContent,\r\n      playerNameInFormError,\r\n    });\r\n    if (playerNameInFormError === true || playerEmailInFormError === true) {\r\n      return;\r\n    }\r\n    const listTemp = this.state.listPlayerInForm;\r\n    listTemp.push({\r\n      name: this.state.playerNameInForm,\r\n      age: this.state.playerAgeInForm,\r\n      email: this.state.playerEmailInForm,\r\n      gender: (this.state.playerGenderInForm as IParams).label,\r\n    });\r\n    this.setState({\r\n      listPlayerInForm: listTemp,\r\n      playerNameInForm: '',\r\n      playerAgeInForm: 0,\r\n      playerEmailInForm: '',\r\n      playerGenderInForm: { value: true, label: 'Nam' },\r\n    });\r\n  }\r\n\r\n\r\n  private onChangeTeamNameInForm = (value: string) => {\r\n    this.setState({\r\n      teamNameInForm: value,\r\n    });\r\n  }\r\n\r\n  private onChangeTeamShortNameInForm = (value: string) => {\r\n    this.setState({\r\n      teamShortNameInForm: value,\r\n    });\r\n  }\r\n\r\n  private onDeletePlayer = (indexx: number) => {\r\n    this.setState({\r\n      listPlayerInForm: this.state.listPlayerInForm.filter((item, index) => index !== indexx),\r\n    });\r\n  }\r\n\r\n  private onChangePlayerNameInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerNameInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerEmailInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      playerEmailInForm: value.target.value,\r\n    });\r\n  }\r\n\r\n  private onChangePlayerGenderInForm = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({ playerGenderInForm: value, });\r\n  }\r\n\r\n  private onChangePlayerAgeInForm = (value: React.ChangeEvent<HTMLInputElement>) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value.target.value as unknown as number)) {\r\n      tempValue = Number(value.target.value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({\r\n      playerAgeInForm: tempValue,\r\n    });\r\n  }\r\n\r\n  private handleJoinTournament = () => {\r\n    this.setState({\r\n      showJoinModal: true,\r\n    });\r\n  };\r\n\r\n  private onChangeCompetitionFullName = (value: string) => {\r\n    this.setState({ competitionFullName: value, });\r\n  }\r\n\r\n  private onChangeSport = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({\r\n      selectedSport: value,\r\n    });\r\n  }\r\n\r\n  private handleOpenEditCompetitionInfo = () => {\r\n    this.setState({\r\n      onEditMode: true,\r\n      competitionFullName: (this.props.competitionInfo!.Competition as unknown as IParams).name != null ? (this.props.competitionInfo!.Competition as unknown as IParams).name as string : '',\r\n      selectedSport: (this.props.competitionInfo!.Competition as unknown as IParams).sportId != null ?\r\n        (sportOptions.find(element => element.value === (this.props.competitionInfo!.Competition as unknown as IParams).sportId) != null ?\r\n          sportOptions.find(element => element.value === (this.props.competitionInfo!.Competition as unknown as IParams).sportId) as ValueType<OptionTypeBase> :\r\n          null) :\r\n        null,\r\n      onePhase: (this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === false,\r\n      twoPhase: (this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === true,\r\n      selectedCompetitionFormatPhase1: this.props.finalStageSetting != null && this.props.groupStageSetting != null ? ((this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === false ? competitionFormatOptions.find(element => element.value === this.props.finalStageSetting!.formatId) : competitionFormatOptions.find(element => element.value === this.props.groupStageSetting!.formatId)) : null,\r\n      selectedCompetitionFormatPhase2: this.props.finalStageSetting != null ? (competitionFormatOptions.find(element => element.value === this.props.finalStageSetting!.formatId) as ValueType<OptionTypeBase>) : null,\r\n      homeWayPhase1: this.props.finalStageSetting != null && this.props.groupStageSetting != null ? ((this.props.competitionInfo!.Competition as unknown as IParams).hasGroupStage === false ? this.props.finalStageSetting.hasHomeMatch as boolean : this.props.groupStageSetting.hasHomeMatch as boolean) : false,\r\n      homeWayPhase2: this.props.finalStageSetting != null ? this.props.finalStageSetting.hasHomeMatch as boolean : false,\r\n      amountOfTeamsInAGroup: this.props.groupStageSetting != null ? this.props.groupStageSetting.maxTeamPerTable as number : 2,\r\n      amountOfTeamsGoOnInAGroup: this.props.groupStageSetting != null ? this.props.groupStageSetting.advanceTeamPerTable as number : 1,\r\n    });\r\n  }\r\n\r\n  private validateCompetitionInfo = () => {\r\n    let competitionFullNameError = false;\r\n    let competitionFullNameErrorContent = '';\r\n    if (this.state.competitionFullName.trim() === '') {\r\n      competitionFullNameError = true;\r\n      competitionFullNameErrorContent = 'Tên cuộc thi không được trống';\r\n    }\r\n    let tempList = this.props.allCompetitionByTournamentId!.slice(0);\r\n    const tempList2 = tempList.filter(element => element.id !== (this.props.competitionInfo!.Competition as IParams).id)\r\n    if (tempList2.find(element => element.name === this.state.competitionFullName) != null) {\r\n      competitionFullNameError = true;\r\n      competitionFullNameErrorContent = 'Tên cuộc thi này đã tồn tại';\r\n    }\r\n\r\n    return { competitionFullNameError, competitionFullNameErrorContent };\r\n  }\r\n\r\n  private handleCloseEditCompetitionInfo = () => {\r\n    const { competitionFullNameError, competitionFullNameErrorContent } = this.validateCompetitionInfo();\r\n    const { amountOfTeamsInAGroupError, amountOfTeamsInAGroupErrorContent } = this.validateAmountOfTeamsInAGroup();\r\n    const { amountOfTeamsGoOnInAGroupError, amountOfTeamsGoOnInAGroupErrorContent } = this.validateAmountOfTeamsGoOnInAGroup();\r\n    this.setState({\r\n      amountOfTeamsInAGroupError,\r\n      amountOfTeamsInAGroupErrorContent,\r\n      amountOfTeamsGoOnInAGroupError,\r\n      amountOfTeamsGoOnInAGroupErrorContent,\r\n      competitionFullNameError,\r\n      competitionFullNameErrorContent,\r\n    });\r\n    if (competitionFullNameError === true || amountOfTeamsInAGroupError === true || amountOfTeamsGoOnInAGroupError === true) {\r\n      return;\r\n    }\r\n    let params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        id: this.props.routerInfo.match.params.competitionId as number,\r\n      },\r\n      data: {\r\n        description: (this.props.competitionInfo!.Competition as IParams).description,\r\n        hasGroupStage: this.state.onePhase === true ? false : true,\r\n        name: this.state.competitionFullName,\r\n        sportId: (this.state.selectedSport as IParams).value,\r\n        status: (this.props.competitionInfo!.Competition as IParams).status,\r\n        tournamentId: (this.props.competitionInfo!.Competition as IParams).tournamentId,\r\n        url: (this.props.competitionInfo!.Competition as IParams).url,\r\n      },\r\n    }\r\n    this.props.editCompetition(params);\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        id: (this.props.finalStageSetting as IParams).id,\r\n      },\r\n      data: {\r\n        competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n        formatId: this.state.twoPhase === true ? (this.state.selectedCompetitionFormatPhase2 as IParams).value : (this.state.selectedCompetitionFormatPhase1 as IParams).value,\r\n        hasHomeMatch: this.state.twoPhase === true ? this.state.homeWayPhase2 : this.state.homeWayPhase1,\r\n        status: (this.props.finalStageSetting as IParams).status,\r\n        url: (this.props.finalStageSetting as IParams).url,\r\n      },\r\n    };\r\n    this.props.editFinalStageSetting(params);\r\n    if (this.state.twoPhase === true) {\r\n      params = {\r\n        path: '',\r\n        param: {\r\n          id: (this.props.groupStageSetting as IParams).id,\r\n        },\r\n        data: {\r\n          competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n          formatId: (this.state.selectedCompetitionFormatPhase1 as IParams).value,\r\n          hasHomeMatch: this.state.homeWayPhase1,\r\n          status: (this.props.groupStageSetting as IParams).status,\r\n          url: (this.props.groupStageSetting as IParams).url,\r\n          advanceTeamPerTable: this.state.amountOfTeamsGoOnInAGroup,\r\n          maxTeamPerTable: this.state.amountOfTeamsInAGroup,\r\n        },\r\n      };\r\n      this.props.editGroupStageSetting(params);\r\n    }\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        competitionId: this.props.routerInfo.match.params.competitionId as number,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.updateSchedule(params);\r\n    this.setState({\r\n      onEditMode: false,\r\n    });\r\n  }\r\n\r\n  private OnChoose1 = () => {\r\n    this.setState({\r\n      onePhase: true,\r\n      twoPhase: false,\r\n    });\r\n  }\r\n\r\n  private OnChoose2 = () => {\r\n    this.setState({\r\n      onePhase: false,\r\n      twoPhase: true,\r\n    });\r\n  }\r\n\r\n  private onChangeCompetitionFormatPhase1 = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({\r\n      selectedCompetitionFormatPhase1: value,\r\n    });\r\n  }\r\n\r\n  private onChangeCompetitionFormatPhase2 = (value: ValueType<OptionTypeBase>) => {\r\n    this.setState({\r\n      selectedCompetitionFormatPhase2: value,\r\n    });\r\n  }\r\n\r\n  private onChangeHomeWayPhase1 = () => {\r\n    this.setState({\r\n      homeWayPhase1: !this.state.homeWayPhase1,\r\n    });\r\n  };\r\n\r\n  private onChangeHomeWayPhase2 = () => {\r\n    this.setState({\r\n      homeWayPhase2: !this.state.homeWayPhase2,\r\n    });\r\n  };\r\n\r\n  private onChangeAmountOfTeamsInAGroup = (value: string) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value as unknown as number)) {\r\n      tempValue = Number(value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({ amountOfTeamsInAGroup: tempValue, });\r\n  }\r\n\r\n  private onChangeAmountOfTeamsGoOnInAGroup = (value: string) => {\r\n    let tempValue = 0;\r\n    if (!isNaN(value as unknown as number)) {\r\n      tempValue = Number(value);\r\n    } else {\r\n      tempValue = 0;\r\n    }\r\n    this.setState({ amountOfTeamsGoOnInAGroup: tempValue, });\r\n  }\r\n\r\n  private validateAmountOfTeamsInAGroup = () => {\r\n    let amountOfTeamsInAGroupError = false;\r\n    let amountOfTeamsInAGroupErrorContent = '';\r\n    if (this.state.amountOfTeamsInAGroup < 2) {\r\n      amountOfTeamsInAGroupError = true;\r\n      amountOfTeamsInAGroupErrorContent = 'Số đội tối đa trong 1 bảng phải lớn hơn 1';\r\n    }\r\n\r\n    return { amountOfTeamsInAGroupError, amountOfTeamsInAGroupErrorContent };\r\n  }\r\n\r\n  private onBlurAmountOfTeamsInAGroup = () => {\r\n    const { amountOfTeamsInAGroupError, amountOfTeamsInAGroupErrorContent } = this.validateAmountOfTeamsInAGroup();\r\n    this.setState({\r\n      amountOfTeamsInAGroupError,\r\n      amountOfTeamsInAGroupErrorContent\r\n    });\r\n    if (amountOfTeamsInAGroupError === true) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  private validateAmountOfTeamsGoOnInAGroup = () => {\r\n    let amountOfTeamsGoOnInAGroupError = false;\r\n    let amountOfTeamsGoOnInAGroupErrorContent = '';\r\n    if (this.state.amountOfTeamsGoOnInAGroup < 1 || this.state.amountOfTeamsGoOnInAGroup >= this.state.amountOfTeamsInAGroup) {\r\n      amountOfTeamsGoOnInAGroupError = true;\r\n      amountOfTeamsGoOnInAGroupErrorContent = 'Số đội đi tiếp trong 1 bảng phải lớn hơn 0 và nhỏ hơn số đội tối đa';\r\n    }\r\n\r\n    return { amountOfTeamsGoOnInAGroupError, amountOfTeamsGoOnInAGroupErrorContent };\r\n  }\r\n\r\n  private onBlurAmountOfTeamsGoOnInAGroup = () => {\r\n    const { amountOfTeamsGoOnInAGroupError, amountOfTeamsGoOnInAGroupErrorContent } = this.validateAmountOfTeamsGoOnInAGroup();\r\n    this.setState({\r\n      amountOfTeamsGoOnInAGroupError,\r\n      amountOfTeamsGoOnInAGroupErrorContent\r\n    });\r\n    if (amountOfTeamsGoOnInAGroupError === true) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CompetitionInfo-Container\">\r\n        <div className=\"CompetitionInfo-content-container\">\r\n          <div className=\"CompetitionInfo-content-info-container\">\r\n            <div className=\"CompetitionInfo-content-info-basic-info-container\">\r\n              <div className=\"CompetitionInfo-content-info-basic-info-container-container\">\r\n                <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                  {this.state.onEditMode === false ?\r\n                    <p className=\"CompetitionInfo-name-text\">{this.props.competitionInfo != null && this.props.competitionInfo.Competition ? (this.props.competitionInfo.Competition as unknown as IParams).name : <Skeleton width={400} height={30} />}</p> :\r\n                    <TextInput style={{ width: 300 }} label={'Tên cuộc thi'} value={this.state.competitionFullName} onChangeText={this.onChangeCompetitionFullName} error={this.state.competitionFullNameError} errorContent={this.state.competitionFullNameErrorContent} />\r\n                  }\r\n                </div>\r\n                <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                  {\r\n                    this.state.onEditMode === false && <div className=\"CompetitionInfo-info-item\">\r\n                      <p>\r\n                        {this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Trạng thái: ${formatTournamentStatus((this.props.tournamentInfo.Tournament as unknown as IParams).status as string)}` : <Skeleton width={200} height={20} />}\r\n                      </p>\r\n                    </div>\r\n                  }\r\n                  <div className=\"CompetitionInfo-info-item\">\r\n                    {\r\n                      this.state.onEditMode === false ? <p>{this.props.sportInfo != null ? `Bộ môn thi đấu: ${this.props.sportInfo.fullName}` : <Skeleton width={200} height={20} />}</p> :\r\n                        (sportOptions.length > 0 &&\r\n                          <Select\r\n                            options={sportOptions}\r\n                            className=\"Select\"\r\n                            defaultValue={this.state.selectedSport}\r\n                            value={this.state.selectedSport}\r\n                            onChange={this.onChangeSport}\r\n                            maxMenuHeight={140}\r\n                          />)\r\n                    }\r\n                  </div>\r\n                </div>\r\n                {this.state.onEditMode === false && <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                  <div className=\"CompetitionInfo-info-item\">\r\n                    <p>{this.props.tournamentInfo != null && this.props.tournamentInfo.Tournament ? `Thuộc giải: ${(this.props.tournamentInfo.Tournament as unknown as IParams).fullName}` : <Skeleton width={250} height={20} />}</p>\r\n                  </div>\r\n                </div>}\r\n                {\r\n                  this.state.onEditMode === true ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Cách tổ chức giải:</p>\r\n                        <input type=\"radio\" name=\"competitionType\" onClick={this.OnChoose1} checked={this.state.onePhase} readOnly />\r\n                        <label onClick={this.OnChoose1}>1 giai đoạn</label>\r\n                        <input type=\"radio\" name=\"competitionType\" onClick={this.OnChoose2} checked={this.state.twoPhase} readOnly />\r\n                        <label onClick={this.OnChoose2}>2 giai đoạn</label>\r\n                      </div>\r\n                    </div> :\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{this.props.competitionInfo != null && this.props.competitionInfo.Competition ? `Cách tổ chức giải: ${(this.props.competitionInfo.Competition as unknown as IParams).hasGroupStage === true ? '2 giai đoạn' : '1 giai đoạn'}` : <Skeleton width={250} height={20} />}</p>\r\n                      </div>\r\n                    </div>\r\n                }\r\n                {\r\n                  this.state.onEditMode === true ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{`Thể thức${this.state.onePhase === true ? '' : ' vòng bảng'}`}</p>\r\n                        <Select\r\n                          options={competitionFormatOptions}\r\n                          className=\"Select\"\r\n                          defaultValue={this.state.selectedCompetitionFormatPhase1}\r\n                          value={this.state.selectedCompetitionFormatPhase1}\r\n                          onChange={this.onChangeCompetitionFormatPhase1}\r\n                          menuPlacement={'top'}\r\n                        />\r\n                      </div>\r\n                    </div> :\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>\r\n                          {\r\n                            this.props.competitionInfo != null && this.props.competitionInfo.Competition ?\r\n                              `${(this.props.competitionInfo.Competition as IParams).hasGroupStage === true ?\r\n                                'Thể thức vòng bảng: ' : 'Thể thức: '}\r\n                            ${\r\n                              this.props.groupStageSetting != null &&\r\n                                this.props.allFormats != null &&\r\n                                this.props.finalStageSetting != null &&\r\n                                this.props.allFormats.length > 0 &&\r\n                                this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId) != null &&\r\n                                this.props.allFormats.find(element => element.id === this.props.groupStageSetting!.formatId) != null ?\r\n                                ((this.props.competitionInfo.Competition as IParams).hasGroupStage !== true ? this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId)!.description :\r\n                                  this.props.allFormats.find(element => element.id === this.props.groupStageSetting!.formatId)!.description) : 'chưa có'\r\n                              }` : <Skeleton width={300} height={20} />}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                }\r\n                {\r\n                  this.state.onEditMode === true ?\r\n                    (this.state.selectedCompetitionFormatPhase1 != null &&\r\n                      (this.state.selectedCompetitionFormatPhase1 as IParams).value !== 2 &&\r\n                      <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"CompetitionInfo-info-item\">\r\n                          <label className=\"Checkbox-label\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={this.state.homeWayPhase1}\r\n                              onChange={this.onChangeHomeWayPhase1}\r\n                            />\r\n                            {`${(this.state.selectedCompetitionFormatPhase1 as IParams).value === 3 ? `${this.state.twoPhase === true ? 'Chơi lượt đi lượt về vòng bảng' : 'Chơi lượt đi lượt về'}` : `${this.state.twoPhase === true ? 'Có trận tranh hạng 3 vòng bảng' : 'Có trận tranh hạng 3'}`}`}\r\n                          </label>\r\n                        </div>\r\n                      </div>) :\r\n                    (this.props.competitionInfo != null && this.props.competitionInfo.Competition && ((this.props.competitionInfo.Competition as unknown as IParams).hasGroupStage === true ?\r\n                      this.props.groupStageSetting != null && this.props.groupStageSetting.formatId !== 2 && <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"CompetitionInfo-info-item\">\r\n                          <p>\r\n                            {\r\n                              this.props.groupStageSetting.hasHomeMatch === true ?\r\n                                (this.props.groupStageSetting.formatId === 1 ? 'Có trận tranh hạng 3 vòng bảng' : 'Có chơi lượt đi lượt về vòng bảng') :\r\n                                (this.props.groupStageSetting.formatId === 1 ? 'Không có trận tranh hạng 3 vòng bảng' : 'Không chơi lượt đi lượt về vòng bảng')\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                      </div> : (this.props.finalStageSetting != null && this.props.finalStageSetting.formatId !== 2 && <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                        <div className=\"CompetitionInfo-info-item\">\r\n                          <p>\r\n                            {\r\n                              this.props.finalStageSetting.hasHomeMatch === true ?\r\n                                (this.props.finalStageSetting.formatId === 1 ? 'Có trận tranh hạng 3' : 'Có chơi lượt đi lượt về') :\r\n                                (this.props.finalStageSetting.formatId === 1 ? 'Không có trận tranh hạng 3' : 'Không chơi lượt đi lượt về')\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                      </div>)))\r\n                }\r\n                {this.state.onEditMode === true ? (this.state.twoPhase === true &&\r\n                  <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                    <div className=\"CompetitionInfo-info-item\">\r\n                      <TextInput\r\n                        style={{ width: 250 }}\r\n                        label={'Số đội trong 1 bảng (lớn hơn 1)'}\r\n                        value={this.state.amountOfTeamsInAGroup as unknown as string}\r\n                        onChangeText={this.onChangeAmountOfTeamsInAGroup}\r\n                        error={this.state.amountOfTeamsInAGroupError}\r\n                        errorContent={this.state.amountOfTeamsInAGroupErrorContent}\r\n                        onBlur={this.onBlurAmountOfTeamsInAGroup}\r\n                      />\r\n                    </div>\r\n                    <div className=\"CompetitionInfo-info-item\">\r\n                      <TextInput\r\n                        style={{ width: 300 }}\r\n                        label={'Số đội đi tiếp trong 1 bảng (lớn hơn 0)'}\r\n                        value={this.state.amountOfTeamsGoOnInAGroup as unknown as string}\r\n                        onChangeText={this.onChangeAmountOfTeamsGoOnInAGroup}\r\n                        error={this.state.amountOfTeamsGoOnInAGroupError}\r\n                        errorContent={this.state.amountOfTeamsGoOnInAGroupErrorContent}\r\n                        onBlur={this.onBlurAmountOfTeamsGoOnInAGroup}\r\n                      />\r\n                    </div>\r\n                  </div>) :\r\n                  (this.props.competitionInfo != null &&\r\n                    this.props.competitionInfo.Competition &&\r\n                    (this.props.competitionInfo.Competition as IParams).hasGroupStage === true &&\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Số đội trong 1 bảng: {this.props.groupStageSetting != null ? this.props.groupStageSetting.maxTeamPerTable as number : 2}</p>\r\n                      </div>\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Số đội đi tiếp trong 1 bảng: {this.props.groupStageSetting != null ? this.props.groupStageSetting.advanceTeamPerTable as number : 1}</p>\r\n                      </div>\r\n                    </div>)\r\n                }\r\n                {this.state.onEditMode === true ? (\r\n                  <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                    <div className=\"CompetitionInfo-info-item\">\r\n                      {this.state.twoPhase === true && <p>Thể thức vòng chung kết</p>}\r\n                      {this.state.twoPhase === true && <Select\r\n                        options={competitionFormatOptions}\r\n                        className=\"Select\"\r\n                        defaultValue={this.state.selectedCompetitionFormatPhase2}\r\n                        value={this.state.selectedCompetitionFormatPhase2}\r\n                        onChange={this.onChangeCompetitionFormatPhase2}\r\n                        menuPlacement={'top'}\r\n                      />}\r\n                    </div>\r\n                  </div>) :\r\n                  (this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && (this.props.competitionInfo.Competition as IParams).hasGroupStage === true &&\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>Thể thức vòng chung kết: {\r\n                          this.props.allFormats != null &&\r\n                          this.props.finalStageSetting != null &&\r\n                          this.props.allFormats.length > 0 &&\r\n                          this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId) != null &&\r\n                          this.props.allFormats.find(element => element.id === this.props.finalStageSetting!.formatId)!.description\r\n                        }\r\n                        </p>\r\n                      </div>\r\n                    </div>)\r\n                }\r\n                {this.state.onEditMode === false ?\r\n                  this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && (this.props.competitionInfo.Competition as IParams).hasGroupStage === true && this.props.finalStageSetting != null && this.props.finalStageSetting.formatId !== 2 && (this.props.finalStageSetting.formatId === 3 ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{this.props.finalStageSetting.hasHomeMatch === true ? 'Chơi lượt đi lượt về vòng chung kết' : 'Không chơi lượt đi lượt về vòng chung kết'}</p>\r\n                      </div>\r\n                    </div> : <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <p>{this.props.finalStageSetting.hasHomeMatch === true ? 'Có trận tranh hạng 3 vòng chung kết' : 'Không có trận tranh hạng 3 vòng chung kết'}</p>\r\n                      </div>\r\n                    </div>)\r\n                  : (this.state.twoPhase === true && (this.state.selectedCompetitionFormatPhase2 as IParams).value !== 2 && ((this.state.selectedCompetitionFormatPhase2 as IParams).value === 3 ?\r\n                    <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <label className=\"Checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.homeWayPhase2}\r\n                            onChange={this.onChangeHomeWayPhase2}\r\n                          />\r\n                      Chơi lượt đi lượt về vòng chung kết\r\n                    </label>\r\n                      </div>\r\n                    </div> : <div className=\"CompetitionInfo-content-info-basic-info-container-singleRow\">\r\n                      <div className=\"CompetitionInfo-info-item\">\r\n                        <label className=\"Checkbox-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={this.state.homeWayPhase2}\r\n                            onChange={this.onChangeHomeWayPhase2}\r\n                          />\r\n                      Có trận tranh hạng 3 vòng chung kết\r\n                    </label>\r\n                      </div>\r\n                    </div>))}\r\n              </div>\r\n            </div>\r\n            {/* {(this.state.onEditMode === false\r\n              ?\r\n              <div className=\"CompetitionInfo-login-container\">\r\n                <div\r\n                  className=\"CompetitionInfo-login\"\r\n                  onClick={this.handleOpenEditCompetitionInfo}\r\n                >\r\n                  <h4 className=\"CompetitionInfo-login-text\">Chỉnh sửa thông tin</h4>\r\n                </div>\r\n              </div> : <div className=\"CompetitionInfo-login-container\">\r\n                <div\r\n                  className=\"CompetitionInfo-login\"\r\n                  onClick={this.handleCloseEditCompetitionInfo}\r\n                >\r\n                  <h4 className=\"CompetitionInfo-login-text\">Lưu chỉnh sửa</h4>\r\n                </div>\r\n              </div>)} */}\r\n            {this.props.competitionInfo != null && this.props.competitionInfo.Competition != null && this.props.competitionInfo.Config != null && cookies.get(COOKIES_TYPE.AUTH_TOKEN) != null && ((this.props.competitionInfo.Config as unknown as IParams).canEdit !== true ?\r\n              ((this.props.competitionInfo.Competition as unknown as IParams).status === 'opening' &&\r\n                <div className=\"CompetitionInfo-login-container\">\r\n                  <div\r\n                    className=\"CompetitionInfo-login\"\r\n                    onClick={this.handleJoinTournament}\r\n                  >\r\n                    <h4 className=\"CompetitionInfo-login-text\">Tham gia cuộc thi</h4>\r\n                  </div>\r\n                </div>) :\r\n              (((this.props.competitionInfo.Competition as unknown as IParams).status === 'opening' || (this.props.competitionInfo.Competition as unknown as IParams).status === 'initializing')\r\n                && (this.state.onEditMode === false\r\n                  ?\r\n                  <div className=\"CompetitionInfo-login-container\">\r\n                    <div\r\n                      className=\"CompetitionInfo-login\"\r\n                      onClick={this.handleOpenEditCompetitionInfo}\r\n                    >\r\n                      <h4 className=\"CompetitionInfo-login-text\">Chỉnh sửa thông tin</h4>\r\n                    </div>\r\n                  </div> : <div className=\"CompetitionInfo-login-container\">\r\n                    <div\r\n                      className=\"CompetitionInfo-login\"\r\n                      onClick={this.handleCloseEditCompetitionInfo}\r\n                    >\r\n                      <h4 className=\"CompetitionInfo-login-text\">Lưu chỉnh sửa</h4>\r\n                    </div>\r\n                  </div>)))\r\n            }\r\n            <div className=\"CompetitionInfo-content-info-advanced-info-container\">\r\n              <CustomTab tabList={this.tabList} componentList={this.componentList} selectedIndex={0}></CustomTab>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <CustomModal\r\n          customStyles={customStyles}\r\n          handleCloseModal={this.handleCloseModal}\r\n          showModal={this.state.showJoinModal}\r\n          handleConfirmModal={this.handleConfirmModal}\r\n        >\r\n          <div className={'TournamentInfo-join-tournament-form-competition-header'}>\r\n            <h3>Form đăng ký dự thi</h3>\r\n          </div>\r\n          <TextInput label={'Tên đội'} value={this.state.teamNameInForm} onChangeText={this.onChangeTeamNameInForm} error={this.state.teamNameInFormError} errorContent={this.state.teamNameInFormErrorContent} />\r\n          <TextInput label={'Tên ngắn đội'} value={this.state.teamShortNameInForm} onChangeText={this.onChangeTeamShortNameInForm} error={this.state.teamShortNameInFormError} errorContent={this.state.teamShortNameInFormErrorContent} />\r\n          <div className=\"TournamentInfo-join-tournament-container\">\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <p>Tên</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <p>Giới tính</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <p>Tuổi</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <p>Email</p>\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-setting\">\r\n            </div>\r\n          </div>\r\n          {this.state.listPlayerInForm.map((item, index) => <Player onDelete={this.onDeletePlayer} info={item} freeToEdit={true} key={index} index={index} />)}\r\n          <div className=\"TournamentInfo-join-tournament-container\">\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <input type={'text'} onChange={this.onChangePlayerNameInForm} value={this.state.playerNameInForm} />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <Select\r\n                options={genderOptions}\r\n                className=\"Select\"\r\n                defaultValue={this.state.playerGenderInForm}\r\n                value={this.state.playerGenderInForm}\r\n                onChange={this.onChangePlayerGenderInForm}\r\n              />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item2\">\r\n              <input style={{ width: '70px' }} type={'text'} onChange={this.onChangePlayerAgeInForm} value={this.state.playerAgeInForm} />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-item1\">\r\n              <input type={'text'} onChange={this.onChangePlayerEmailInForm} value={this.state.playerEmailInForm} />\r\n            </div>\r\n            <div className=\"TournamentInfo-join-tournament-setting\">\r\n              <IoMdAddCircleOutline color={'white'} size={25} style={{ marginLeft: '3px', marginRight: '3px' }} onClick={this.addPlayer} />\r\n            </div>\r\n          </div>\r\n          {this.state.playerNameInFormError === true && <p style={{ color: 'red' }}>{this.state.playerNameInFormErrorContent}</p>}\r\n          {this.state.playerEmailInFormError === true && <p style={{ color: 'red' }}>{this.state.playerEmailInFormErrorContent}</p>}\r\n        </CustomModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    competitionInfo: state.competitionInfo,\r\n    tournamentInfo: state.tournamentInfo,\r\n    allSports: state.allSports,\r\n    sportInfo: state.sportInfo,\r\n    groupStageSetting: state.groupStageSetting,\r\n    finalStageSetting: state.finalStageSetting,\r\n    allFormats: state.allFormats,\r\n    allCompetitionByTournamentId: state.allCompetitionByTournamentId,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    editGroupStageSetting,\r\n    editFinalStageSetting,\r\n    editCompetition,\r\n    queryAllFormats,\r\n    queryCompetition,\r\n    queryTournamentInfo,\r\n    queryAllSports,\r\n    querySportInfo,\r\n    queryFinalStageSetting,\r\n    queryGroupStageSetting,\r\n    queryAllCompetitionsByTournamentId,\r\n    updateSchedule,\r\n  }\r\n)(CompetitionInfo);"]},"metadata":{},"sourceType":"module"}