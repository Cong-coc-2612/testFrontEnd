{"ast":null,"code":"import _classCallCheck from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"E:\\\\frontEnd\\\\SportTournamentSupportSystemFE\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import ReduxBlockUi from'react-block-ui/redux';import BracketRound from'components/BracketRound';import{queryListTeams}from'components/Teams/actions';import{SWAP_TWO_TEAM_IN_BRACKET_SUCCESS,SWAP_TWO_TEAM_IN_BRACKET_FAILED}from'components/BracketTeam/reducers';import{SWAP_TWO_TEAM_IN_BRACKET}from'redux-saga/actions';import{queryBracketBoardInfo,setBracketStartedStatus}from'./actions';import'./styles.css';var BracketBoard=/*#__PURE__*/function(_React$Component){_inherits(BracketBoard,_React$Component);var _super=_createSuper(BracketBoard);function BracketBoard(props){var _this;_classCallCheck(this,BracketBoard);_this=_super.call(this,props);_this.requestData=function(){var params={path:'',param:{competitionId:_this.props.competitionId},data:{}};_this.props.queryBracketBoardInfo(params);params={path:'',param:{competitionId:_this.props.competitionId,limit:999},data:{}};_this.props.queryListTeams(params);};_this.state={};return _this;}_createClass(BracketBoard,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(nextProps.bracketBoardInfo!==this.props.bracketBoardInfo){this.setState({});}return true;}},{key:\"componentDidMount\",value:function componentDidMount(){this.requestData();}},{key:\"render\",value:function render(){var _this2=this;if(this.props.bracketBoardInfo!=null){if(this.props.finalStage===true){if(this.props.bracketBoardInfo.finalStage.listRRRound!=null){return/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:SWAP_TWO_TEAM_IN_BRACKET,unblock:[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS,SWAP_TWO_TEAM_IN_BRACKET_FAILED]},/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},this.props.bracketBoardInfo.finalStage.listRRRound.map(function(item,index){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index,info:item,key:index,roundNo:index+1,totalRound:_this2.props.bracketBoardInfo.finalStage.listRRRound.length,roundRobin:true});}))));}else{return/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:SWAP_TWO_TEAM_IN_BRACKET,unblock:[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS,SWAP_TWO_TEAM_IN_BRACKET_FAILED]},/*#__PURE__*/React.createElement(\"div\",{className:'BracketBoard-text'},/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")),/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},this.props.bracketBoardInfo==null||this.props.listTeam==null||this.props.bracketBoardInfo.finalStage==null?/*#__PURE__*/React.createElement(\"p\",null,\"Ch\\u01B0a c\\xF3 th\\xF4ng tin!\"):this.props.bracketBoardInfo.finalStage.listRound!=null?this.props.bracketBoardInfo.finalStage.listRound.map(function(item,index){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index,info:item,key:index,roundNo:index+1,totalRound:_this2.props.bracketBoardInfo.finalStage.listRound.length});}):this.props.bracketBoardInfo.finalStage.listWinRound.map(function(item,index){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index,info:item,key:index,roundNo:index+1,totalRound:_this2.props.bracketBoardInfo.finalStage.listWinRound.length});})),/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},this.props.bracketBoardInfo!=null&&this.props.bracketBoardInfo.finalStage&&this.props.bracketBoardInfo.finalStage.listLoseRound!=null&&this.props.bracketBoardInfo.finalStage.listLoseRound.map(function(item,index){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index,info:item,key:index,roundNo:index+1,totalRound:_this2.props.bracketBoardInfo.finalStage.listLoseRound.length});}))));}}else{if(this.props.bracketBoardInfo.groupStage.listTableRR!=null){return/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:SWAP_TWO_TEAM_IN_BRACKET,unblock:[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS,SWAP_TWO_TEAM_IN_BRACKET_FAILED]},/*#__PURE__*/React.createElement(\"div\",{className:'BracketBoard-text'},/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")),this.props.bracketBoardInfo.groupStage.listTableRR.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container-container\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1EA3ng \",item.tableName)),/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},item.listRRRound.length>0?item.listRRRound.map(function(item2,index2){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index2,info:item2,key:index2,roundNo:index2+1,totalRound:item.listRRRound.length,roundRobin:true});}):/*#__PURE__*/React.createElement(\"p\",null,\"Kh\\xF4ng th\\u1EC3 l\\u1EADp l\\u1ECBch cho b\\u1EA3ng n\\xE0y!\")));}));}else{if(this.props.bracketBoardInfo.groupStage!=null&&this.props.listTeam!=null){if(this.props.bracketBoardInfo.groupStage.listTableSE!=null){return/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:SWAP_TWO_TEAM_IN_BRACKET,unblock:[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS,SWAP_TWO_TEAM_IN_BRACKET_FAILED]},/*#__PURE__*/React.createElement(\"div\",{className:'BracketBoard-text'},/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")),this.props.bracketBoardInfo.groupStage.listTableSE.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container-container\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1EA3ng \",item.tableName)),/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},item.listRound!=null&&item.listRound.length>0?item.listRound.map(function(item2,index2){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index2,info:item2,key:index2,roundNo:index2+1,totalRound:item.listRound.length});}):/*#__PURE__*/React.createElement(\"p\",null,\"Kh\\xF4ng th\\u1EC3 l\\u1EADp l\\u1ECBch cho b\\u1EA3ng n\\xE0y!\")));}));}else if(this.props.bracketBoardInfo.groupStage.listTableDE!=null){return/*#__PURE__*/React.createElement(ReduxBlockUi,{tag:\"div\",block:SWAP_TWO_TEAM_IN_BRACKET,unblock:[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS,SWAP_TWO_TEAM_IN_BRACKET_FAILED]},/*#__PURE__*/React.createElement(\"div\",{className:'BracketBoard-text'},/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1EA1n c\\xF3 th\\u1EC3 \\u0111\\u1ED5i ch\\u1ED7 c\\xE1c \\u0111\\u1ED9i thi \\u0111\\u1EA5u b\\u1EB1ng c\\xE1ch b\\u1EA5m v\\xE0o 2 \\u0111\\u1ED9i, Thay \\u0111\\u1ED5i n\\xE0y ch\\u1EC9 c\\xF3 th\\u1EC3 th\\u1EF1c hi\\u1EC7n khi gi\\u1EA3i \\u0111\\u1EA5u ch\\u01B0a b\\u1EAFt \\u0111\\u1EA7u\")),this.props.bracketBoardInfo.groupStage.listTableDE.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container-container\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},/*#__PURE__*/React.createElement(\"p\",null,\"B\\u1EA3ng \",item.tableName)),/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},item.listWinRound!=null&&item.listWinRound.length>0?item.listWinRound.map(function(item2,index2){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index2,info:item2,key:index2,roundNo:index2+1,totalRound:item.listWinRound.length});}):/*#__PURE__*/React.createElement(\"p\",null,\"Kh\\xF4ng th\\u1EC3 l\\u1EADp l\\u1ECBch cho b\\u1EA3ng n\\xE0y!\")),/*#__PURE__*/React.createElement(\"div\",{className:\"BracketBoard-container\"},item.listLoseRound!=null&&item.listLoseRound.length>0&&item.listLoseRound.map(function(item2,index2){return/*#__PURE__*/React.createElement(BracketRound,{competitionId:_this2.props.competitionId,index:index2,info:item2,key:index2,roundNo:index2+1,totalRound:item.listLoseRound.length});})));}));}}else{return/*#__PURE__*/React.createElement(\"p\",null,\"Ch\\u01B0a c\\xF3 th\\xF4ng tin!\");}}}}else{return/*#__PURE__*/React.createElement(\"p\",null,\"Ch\\u01B0a c\\xF3 th\\xF4ng tin!\");}}}]);return BracketBoard;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{listTeam:state.listTeam,bracketBoardInfo:state.bracketBoardInfo};};export default connect(mapStateToProps,{queryBracketBoardInfo:queryBracketBoardInfo,setBracketStartedStatus:setBracketStartedStatus,queryListTeams:queryListTeams})(BracketBoard);","map":{"version":3,"sources":["E:/frontEnd/SportTournamentSupportSystemFE/src/components/BracketBoard/index.tsx"],"names":["React","connect","ReduxBlockUi","BracketRound","queryListTeams","SWAP_TWO_TEAM_IN_BRACKET_SUCCESS","SWAP_TWO_TEAM_IN_BRACKET_FAILED","SWAP_TWO_TEAM_IN_BRACKET","queryBracketBoardInfo","setBracketStartedStatus","BracketBoard","props","requestData","params","path","param","competitionId","data","limit","state","nextProps","nextState","bracketBoardInfo","setState","finalStage","listRRRound","map","item","index","length","listTeam","listRound","listWinRound","listLoseRound","groupStage","listTableRR","tableName","item2","index2","listTableSE","listTableDE","Component","mapStateToProps"],"mappings":"gpBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CAGA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,gCAAT,CAA2CC,+BAA3C,KAAkF,iCAAlF,CACA,OAASC,wBAAT,KAAyC,oBAAzC,CACA,OAASC,qBAAT,CAAgCC,uBAAhC,KAA+D,WAA/D,CACA,MAAO,cAAP,C,GAgBMC,CAAAA,Y,wHAEJ,sBAAYC,KAAZ,CAAuC,8CACrC,uBAAMA,KAAN,EADqC,MAiB/BC,WAjB+B,CAiBjB,UAAM,CAC1B,GAAIC,CAAAA,MAAmB,CAAG,CACxBC,IAAI,CAAE,EADkB,CAExBC,KAAK,CAAE,CACLC,aAAa,CAAE,MAAKL,KAAL,CAAWK,aADrB,CAFiB,CAKxBC,IAAI,CAAE,EALkB,CAA1B,CAOA,MAAKN,KAAL,CAAWH,qBAAX,CAAiCK,MAAjC,EACAA,MAAM,CAAG,CACPC,IAAI,CAAE,EADC,CAEPC,KAAK,CAAE,CACLC,aAAa,CAAE,MAAKL,KAAL,CAAWK,aADrB,CAELE,KAAK,CAAE,GAFF,CAFA,CAMPD,IAAI,CAAE,EANC,CAAT,CAQA,MAAKN,KAAL,CAAWP,cAAX,CAA0BS,MAA1B,EACD,CAnCsC,CAErC,MAAKM,KAAL,CAAa,EAAb,CAFqC,aAItC,C,6FAEqBC,S,CAA+BC,S,CAA+B,CAClF,GAAID,SAAS,CAACE,gBAAV,GAA+B,KAAKX,KAAL,CAAWW,gBAA9C,CAAgE,CAC9D,KAAKC,QAAL,CAAc,EAAd,EACD,CACD,MAAO,KAAP,CACD,C,6DAEmB,CAClB,KAAKX,WAAL,GACD,C,uCAsBQ,iBACP,GAAI,KAAKD,KAAL,CAAWW,gBAAX,EAA+B,IAAnC,CAAyC,CACvC,GAAI,KAAKX,KAAL,CAAWa,UAAX,GAA0B,IAA9B,CAAoC,CAClC,GAAK,KAAKb,KAAL,CAAWW,gBAAX,CAA4BE,UAA7B,CAAoDC,WAApD,EAAmE,IAAvE,CAA6E,CAC3E,mBACE,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAElB,wBAFT,CAGE,OAAO,CAAE,CAACF,gCAAD,CAAmCC,+BAAnC,CAHX,eAKE,2BAAK,SAAS,CAAC,kCAAf,eACE,2BAAK,SAAS,CAAC,wBAAf,EACK,KAAKK,KAAL,CAAWW,gBAAX,CAA4BE,UAA7B,CAAoDC,WAArD,CAA+EC,GAA/E,CAAmF,SAACC,IAAD,CAAOC,KAAP,qBAClF,oBAAC,YAAD,EACE,aAAa,CAAE,MAAI,CAACjB,KAAL,CAAWK,aAD5B,CAEE,KAAK,CAAEY,KAFT,CAGE,IAAI,CAAED,IAHR,CAIE,GAAG,CAAEC,KAJP,CAKE,OAAO,CAAEA,KAAK,CAAG,CALnB,CAME,UAAU,CAAI,MAAI,CAACjB,KAAL,CAAWW,gBAAX,CAA6BE,UAA9B,CAAqDC,WAAtD,CAAgFI,MAN9F,CAOE,UAAU,CAAE,IAPd,EADkF,EAAnF,CADH,CADF,CALF,CADF,CAuBD,CAxBD,IAwBO,CACL,mBACE,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAEtB,wBAFT,CAGE,OAAO,CAAE,CAACF,gCAAD,CAAmCC,+BAAnC,CAHX,eAKE,2BAAK,SAAS,CAAE,mBAAhB,eACE,2SADF,CALF,cAQE,2BAAK,SAAS,CAAC,kCAAf,eACE,2BAAK,SAAS,CAAC,wBAAf,EACG,KAAKK,KAAL,CAAWW,gBAAX,EAA+B,IAA/B,EAAuC,KAAKX,KAAL,CAAWmB,QAAX,EAAuB,IAA9D,EAAsE,KAAKnB,KAAL,CAAWW,gBAAX,CAA4BE,UAA5B,EAA0C,IAAhH,cACG,6DADH,CAEK,KAAKb,KAAL,CAAWW,gBAAX,CAA4BE,UAA7B,CAAoDO,SAApD,EAAiE,IAAjE,CAA0E,KAAKpB,KAAL,CAAWW,gBAAX,CAA4BE,UAA7B,CAAoDO,SAArD,CAAwFL,GAAxF,CAA4F,SAACC,IAAD,CAAOC,KAAP,qBACpK,oBAAC,YAAD,EAAc,aAAa,CAAE,MAAI,CAACjB,KAAL,CAAWK,aAAxC,CAAuD,KAAK,CAAEY,KAA9D,CAAqE,IAAI,CAAED,IAA3E,CAAiF,GAAG,CAAEC,KAAtF,CAA6F,OAAO,CAAEA,KAAK,CAAG,CAA9G,CAAiH,UAAU,CAAI,MAAI,CAACjB,KAAL,CAAWW,gBAAX,CAA6BE,UAA9B,CAAqDO,SAAtD,CAA0FF,MAAvN,EADoK,EAA5F,CAAxE,CAEC,KAAKlB,KAAL,CAAWW,gBAAX,CAA4BE,UAA7B,CAAoDQ,YAArD,CAA2FN,GAA3F,CAA+F,SAACC,IAAD,CAAOC,KAAP,qBAC7F,oBAAC,YAAD,EAAc,aAAa,CAAE,MAAI,CAACjB,KAAL,CAAWK,aAAxC,CAAuD,KAAK,CAAEY,KAA9D,CAAqE,IAAI,CAAED,IAA3E,CAAiF,GAAG,CAAEC,KAAtF,CAA6F,OAAO,CAAEA,KAAK,CAAG,CAA9G,CAAiH,UAAU,CAAI,MAAI,CAACjB,KAAL,CAAWW,gBAAX,CAA6BE,UAA9B,CAAqDQ,YAAtD,CAA6FH,MAA1N,EAD6F,EAA/F,CALN,CADF,cAWE,2BAAK,SAAS,CAAC,wBAAf,EACG,KAAKlB,KAAL,CAAWW,gBAAX,EAA+B,IAA/B,EAAuC,KAAKX,KAAL,CAAWW,gBAAX,CAA4BE,UAAnE,EAAkF,KAAKb,KAAL,CAAWW,gBAAX,CAA4BE,UAA7B,CAAoDS,aAApD,EAAqE,IAAtJ,EAAgK,KAAKtB,KAAL,CAAWW,gBAAX,CAA4BE,UAA7B,CAAoDS,aAArD,CAA4FP,GAA5F,CAAgG,SAACC,IAAD,CAAOC,KAAP,qBAC7P,oBAAC,YAAD,EAAc,aAAa,CAAE,MAAI,CAACjB,KAAL,CAAWK,aAAxC,CAAuD,KAAK,CAAEY,KAA9D,CAAqE,IAAI,CAAED,IAA3E,CAAiF,GAAG,CAAEC,KAAtF,CAA6F,OAAO,CAAEA,KAAK,CAAG,CAA9G,CAAiH,UAAU,CAAI,MAAI,CAACjB,KAAL,CAAWW,gBAAX,CAA6BE,UAA9B,CAAqDS,aAAtD,CAA8FJ,MAA3N,EAD6P,EAAhG,CADjK,CAXF,CARF,CADF,CA2BD,CACF,CAtDD,IAsDO,CACL,GAAK,KAAKlB,KAAL,CAAWW,gBAAX,CAA4BY,UAA7B,CAAoDC,WAApD,EAAmE,IAAvE,CAA6E,CAC3E,mBACE,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAE5B,wBAFT,CAGE,OAAO,CAAE,CAACF,gCAAD,CAAmCC,+BAAnC,CAHX,eAKE,2BAAK,SAAS,CAAE,mBAAhB,eACE,2SADF,CALF,CAQK,KAAKK,KAAL,CAAWW,gBAAX,CAA4BY,UAA7B,CAAoDC,WAArD,CAA+ET,GAA/E,CAAmF,SAACC,IAAD,CAAOC,KAAP,qBAClF,2BAAK,SAAS,CAAC,kCAAf,CAAkD,GAAG,CAAEA,KAAvD,eACE,2BAAK,SAAS,CAAC,wBAAf,eACE,0CAASD,IAAI,CAACS,SAAd,CADF,CADF,cAIE,2BAAK,SAAS,CAAC,wBAAf,EACIT,IAAI,CAACF,WAAN,CAAgCI,MAAhC,CAAyC,CAAzC,CAA+CF,IAAI,CAACF,WAAN,CAAgCC,GAAhC,CAAoC,SAACW,KAAD,CAAQC,MAAR,qBACjF,oBAAC,YAAD,EACE,aAAa,CAAE,MAAI,CAAC3B,KAAL,CAAWK,aAD5B,CAEE,KAAK,CAAEsB,MAFT,CAGE,IAAI,CAAED,KAHR,CAIE,GAAG,CAAEC,MAJP,CAKE,OAAO,CAAEA,MAAM,CAAG,CALpB,CAME,UAAU,CAAGX,IAAI,CAACF,WAAN,CAAgCI,MAN9C,CAOE,UAAU,CAAE,IAPd,EADiF,EAApC,CAA9C,cAUI,0FAXP,CAJF,CADkF,EAAnF,CARH,CADF,CA8BD,CA/BD,IA+BO,CACL,GAAI,KAAKlB,KAAL,CAAWW,gBAAX,CAA4BY,UAA5B,EAA0C,IAA1C,EAAkD,KAAKvB,KAAL,CAAWmB,QAAX,EAAuB,IAA7E,CAAmF,CACjF,GAAK,KAAKnB,KAAL,CAAWW,gBAAX,CAA4BY,UAA7B,CAAoDK,WAApD,EAAmE,IAAvE,CAA6E,CAC3E,mBACE,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAEhC,wBAFT,CAGE,OAAO,CAAE,CAACF,gCAAD,CAAmCC,+BAAnC,CAHX,eAKE,2BAAK,SAAS,CAAE,mBAAhB,eACE,2SADF,CALF,CAQK,KAAKK,KAAL,CAAWW,gBAAX,CAA4BY,UAA7B,CAAoDK,WAArD,CAA+Eb,GAA/E,CAAmF,SAACC,IAAD,CAAOC,KAAP,qBAClF,2BAAK,SAAS,CAAC,kCAAf,CAAkD,GAAG,CAAEA,KAAvD,eACE,2BAAK,SAAS,CAAC,wBAAf,eACE,0CAASD,IAAI,CAACS,SAAd,CADF,CADF,cAIE,2BAAK,SAAS,CAAC,wBAAf,EACIT,IAAI,CAACI,SAAL,EAAkB,IAAlB,EAA2BJ,IAAI,CAACI,SAAN,CAA8BF,MAA9B,CAAuC,CAAjE,CACCF,IAAI,CAACI,SAAN,CAA8BL,GAA9B,CAAkC,SAACW,KAAD,CAAQC,MAAR,qBAC/B,oBAAC,YAAD,EAAc,aAAa,CAAE,MAAI,CAAC3B,KAAL,CAAWK,aAAxC,CAAuD,KAAK,CAAEsB,MAA9D,CAAsE,IAAI,CAAED,KAA5E,CAAmF,GAAG,CAAEC,MAAxF,CAAgG,OAAO,CAAEA,MAAM,CAAG,CAAlH,CAAqH,UAAU,CAAGX,IAAI,CAACI,SAAN,CAA8BF,MAA/J,EAD+B,EAAlC,CADA,cAGA,0FAJJ,CAJF,CADkF,EAAnF,CARH,CADF,CAyBD,CA1BD,IA0BO,IAAK,KAAKlB,KAAL,CAAWW,gBAAX,CAA4BY,UAA7B,CAAoDM,WAApD,EAAmE,IAAvE,CAA6E,CAClF,mBACE,oBAAC,YAAD,EACE,GAAG,CAAC,KADN,CAEE,KAAK,CAAEjC,wBAFT,CAGE,OAAO,CAAE,CAACF,gCAAD,CAAmCC,+BAAnC,CAHX,eAKE,2BAAK,SAAS,CAAE,mBAAhB,eACE,2SADF,CALF,CAQK,KAAKK,KAAL,CAAWW,gBAAX,CAA4BY,UAA7B,CAAoDM,WAArD,CAA+Ed,GAA/E,CAAmF,SAACC,IAAD,CAAOC,KAAP,qBAClF,2BAAK,SAAS,CAAC,kCAAf,CAAkD,GAAG,CAAEA,KAAvD,eACE,2BAAK,SAAS,CAAC,wBAAf,eACE,0CAASD,IAAI,CAACS,SAAd,CADF,CADF,cAIE,2BAAK,SAAS,CAAC,wBAAf,EACIT,IAAI,CAACK,YAAL,EAAqB,IAArB,EAA8BL,IAAI,CAACK,YAAN,CAAiCH,MAAjC,CAA0C,CAAvE,CACCF,IAAI,CAACK,YAAN,CAAiCN,GAAjC,CAAqC,SAACW,KAAD,CAAQC,MAAR,qBAClC,oBAAC,YAAD,EAAc,aAAa,CAAE,MAAI,CAAC3B,KAAL,CAAWK,aAAxC,CAAuD,KAAK,CAAEsB,MAA9D,CAAsE,IAAI,CAAED,KAA5E,CAAmF,GAAG,CAAEC,MAAxF,CAAgG,OAAO,CAAEA,MAAM,CAAG,CAAlH,CAAqH,UAAU,CAAGX,IAAI,CAACK,YAAN,CAAiCH,MAAlK,EADkC,EAArC,CADA,cAGA,0FAJJ,CAJF,cAYE,2BAAK,SAAS,CAAC,wBAAf,EACIF,IAAI,CAACM,aAAL,EAAsB,IAAtB,EAA+BN,IAAI,CAACM,aAAN,CAAkCJ,MAAlC,CAA2C,CAAzE,EACCF,IAAI,CAACM,aAAN,CAAkCP,GAAlC,CAAsC,SAACW,KAAD,CAAQC,MAAR,qBACnC,oBAAC,YAAD,EAAc,aAAa,CAAE,MAAI,CAAC3B,KAAL,CAAWK,aAAxC,CAAuD,KAAK,CAAEsB,MAA9D,CAAsE,IAAI,CAAED,KAA5E,CAAmF,GAAG,CAAEC,MAAxF,CAAgG,OAAO,CAAEA,MAAM,CAAG,CAAlH,CAAqH,UAAU,CAAGX,IAAI,CAACM,aAAN,CAAkCJ,MAAnK,EADmC,EAAtC,CAFJ,CAZF,CADkF,EAAnF,CARH,CADF,CAiCD,CACF,CA9DD,IA8DO,CACL,mBACE,6DADF,CAGD,CACF,CACF,CACF,CA7JD,IA6JO,CACL,mBAAQ,6DAAR,CACD,CACF,C,0BAxMwB7B,KAAK,CAACyC,S,EA4MjC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACvB,KAAD,CAAmB,CACzC,MAAO,CACLW,QAAQ,CAAEX,KAAK,CAACW,QADX,CAELR,gBAAgB,CAAEH,KAAK,CAACG,gBAFnB,CAAP,CAID,CALD,CAOA,cAAerB,CAAAA,OAAO,CACpByC,eADoB,CAEpB,CACElC,qBAAqB,CAArBA,qBADF,CAEEC,uBAAuB,CAAvBA,uBAFF,CAGEL,cAAc,CAAdA,cAHF,CAFoB,CAAP,CAObM,YAPa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReduxBlockUi from 'react-block-ui/redux';\r\nimport BracketRound from 'components/BracketRound';\r\nimport { IState } from 'redux-saga/reducers';\r\nimport { IBigRequest, IParams } from 'interfaces/common';\r\nimport { queryListTeams } from 'components/Teams/actions';\r\nimport { SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED } from 'components/BracketTeam/reducers';\r\nimport { SWAP_TWO_TEAM_IN_BRACKET } from 'redux-saga/actions';\r\nimport { queryBracketBoardInfo, setBracketStartedStatus } from './actions';\r\nimport './styles.css';\r\n\r\ninterface IBracketBoardProps extends React.ClassAttributes<BracketBoard> {\r\n  bracketBoardInfo: IParams | null;\r\n  competitionId: number;\r\n  listTeam: IParams[] | null;\r\n  finalStage: boolean;\r\n\r\n  queryBracketBoardInfo(params: IBigRequest): void;\r\n  setBracketStartedStatus(params: boolean): void;\r\n  queryListTeams(params: IBigRequest): void;\r\n}\r\n\r\ninterface IBracketBoardState {\r\n}\r\n\r\nclass BracketBoard extends React.Component<IBracketBoardProps, IBracketBoardState> {\r\n\r\n  constructor(props: IBracketBoardProps) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: IBracketBoardProps, nextState: IBracketBoardState) {\r\n    if (nextProps.bracketBoardInfo !== this.props.bracketBoardInfo) {\r\n      this.setState({});\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestData();\r\n  }\r\n\r\n  private requestData = () => {\r\n    let params: IBigRequest = {\r\n      path: '',\r\n      param: {\r\n        competitionId: this.props.competitionId,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryBracketBoardInfo(params);\r\n    params = {\r\n      path: '',\r\n      param: {\r\n        competitionId: this.props.competitionId,\r\n        limit: 999,\r\n      },\r\n      data: {},\r\n    };\r\n    this.props.queryListTeams(params);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.bracketBoardInfo != null) {\r\n      if (this.props.finalStage === true) {\r\n        if ((this.props.bracketBoardInfo.finalStage as IParams).listRRRound != null) {\r\n          return (\r\n            <ReduxBlockUi\r\n              tag=\"div\"\r\n              block={SWAP_TWO_TEAM_IN_BRACKET}\r\n              unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n            >\r\n              <div className=\"BracketBoard-container-container\">\r\n                <div className=\"BracketBoard-container\">\r\n                  {((this.props.bracketBoardInfo.finalStage as IParams).listRRRound as IParams[]).map((item, index) =>\r\n                    <BracketRound\r\n                      competitionId={this.props.competitionId}\r\n                      index={index}\r\n                      info={item}\r\n                      key={index}\r\n                      roundNo={index + 1}\r\n                      totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listRRRound as IParams[]).length}\r\n                      roundRobin={true}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </ReduxBlockUi>\r\n          );\r\n        } else {\r\n          return (\r\n            <ReduxBlockUi\r\n              tag=\"div\"\r\n              block={SWAP_TWO_TEAM_IN_BRACKET}\r\n              unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n            >\r\n              <div className={'BracketBoard-text'}>\r\n                <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n              </div>\r\n              <div className=\"BracketBoard-container-container\">\r\n                <div className=\"BracketBoard-container\">\r\n                  {this.props.bracketBoardInfo == null || this.props.listTeam == null || this.props.bracketBoardInfo.finalStage == null\r\n                    ? <p>Chưa có thông tin!</p>\r\n                    : ((this.props.bracketBoardInfo.finalStage as IParams).listRound != null ? ((this.props.bracketBoardInfo.finalStage as IParams).listRound as unknown as IParams[]).map((item, index) =>\r\n                      (<BracketRound competitionId={this.props.competitionId} index={index} info={item} key={index} roundNo={index + 1} totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listRound! as unknown as IParams[]).length} />)) :\r\n                      ((this.props.bracketBoardInfo.finalStage as IParams).listWinRound as unknown as IParams[]).map((item, index) =>\r\n                        <BracketRound competitionId={this.props.competitionId} index={index} info={item} key={index} roundNo={index + 1} totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listWinRound! as unknown as IParams[]).length} />)\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"BracketBoard-container\">\r\n                  {this.props.bracketBoardInfo != null && this.props.bracketBoardInfo.finalStage && (this.props.bracketBoardInfo.finalStage as IParams).listLoseRound != null && ((this.props.bracketBoardInfo.finalStage as IParams).listLoseRound as unknown as IParams[]).map((item, index) =>\r\n                    <BracketRound competitionId={this.props.competitionId} index={index} info={item} key={index} roundNo={index + 1} totalRound={((this.props.bracketBoardInfo!.finalStage as IParams).listLoseRound! as unknown as IParams[]).length} />)}\r\n                </div>\r\n              </div>\r\n            </ReduxBlockUi>\r\n          );\r\n        }\r\n      } else {\r\n        if ((this.props.bracketBoardInfo.groupStage as IParams).listTableRR != null) {\r\n          return (\r\n            <ReduxBlockUi\r\n              tag=\"div\"\r\n              block={SWAP_TWO_TEAM_IN_BRACKET}\r\n              unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n            >\r\n              <div className={'BracketBoard-text'}>\r\n                <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n              </div>\r\n              {((this.props.bracketBoardInfo.groupStage as IParams).listTableRR as IParams[]).map((item, index) =>\r\n                <div className=\"BracketBoard-container-container\" key={index}>\r\n                  <div className=\"BracketBoard-container\">\r\n                    <p>Bảng {item.tableName}</p>\r\n                  </div>\r\n                  <div className=\"BracketBoard-container\">\r\n                    {(item.listRRRound as IParams[]).length > 0 ? ((item.listRRRound as IParams[]).map((item2, index2) =>\r\n                      <BracketRound\r\n                        competitionId={this.props.competitionId}\r\n                        index={index2}\r\n                        info={item2}\r\n                        key={index2}\r\n                        roundNo={index2 + 1}\r\n                        totalRound={(item.listRRRound as IParams[]).length}\r\n                        roundRobin={true}\r\n                      />\r\n                    )) : <p>Không thể lập lịch cho bảng này!</p>}\r\n                  </div>\r\n                </div>)}\r\n            </ReduxBlockUi>\r\n          );\r\n        } else {\r\n          if (this.props.bracketBoardInfo.groupStage != null && this.props.listTeam != null) {\r\n            if ((this.props.bracketBoardInfo.groupStage as IParams).listTableSE != null) {\r\n              return (\r\n                <ReduxBlockUi\r\n                  tag=\"div\"\r\n                  block={SWAP_TWO_TEAM_IN_BRACKET}\r\n                  unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n                >\r\n                  <div className={'BracketBoard-text'}>\r\n                    <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n                  </div>\r\n                  {((this.props.bracketBoardInfo.groupStage as IParams).listTableSE as IParams[]).map((item, index) =>\r\n                    <div className=\"BracketBoard-container-container\" key={index}>\r\n                      <div className=\"BracketBoard-container\">\r\n                        <p>Bảng {item.tableName}</p>\r\n                      </div>\r\n                      <div className=\"BracketBoard-container\">\r\n                        {(item.listRound != null && (item.listRound as IParams[]).length > 0 ?\r\n                          (item.listRound as IParams[]).map((item2, index2) =>\r\n                            (<BracketRound competitionId={this.props.competitionId} index={index2} info={item2} key={index2} roundNo={index2 + 1} totalRound={(item.listRound as IParams[]).length} />)) :\r\n                          <p>Không thể lập lịch cho bảng này!</p>\r\n                        )\r\n                        }\r\n                      </div>\r\n                    </div>)}\r\n                </ReduxBlockUi>\r\n              );\r\n            } else if ((this.props.bracketBoardInfo.groupStage as IParams).listTableDE != null) {\r\n              return (\r\n                <ReduxBlockUi\r\n                  tag=\"div\"\r\n                  block={SWAP_TWO_TEAM_IN_BRACKET}\r\n                  unblock={[SWAP_TWO_TEAM_IN_BRACKET_SUCCESS, SWAP_TWO_TEAM_IN_BRACKET_FAILED]}\r\n                >\r\n                  <div className={'BracketBoard-text'}>\r\n                    <p>Bạn có thể đổi chỗ các đội thi đấu bằng cách bấm vào 2 đội, Thay đổi này chỉ có thể thực hiện khi giải đấu chưa bắt đầu</p>\r\n                  </div>\r\n                  {((this.props.bracketBoardInfo.groupStage as IParams).listTableDE as IParams[]).map((item, index) =>\r\n                    <div className=\"BracketBoard-container-container\" key={index}>\r\n                      <div className=\"BracketBoard-container\">\r\n                        <p>Bảng {item.tableName}</p>\r\n                      </div>\r\n                      <div className=\"BracketBoard-container\">\r\n                        {(item.listWinRound != null && (item.listWinRound as IParams[]).length > 0 ?\r\n                          (item.listWinRound as IParams[]).map((item2, index2) =>\r\n                            (<BracketRound competitionId={this.props.competitionId} index={index2} info={item2} key={index2} roundNo={index2 + 1} totalRound={(item.listWinRound as IParams[]).length} />)) :\r\n                          <p>Không thể lập lịch cho bảng này!</p>\r\n                        )\r\n                        }\r\n                      </div>\r\n                      <div className=\"BracketBoard-container\">\r\n                        {(item.listLoseRound != null && (item.listLoseRound as IParams[]).length > 0 &&\r\n                          (item.listLoseRound as IParams[]).map((item2, index2) =>\r\n                            (<BracketRound competitionId={this.props.competitionId} index={index2} info={item2} key={index2} roundNo={index2 + 1} totalRound={(item.listLoseRound as IParams[]).length} />))\r\n                        )\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </ReduxBlockUi>\r\n              );\r\n            }\r\n          } else {\r\n            return (\r\n              <p>Chưa có thông tin!</p>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return (<p>Chưa có thông tin!</p>);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    listTeam: state.listTeam,\r\n    bracketBoardInfo: state.bracketBoardInfo,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    queryBracketBoardInfo,\r\n    setBracketStartedStatus,\r\n    queryListTeams\r\n  }\r\n)(BracketBoard);"]},"metadata":{},"sourceType":"module"}